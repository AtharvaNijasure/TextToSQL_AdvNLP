[
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t1.authorid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname != \"Mark Steedman\" AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Mark Steedman\" );",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.authorid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "!",
      "=",
      "``",
      "Mark",
      "Steedman",
      "''",
      "AND",
      "t2.paperid",
      "IN",
      "(",
      "SELECT",
      "t2.paperid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Mark",
      "Steedman",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "authorid",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "!",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "paperid",
      "in",
      "(",
      "select",
      "t2",
      ".",
      "paperid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      ")"
    ],
    "question": "How many co-authors has Mark Steedman had ?",
    "question_toks": [
      "How",
      "many",
      "co-authors",
      "has",
      "Mark",
      "Steedman",
      "had",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Mark Steedman\"",
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      25,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  9
                ],
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Mark Steedman\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.keyphraseid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Christof",
      "Dallermassl",
      "''",
      "AND",
      "t3.year",
      "=",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "keyphraseid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperkeyphrase",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "keyphrases used by Christof Dallermassl in 2000",
    "question_toks": [
      "keyphrases",
      "used",
      "by",
      "Christof",
      "Dallermassl",
      "in",
      "2000"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              22,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Christof Dallermassl\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.keyphraseid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Christof",
      "Dallermassl",
      "''",
      "AND",
      "t3.year",
      "=",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "keyphraseid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperkeyphrase",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Keyphrases used by Christof Dallermassl in 2000",
    "question_toks": [
      "Keyphrases",
      "used",
      "by",
      "Christof",
      "Dallermassl",
      "in",
      "2000"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              22,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Christof Dallermassl\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.keyphraseid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Christof",
      "Dallermassl",
      "''",
      "AND",
      "t3.year",
      "=",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "keyphraseid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperkeyphrase",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "keyphrases Christof Dallermassl used in papers written last year",
    "question_toks": [
      "keyphrases",
      "Christof",
      "Dallermassl",
      "used",
      "in",
      "papers",
      "written",
      "last",
      "year"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              22,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Christof Dallermassl\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Christof Dallermassl\" AND t3.year  =  2000;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.keyphraseid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Christof",
      "Dallermassl",
      "''",
      "AND",
      "t3.year",
      "=",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "keyphraseid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperkeyphrase",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What are keyphrases by Christof Dallermassl in 2000 ?",
    "question_toks": [
      "What",
      "are",
      "keyphrases",
      "by",
      "Christof",
      "Dallermassl",
      "in",
      "2000",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              22,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Christof Dallermassl\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname  ,  COUNT ( t3.citingpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.authorname ORDER BY COUNT ( t3.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      ",",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.citedpaperid",
      "GROUP",
      "BY",
      "t1.authorname",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      ",",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "group",
      "by",
      "t1",
      ".",
      "authorname",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "what author is most cited ?",
    "question_toks": [
      "what",
      "author",
      "is",
      "most",
      "cited",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mohammad rastegari\" AND t3.journalid  >=  0;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "mohammad",
      "rastegari",
      "''",
      "AND",
      "t3.journalid",
      ">",
      "=",
      "0",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "journalid",
      ">",
      "=",
      "value"
    ],
    "question": "journal articles by mohammad rastegari",
    "question_toks": [
      "journal",
      "articles",
      "by",
      "mohammad",
      "rastegari"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"mohammad rastegari\"",
          null
        ],
        "and",
        [
          false,
          5,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"mohammad rastegari\" AND t3.journalid  >=  0;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "mohammad",
      "rastegari",
      "''",
      "AND",
      "t3.journalid",
      ">",
      "=",
      "0",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "journalid",
      ">",
      "=",
      "value"
    ],
    "question": "Journal Papers by mohammad rastegari",
    "question_toks": [
      "Journal",
      "Papers",
      "by",
      "mohammad",
      "rastegari"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"mohammad rastegari\"",
          null
        ],
        "and",
        [
          false,
          5,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.citingpaperid",
      ")",
      ",",
      "t1.paperid",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2014",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "TACL",
      "''",
      "GROUP",
      "BY",
      "t1.paperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "citingpaperid",
      ")",
      ",",
      "t1",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "paperid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "best paper in TACL 2014 ?",
    "question_toks": [
      "best",
      "paper",
      "in",
      "TACL",
      "2014",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"TACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.citingpaperid )  ,  t1.paperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2014 AND t2.venuename  =  \"TACL\" GROUP BY t1.paperid ORDER BY COUNT ( DISTINCT t3.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.citingpaperid",
      ")",
      ",",
      "t1.paperid",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2014",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "TACL",
      "''",
      "GROUP",
      "BY",
      "t1.paperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "citingpaperid",
      ")",
      ",",
      "t1",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "paperid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "What was the best paper at TACL 2014 ?",
    "question_toks": [
      "What",
      "was",
      "the",
      "best",
      "paper",
      "at",
      "TACL",
      "2014",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"TACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2016",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "acl",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "who published at acl 2016 ?",
    "question_toks": [
      "who",
      "published",
      "at",
      "acl",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"acl\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2016",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "acl",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "acl 2016 authors",
    "question_toks": [
      "acl",
      "2016",
      "authors"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"acl\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2016",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "acl",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "authors of acl 2016 papers",
    "question_toks": [
      "authors",
      "of",
      "acl",
      "2016",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"acl\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2016",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "acl",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "List of authors acl 2016",
    "question_toks": [
      "List",
      "of",
      "authors",
      "acl",
      "2016"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"acl\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2016",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "acl",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "author published acl 2016",
    "question_toks": [
      "author",
      "published",
      "acl",
      "2016"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"acl\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2016",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "acl",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "who had papers at acl 2016 ?",
    "question_toks": [
      "who",
      "had",
      "papers",
      "at",
      "acl",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"acl\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2016 AND t3.venuename  =  \"acl\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2016",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "acl",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "List of authors in acl 2016",
    "question_toks": [
      "List",
      "of",
      "authors",
      "in",
      "acl",
      "2016"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"acl\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Multiuser Receiver in the Decision Feedback\" AND t3.year  =  2016 GROUP BY t3.paperid HAVING COUNT ( DISTINCT t1.keyphrasename )  >  1;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Multiuser",
      "Receiver",
      "in",
      "the",
      "Decision",
      "Feedback",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      "GROUP",
      "BY",
      "t3.paperid",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.keyphrasename",
      ")",
      ">",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "paperid",
      "having",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "keyphrasename",
      ")",
      ">",
      "value"
    ],
    "question": "How many papers were written on Multiuser Receiver in the Decision Feedback this year ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "written",
      "on",
      "Multiuser",
      "Receiver",
      "in",
      "the",
      "Decision",
      "Feedback",
      "this",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              10,
              true
            ],
            null
          ],
          1.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Multiuser Receiver in the Decision Feedback\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "LIKE",
      "``",
      "ImageNet",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "like",
      "value"
    ],
    "question": "How many papers run experiments on ImageNet ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "run",
      "experiments",
      "on",
      "ImageNet",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "LIKE",
      "``",
      "ImageNet",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "like",
      "value"
    ],
    "question": "How many papers used ImageNet dataset ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "used",
      "ImageNet",
      "dataset",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "LIKE",
      "``",
      "ImageNet",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "like",
      "value"
    ],
    "question": "How many papers written on ImageNet ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "written",
      "on",
      "ImageNet",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "LIKE",
      "``",
      "ImageNet",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "like",
      "value"
    ],
    "question": "how many papers are based on ImageNet",
    "question_toks": [
      "how",
      "many",
      "papers",
      "are",
      "based",
      "on",
      "ImageNet"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname LIKE \"ImageNet\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "LIKE",
      "``",
      "ImageNet",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "like",
      "value"
    ],
    "question": "how many papers use ImageNet ?",
    "question_toks": [
      "how",
      "many",
      "papers",
      "use",
      "ImageNet",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.citedpaperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.citingpaperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Mirella",
      "Lapata",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "citedpaperid",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citingpaperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "How many papers did Mirella Lapata cite ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "did",
      "Mirella",
      "Lapata",
      "cite",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Mirella Lapata\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.citedpaperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.citingpaperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Mirella",
      "Lapata",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "citedpaperid",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citingpaperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "how many papers does Mirella Lapata cite",
    "question_toks": [
      "how",
      "many",
      "papers",
      "does",
      "Mirella",
      "Lapata",
      "cite"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Mirella Lapata\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.citedpaperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t3 ON t2.paperid  =  t3.citingpaperid WHERE t1.authorname  =  \"Mirella Lapata\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.citedpaperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.citingpaperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Mirella",
      "Lapata",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "citedpaperid",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citingpaperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "how many papers has Mirella Lapata cited ?",
    "question_toks": [
      "how",
      "many",
      "papers",
      "has",
      "Mirella",
      "Lapata",
      "cited",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Mirella Lapata\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t4.venuename  =  \"VLDB\" ORDER BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Michael",
      "Stonebraker",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "VLDB",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "When does Michael Stonebraker publish the first VLDB paper ?",
    "question_toks": [
      "When",
      "does",
      "Michael",
      "Stonebraker",
      "publish",
      "the",
      "first",
      "VLDB",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Michael Stonebraker\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "semantic parsing dataset",
    "question_toks": [
      "semantic",
      "parsing",
      "dataset"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "data sets for semantic parsing",
    "question_toks": [
      "data",
      "sets",
      "for",
      "semantic",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "list datasets for semantic parsing",
    "question_toks": [
      "list",
      "datasets",
      "for",
      "semantic",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "datasets for semantic parsing",
    "question_toks": [
      "datasets",
      "for",
      "semantic",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "Datasets with semantic parsing information",
    "question_toks": [
      "Datasets",
      "with",
      "semantic",
      "parsing",
      "information"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "datasets used by semantic parsing papers",
    "question_toks": [
      "datasets",
      "used",
      "by",
      "semantic",
      "parsing",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "datasets in semantic parsing papers",
    "question_toks": [
      "datasets",
      "in",
      "semantic",
      "parsing",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "semantic parsing datasets",
    "question_toks": [
      "semantic",
      "parsing",
      "datasets"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "datasets in papers about semantic parsing",
    "question_toks": [
      "datasets",
      "in",
      "papers",
      "about",
      "semantic",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "datasets used for semantic parsing",
    "question_toks": [
      "datasets",
      "used",
      "for",
      "semantic",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "large-scale datasets used in semantic parsing",
    "question_toks": [
      "large-scale",
      "datasets",
      "used",
      "in",
      "semantic",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "datasets with semantic parsing",
    "question_toks": [
      "datasets",
      "with",
      "semantic",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t1.keyphraseid  =  t4.keyphraseid WHERE t4.keyphrasename  =  \"semantic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t1.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "datasets used for evaluating semantic parsing",
    "question_toks": [
      "datasets",
      "used",
      "for",
      "evaluating",
      "semantic",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      ",",
      "t4.venueid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Peter",
      "Mertens",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      ",",
      "t4",
      ".",
      "venueid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "where does Peter Mertens publish ?",
    "question_toks": [
      "where",
      "does",
      "Peter",
      "Mertens",
      "publish",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Peter Mertens\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      ",",
      "t4.venueid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Peter",
      "Mertens",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      ",",
      "t4",
      ".",
      "venueid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "in what venues does Peter Mertens publish ?",
    "question_toks": [
      "in",
      "what",
      "venues",
      "does",
      "Peter",
      "Mertens",
      "publish",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Peter Mertens\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid  ,  t4.venueid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Peter Mertens\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      ",",
      "t4.venueid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Peter",
      "Mertens",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      ",",
      "t4",
      ".",
      "venueid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "Where does Peter Mertens publish ?",
    "question_toks": [
      "Where",
      "does",
      "Peter",
      "Mertens",
      "publish",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Peter Mertens\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "how many papers appeared at nature communications last year",
    "question_toks": [
      "how",
      "many",
      "papers",
      "appeared",
      "at",
      "nature",
      "communications",
      "last",
      "year"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers were at nature communications 2015 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "at",
      "nature",
      "communications",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "how many papers accepted in nature communications 2015",
    "question_toks": [
      "how",
      "many",
      "papers",
      "accepted",
      "in",
      "nature",
      "communications",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers were published in nature communications in 2015 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "published",
      "in",
      "nature",
      "communications",
      "in",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers on nature communications in 2015 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "on",
      "nature",
      "communications",
      "in",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "how many papers in nature communications 2015",
    "question_toks": [
      "how",
      "many",
      "papers",
      "in",
      "nature",
      "communications",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers were accepted at nature communications 2015 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "accepted",
      "at",
      "nature",
      "communications",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers are presented in nature communications 2015 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "are",
      "presented",
      "in",
      "nature",
      "communications",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers published in nature communications in 2015 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "published",
      "in",
      "nature",
      "communications",
      "in",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "how many papers published in nature communications 2015 ?",
    "question_toks": [
      "how",
      "many",
      "papers",
      "published",
      "in",
      "nature",
      "communications",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers were published in nature communications 2015 conference ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "published",
      "in",
      "nature",
      "communications",
      "2015",
      "conference",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"nature communications\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "nature",
      "communications",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers was published in nature communications in 2015",
    "question_toks": [
      "How",
      "many",
      "papers",
      "was",
      "published",
      "in",
      "nature",
      "communications",
      "in",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nature communications\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"deep learning\" ORDER BY t4.year ASC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      ",",
      "t4.year",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t1.keyphraseid",
      "=",
      "t5.keyphraseid",
      "WHERE",
      "t5.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t4.year",
      "ASC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      ",",
      "t4",
      ".",
      "year",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "where",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t4",
      ".",
      "year",
      "asc"
    ],
    "question": "what was the first deep learning paper ?",
    "question_toks": [
      "what",
      "was",
      "the",
      "first",
      "deep",
      "learning",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid  ,  t4.year FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paperkeyphrase AS t1 ON t1.paperid  =  t3.paperid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t5.keyphrasename  =  \"deep learning\" ORDER BY t4.year ASC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      ",",
      "t4.year",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t1.keyphraseid",
      "=",
      "t5.keyphraseid",
      "WHERE",
      "t5.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t4.year",
      "ASC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      ",",
      "t4",
      ".",
      "year",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "where",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t4",
      ".",
      "year",
      "asc"
    ],
    "question": "what year was the first deep learning paper published ?",
    "question_toks": [
      "what",
      "year",
      "was",
      "the",
      "first",
      "deep",
      "learning",
      "paper",
      "published",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t4.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "datasets mentioned at ACL",
    "question_toks": [
      "datasets",
      "mentioned",
      "at",
      "ACL"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.datasetid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.datasetid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t4.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "datasetid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "what datasets do papers at ACL use most ?",
    "question_toks": [
      "what",
      "datasets",
      "do",
      "papers",
      "at",
      "ACL",
      "use",
      "most",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN paper AS t2 ON t2.paperid  =  t5.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"li dong\" AND t3.keyphrasename  =  \"semantic parsing\" AND t2.year  =  2016 AND t6.venuename  =  \"acl\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t5",
      "JOIN",
      "keyphrase",
      "AS",
      "t3",
      "ON",
      "t5.keyphraseid",
      "=",
      "t3.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t5.paperid",
      "JOIN",
      "venue",
      "AS",
      "t6",
      "ON",
      "t6.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "li",
      "dong",
      "''",
      "AND",
      "t3.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      "AND",
      "t2.year",
      "=",
      "2016",
      "AND",
      "t6.venuename",
      "=",
      "``",
      "acl",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t5",
      "join",
      "keyphrase",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "keyphraseid",
      "=",
      "t3",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "the papers on semantic parsing by li dong at acl in 2016",
    "question_toks": [
      "the",
      "papers",
      "on",
      "semantic",
      "parsing",
      "by",
      "li",
      "dong",
      "at",
      "acl",
      "in",
      "2016"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"li dong\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"acl\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "convolutional",
      "neural",
      "networks",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many papers were written on convolutional neural networks in the past year ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "written",
      "on",
      "convolutional",
      "neural",
      "networks",
      "in",
      "the",
      "past",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"convolutional neural networks\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "convolutional",
      "neural",
      "networks",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many papers were published on convolutional neural networks in 2016 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "published",
      "on",
      "convolutional",
      "neural",
      "networks",
      "in",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"convolutional neural networks\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "convolutional",
      "neural",
      "networks",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many papers were written on convolutional neural networks in 2016 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "written",
      "on",
      "convolutional",
      "neural",
      "networks",
      "in",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"convolutional neural networks\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "convolutional",
      "neural",
      "networks",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many papers were written on the convolutional neural networks this year ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "written",
      "on",
      "the",
      "convolutional",
      "neural",
      "networks",
      "this",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"convolutional neural networks\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"convolutional neural networks\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "convolutional",
      "neural",
      "networks",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "how many papers on convolutional neural networks have been published in the past year ?",
    "question_toks": [
      "how",
      "many",
      "papers",
      "on",
      "convolutional",
      "neural",
      "networks",
      "have",
      "been",
      "published",
      "in",
      "the",
      "past",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"convolutional neural networks\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "question",
      "answering",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What papers were written on question answering this year ?",
    "question_toks": [
      "What",
      "papers",
      "were",
      "written",
      "on",
      "question",
      "answering",
      "this",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"question answering\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      ",",
      "t1.year",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.year",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "year",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "year",
      "order",
      "by",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "which year had the most NIPS papers ?",
    "question_toks": [
      "which",
      "year",
      "had",
      "the",
      "most",
      "NIPS",
      "papers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      ",",
      "t1.year",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.year",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "year",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "year",
      "order",
      "by",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "what year had the most NIPS papers ?",
    "question_toks": [
      "what",
      "year",
      "had",
      "the",
      "most",
      "NIPS",
      "papers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      ",",
      "t1.year",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.year",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "year",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "year",
      "order",
      "by",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "what year had the most number of NIPS papers ?",
    "question_toks": [
      "what",
      "year",
      "had",
      "the",
      "most",
      "number",
      "of",
      "NIPS",
      "papers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid )  ,  t1.year FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"NIPS\" GROUP BY t1.year ORDER BY COUNT ( t1.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      ",",
      "t1.year",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.year",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "year",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "year",
      "order",
      "by",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "when were most NIPS papers published ?",
    "question_toks": [
      "when",
      "were",
      "most",
      "NIPS",
      "papers",
      "published",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "who writes papers with Noah A Smith ?",
    "question_toks": [
      "who",
      "writes",
      "papers",
      "with",
      "Noah",
      "A",
      "Smith",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "Who is a coauthor with Noah A Smith ?",
    "question_toks": [
      "Who",
      "is",
      "a",
      "coauthor",
      "with",
      "Noah",
      "A",
      "Smith",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "Who are Noah A Smith 's co-authors",
    "question_toks": [
      "Who",
      "are",
      "Noah",
      "A",
      "Smith",
      "'s",
      "co-authors"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "Who has coauthored with Noah A Smith ?",
    "question_toks": [
      "Who",
      "has",
      "coauthored",
      "with",
      "Noah",
      "A",
      "Smith",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "co-authors of Noah A Smith",
    "question_toks": [
      "co-authors",
      "of",
      "Noah",
      "A",
      "Smith"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "author who wrote papers with Noah A Smith",
    "question_toks": [
      "author",
      "who",
      "wrote",
      "papers",
      "with",
      "Noah",
      "A",
      "Smith"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "authors who collaborated with Noah A Smith",
    "question_toks": [
      "authors",
      "who",
      "collaborated",
      "with",
      "Noah",
      "A",
      "Smith"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "who does Noah A Smith author with ?",
    "question_toks": [
      "who",
      "does",
      "Noah",
      "A",
      "Smith",
      "author",
      "with",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "Who are Noah A Smith 's coauthors",
    "question_toks": [
      "Who",
      "are",
      "Noah",
      "A",
      "Smith",
      "'s",
      "coauthors"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "who are all the co-authors of Noah A Smith ?",
    "question_toks": [
      "who",
      "are",
      "all",
      "the",
      "co-authors",
      "of",
      "Noah",
      "A",
      "Smith",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "who does Noah A Smith work with ?",
    "question_toks": [
      "who",
      "does",
      "Noah",
      "A",
      "Smith",
      "work",
      "with",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "who does Noah A Smith collaborate with ?",
    "question_toks": [
      "who",
      "does",
      "Noah",
      "A",
      "Smith",
      "collaborate",
      "with",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "Who are Noah A Smith 's coauthors ?",
    "question_toks": [
      "Who",
      "are",
      "Noah",
      "A",
      "Smith",
      "'s",
      "coauthors",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Noah A Smith\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Noah",
      "A",
      "Smith",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "coauthors of Noah A Smith",
    "question_toks": [
      "coauthors",
      "of",
      "Noah",
      "A",
      "Smith"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah A Smith\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperdataset",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jitendra",
      "malik",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperdataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "what datasets did jitendra malik use ?",
    "question_toks": [
      "what",
      "datasets",
      "did",
      "jitendra",
      "malik",
      "use",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jitendra malik\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperdataset",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jitendra",
      "malik",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperdataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "what datasets are used in papers by jitendra malik",
    "question_toks": [
      "what",
      "datasets",
      "are",
      "used",
      "in",
      "papers",
      "by",
      "jitendra",
      "malik"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jitendra malik\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperdataset",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jitendra",
      "malik",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperdataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "what datasets did jitendra malik use in his papers ?",
    "question_toks": [
      "what",
      "datasets",
      "did",
      "jitendra",
      "malik",
      "use",
      "in",
      "his",
      "papers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jitendra malik\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperdataset",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jitendra",
      "malik",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperdataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "what datasets were used by jitendra malik ?",
    "question_toks": [
      "what",
      "datasets",
      "were",
      "used",
      "by",
      "jitendra",
      "malik",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jitendra malik\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperdataset",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jitendra",
      "malik",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperdataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "datasets used in papers written by jitendra malik ?",
    "question_toks": [
      "datasets",
      "used",
      "in",
      "papers",
      "written",
      "by",
      "jitendra",
      "malik",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jitendra malik\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperdataset",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jitendra",
      "malik",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperdataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "Datasets by jitendra malik",
    "question_toks": [
      "Datasets",
      "by",
      "jitendra",
      "malik"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jitendra malik\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.datasetid FROM paper AS t3 JOIN paperdataset AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"jitendra malik\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.datasetid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperdataset",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jitendra",
      "malik",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "datasetid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperdataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "What datasets have jitendra malik used",
    "question_toks": [
      "What",
      "datasets",
      "have",
      "jitendra",
      "malik",
      "used"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jitendra malik\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "recent deep learning papers",
    "question_toks": [
      "recent",
      "deep",
      "learning",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "new deep learning papers",
    "question_toks": [
      "new",
      "deep",
      "learning",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "What are the latest publications on deep learning ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "latest",
      "publications",
      "on",
      "deep",
      "learning",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "Most recent deep learning conference ?",
    "question_toks": [
      "Most",
      "recent",
      "deep",
      "learning",
      "conference",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "Show me some recent papers on deep learning ?",
    "question_toks": [
      "Show",
      "me",
      "some",
      "recent",
      "papers",
      "on",
      "deep",
      "learning",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "What are some recent papers written in deep learning ?",
    "question_toks": [
      "What",
      "are",
      "some",
      "recent",
      "papers",
      "written",
      "in",
      "deep",
      "learning",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "What is the most recent paper of deep learning ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "recent",
      "paper",
      "of",
      "deep",
      "learning",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "What are recent papers on deep learning ?",
    "question_toks": [
      "What",
      "are",
      "recent",
      "papers",
      "on",
      "deep",
      "learning",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "Current research on deep learning",
    "question_toks": [
      "Current",
      "research",
      "on",
      "deep",
      "learning"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "latest deep learning papers",
    "question_toks": [
      "latest",
      "deep",
      "learning",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "newest deep learning papers",
    "question_toks": [
      "newest",
      "deep",
      "learning",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Pedro Domingos\" GROUP BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Pedro",
      "Domingos",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "What years did Pedro Domingos publish papers in ?",
    "question_toks": [
      "What",
      "years",
      "did",
      "Pedro",
      "Domingos",
      "publish",
      "papers",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Pedro Domingos\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Pedro Domingos\" GROUP BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Pedro",
      "Domingos",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "In what years did Pedro Domingos publish a paper ?",
    "question_toks": [
      "In",
      "what",
      "years",
      "did",
      "Pedro",
      "Domingos",
      "publish",
      "a",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Pedro Domingos\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" ORDER BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jamie",
      "callan",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "jamie callan 's publications by year",
    "question_toks": [
      "jamie",
      "callan",
      "'s",
      "publications",
      "by",
      "year"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jamie callan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jamie",
      "callan",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "How many papers does jamie callan publish each year ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "does",
      "jamie",
      "callan",
      "publish",
      "each",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jamie callan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jamie",
      "callan",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "number of papers by year from jamie callan",
    "question_toks": [
      "number",
      "of",
      "papers",
      "by",
      "year",
      "from",
      "jamie",
      "callan"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jamie callan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"jamie callan\" GROUP BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "jamie",
      "callan",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "how many papers jamie callan published each year ?",
    "question_toks": [
      "how",
      "many",
      "papers",
      "jamie",
      "callan",
      "published",
      "each",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"jamie callan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "oren",
      "etzioni",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "who does oren etzioni cite",
    "question_toks": [
      "who",
      "does",
      "oren",
      "etzioni",
      "cite"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"oren etzioni\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "oren",
      "etzioni",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "what papers does oren etzioni cite",
    "question_toks": [
      "what",
      "papers",
      "does",
      "oren",
      "etzioni",
      "cite"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"oren etzioni\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Daniel",
      "Jurafsky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "papers citing Daniel Jurafsky",
    "question_toks": [
      "papers",
      "citing",
      "Daniel",
      "Jurafsky"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Daniel Jurafsky\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Daniel",
      "Jurafsky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "What papers cite Daniel Jurafsky ?",
    "question_toks": [
      "What",
      "papers",
      "cite",
      "Daniel",
      "Jurafsky",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Daniel Jurafsky\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Daniel",
      "Jurafsky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "Which papers cite Daniel Jurafsky ?",
    "question_toks": [
      "Which",
      "papers",
      "cite",
      "Daniel",
      "Jurafsky",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Daniel Jurafsky\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid JOIN writes AS t2 ON t2.paperid  =  t4.citedpaperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Daniel Jurafsky\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Daniel",
      "Jurafsky",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "citations for Daniel Jurafsky",
    "question_toks": [
      "citations",
      "for",
      "Daniel",
      "Jurafsky"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Daniel Jurafsky\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"instance segmentation\" AND t3.journalid  >=  0;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "instance",
      "segmentation",
      "''",
      "AND",
      "t3.journalid",
      ">",
      "=",
      "0",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "journalid",
      ">",
      "=",
      "value"
    ],
    "question": "journal papers for instance segmentation",
    "question_toks": [
      "journal",
      "papers",
      "for",
      "instance",
      "segmentation"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"instance segmentation\"",
          null
        ],
        "and",
        [
          false,
          5,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          0.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      ",",
      "t3.authorid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t1",
      "JOIN",
      "keyphrase",
      "AS",
      "t2",
      "ON",
      "t1.keyphraseid",
      "=",
      "t2.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t1.paperid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t4.paperid",
      "WHERE",
      "t2.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      "AND",
      "t4.year",
      ">",
      "2005",
      "GROUP",
      "BY",
      "t3.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "authorid",
      "from",
      "paperkeyphrase",
      "as",
      "t1",
      "join",
      "keyphrase",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t2",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "who has the most papers in semantic parsing after 2005 ?",
    "question_toks": [
      "who",
      "has",
      "the",
      "most",
      "papers",
      "in",
      "semantic",
      "parsing",
      "after",
      "2005",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      ",",
      "t3.authorid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t1",
      "JOIN",
      "keyphrase",
      "AS",
      "t2",
      "ON",
      "t1.keyphraseid",
      "=",
      "t2.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t1.paperid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t4.paperid",
      "WHERE",
      "t2.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      "AND",
      "t4.year",
      ">",
      "2005",
      "GROUP",
      "BY",
      "t3.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "authorid",
      "from",
      "paperkeyphrase",
      "as",
      "t1",
      "join",
      "keyphrase",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t2",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "who has written the most papers on semantic parsing since 2005 ?",
    "question_toks": [
      "who",
      "has",
      "written",
      "the",
      "most",
      "papers",
      "on",
      "semantic",
      "parsing",
      "since",
      "2005",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"semantic parsing\" AND t4.year  >  2005 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      ",",
      "t3.authorid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t1",
      "JOIN",
      "keyphrase",
      "AS",
      "t2",
      "ON",
      "t1.keyphraseid",
      "=",
      "t2.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t1.paperid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t4.paperid",
      "WHERE",
      "t2.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      "AND",
      "t4.year",
      ">",
      "2005",
      "GROUP",
      "BY",
      "t3.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "authorid",
      "from",
      "paperkeyphrase",
      "as",
      "t1",
      "join",
      "keyphrase",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t2",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "who published the most in semantic parsing after 2005 ?",
    "question_toks": [
      "who",
      "published",
      "the",
      "most",
      "in",
      "semantic",
      "parsing",
      "after",
      "2005",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t3 ON t2.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN cite AS t5 ON t4.paperid  =  t5.citedpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Dan Makumbi\" AND t3.keyphrasename  =  \"Genetic Identity\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t5.citingpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t3",
      "ON",
      "t2.keyphraseid",
      "=",
      "t3.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t5",
      "ON",
      "t4.paperid",
      "=",
      "t5.citedpaperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Dan",
      "Makumbi",
      "''",
      "AND",
      "t3.keyphrasename",
      "=",
      "``",
      "Genetic",
      "Identity",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t5",
      ".",
      "citingpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t3",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "citedpaperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "How many citations does Dan Makumbi 's Genetic Identity paper have ?",
    "question_toks": [
      "How",
      "many",
      "citations",
      "does",
      "Dan",
      "Makumbi",
      "'s",
      "Genetic",
      "Identity",
      "paper",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Dan Makumbi\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Genetic Identity\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "character",
      "recognition",
      "''",
      "AND",
      "t3.year",
      "<",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "character recognition papers earlier than 2010",
    "question_toks": [
      "character",
      "recognition",
      "papers",
      "earlier",
      "than",
      "2010"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"character recognition\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "character",
      "recognition",
      "''",
      "AND",
      "t3.year",
      "<",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "papers before 2010 about character recognition",
    "question_toks": [
      "papers",
      "before",
      "2010",
      "about",
      "character",
      "recognition"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"character recognition\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "character",
      "recognition",
      "''",
      "AND",
      "t3.year",
      "<",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "character recognition papers from before 2010",
    "question_toks": [
      "character",
      "recognition",
      "papers",
      "from",
      "before",
      "2010"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"character recognition\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "character",
      "recognition",
      "''",
      "AND",
      "t3.year",
      "<",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "papers about character recognition from before 2010",
    "question_toks": [
      "papers",
      "about",
      "character",
      "recognition",
      "from",
      "before",
      "2010"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"character recognition\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"character recognition\" AND t3.year  <  2010;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "character",
      "recognition",
      "''",
      "AND",
      "t3.year",
      "<",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "character recognition papers before 2010",
    "question_toks": [
      "character",
      "recognition",
      "papers",
      "before",
      "2010"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"character recognition\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.keyphraseid )  ,  t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"oren etzioni\" GROUP BY t2.keyphraseid ORDER BY COUNT ( t2.keyphraseid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.keyphraseid",
      ")",
      ",",
      "t2.keyphraseid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "oren",
      "etzioni",
      "''",
      "GROUP",
      "BY",
      "t2.keyphraseid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t2.keyphraseid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "keyphraseid",
      ")",
      ",",
      "t2",
      ".",
      "keyphraseid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperkeyphrase",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "keyphraseid",
      "order",
      "by",
      "count",
      "(",
      "t2",
      ".",
      "keyphraseid",
      ")",
      "desc"
    ],
    "question": "what topics does oren etzioni write about most ?",
    "question_toks": [
      "what",
      "topics",
      "does",
      "oren",
      "etzioni",
      "write",
      "about",
      "most",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              22,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              23,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"oren etzioni\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t4.paperid ) FROM paperdataset AS t3 JOIN dataset AS t2 ON t3.datasetid  =  t2.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN paperkeyphrase AS t1 ON t4.paperid  =  t1.paperid JOIN keyphrase AS t5 ON t1.keyphraseid  =  t5.keyphraseid WHERE t2.datasetname  =  \"ImageNet\" AND t5.keyphrasename  =  \"deep learning\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t2",
      "ON",
      "t3.datasetid",
      "=",
      "t2.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t4.paperid",
      "=",
      "t1.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t1.keyphraseid",
      "=",
      "t5.keyphraseid",
      "WHERE",
      "t2.datasetname",
      "=",
      "``",
      "ImageNet",
      "''",
      "AND",
      "t5.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t2",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "where",
      "t2",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "How many papers related to deep learning cited the dataset ImageNet ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "related",
      "to",
      "deep",
      "learning",
      "cited",
      "the",
      "dataset",
      "ImageNet",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "most cited papers on parsing",
    "question_toks": [
      "most",
      "cited",
      "papers",
      "on",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "parsing top papers",
    "question_toks": [
      "parsing",
      "top",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "List top papers for parsing",
    "question_toks": [
      "List",
      "top",
      "papers",
      "for",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "parsing papers that have the most citations",
    "question_toks": [
      "parsing",
      "papers",
      "that",
      "have",
      "the",
      "most",
      "citations"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "What is the paper about parsing of the most citation ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "paper",
      "about",
      "parsing",
      "of",
      "the",
      "most",
      "citation",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "Paper on parsing with most citations",
    "question_toks": [
      "Paper",
      "on",
      "parsing",
      "with",
      "most",
      "citations"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "parsing papers with most citations",
    "question_toks": [
      "parsing",
      "papers",
      "with",
      "most",
      "citations"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "most cited parsing papers",
    "question_toks": [
      "most",
      "cited",
      "parsing",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "what are the parsing papers that have the most citations ?",
    "question_toks": [
      "what",
      "are",
      "the",
      "parsing",
      "papers",
      "that",
      "have",
      "the",
      "most",
      "citations",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "highly cited parsing papers",
    "question_toks": [
      "highly",
      "cited",
      "parsing",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "most cited papers for parsing",
    "question_toks": [
      "most",
      "cited",
      "papers",
      "for",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"parsing\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "Most cited papers on parsing",
    "question_toks": [
      "Most",
      "cited",
      "papers",
      "on",
      "parsing"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year  ,  t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Michael Armstrong\" AND t3.year LIKE \"199\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      ",",
      "t2.paperid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "LIKE",
      "``",
      "Michael",
      "Armstrong",
      "''",
      "AND",
      "t3.year",
      "LIKE",
      "``",
      "199",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      ",",
      "t2",
      ".",
      "paperid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "like",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "like",
      "value"
    ],
    "question": "What paper did Michael Armstrong wrote in the 90s ?",
    "question_toks": [
      "What",
      "paper",
      "did",
      "Michael",
      "Armstrong",
      "wrote",
      "in",
      "the",
      "90s",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Michael Armstrong\"",
          null
        ],
        "and",
        [
          false,
          9,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"199\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ohad",
      "shamir",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "What is the most cited paper by ohad shamir ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "cited",
      "paper",
      "by",
      "ohad",
      "shamir",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ohad shamir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ohad",
      "shamir",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "What is the highest cited paper by ohad shamir ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "highest",
      "cited",
      "paper",
      "by",
      "ohad",
      "shamir",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ohad shamir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ohad",
      "shamir",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "What is the most cited paper of ohad shamir ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "cited",
      "paper",
      "of",
      "ohad",
      "shamir",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ohad shamir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ohad",
      "shamir",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "What is ohad shamir 's highest cited paper ?",
    "question_toks": [
      "What",
      "is",
      "ohad",
      "shamir",
      "'s",
      "highest",
      "cited",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ohad shamir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ohad",
      "shamir",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "What paper by ohad shamir has the most citation ?",
    "question_toks": [
      "What",
      "paper",
      "by",
      "ohad",
      "shamir",
      "has",
      "the",
      "most",
      "citation",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ohad shamir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ohad",
      "shamir",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "what is the most cited paper of ohad shamir ?",
    "question_toks": [
      "what",
      "is",
      "the",
      "most",
      "cited",
      "paper",
      "of",
      "ohad",
      "shamir",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ohad shamir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citedpaperid ) FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ohad shamir\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citedpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ohad",
      "shamir",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      "desc"
    ],
    "question": "what is ohad shamir 's most cited paper ?",
    "question_toks": [
      "what",
      "is",
      "ohad",
      "shamir",
      "'s",
      "most",
      "cited",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              19,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ohad shamir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "michael",
      "i.",
      "jordan",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many papers did michael i. jordan publish in 2016 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "did",
      "michael",
      "i.",
      "jordan",
      "publish",
      "in",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"michael i. jordan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "michael",
      "i.",
      "jordan",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many papers does michael i. jordan have in 2016 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "does",
      "michael",
      "i.",
      "jordan",
      "have",
      "in",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"michael i. jordan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"michael i. jordan\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "michael",
      "i.",
      "jordan",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many papers did michael i. jordan publish in 2016",
    "question_toks": [
      "How",
      "many",
      "papers",
      "did",
      "michael",
      "i.",
      "jordan",
      "publish",
      "in",
      "2016"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"michael i. jordan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid"
    ],
    "question": "count of ACL papers by author",
    "question_toks": [
      "count",
      "of",
      "ACL",
      "papers",
      "by",
      "author"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid"
    ],
    "question": "how many ACL papers by author",
    "question_toks": [
      "how",
      "many",
      "ACL",
      "papers",
      "by",
      "author"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\" GROUP BY t1.authorid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid"
    ],
    "question": "number of ACL papers by author",
    "question_toks": [
      "number",
      "of",
      "ACL",
      "papers",
      "by",
      "author"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2007",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "CVPR",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "who wrote the most papers for CVPR 2007",
    "question_toks": [
      "who",
      "wrote",
      "the",
      "most",
      "papers",
      "for",
      "CVPR",
      "2007"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2007.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"CVPR\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2007",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "CVPR",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "who published papers in CVPR 2007",
    "question_toks": [
      "who",
      "published",
      "papers",
      "in",
      "CVPR",
      "2007"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2007.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"CVPR\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2007",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "CVPR",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "who wrote the most CVPR papers in 2007",
    "question_toks": [
      "who",
      "wrote",
      "the",
      "most",
      "CVPR",
      "papers",
      "in",
      "2007"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2007.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"CVPR\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2007",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "CVPR",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "most published author at CVPR 2007",
    "question_toks": [
      "most",
      "published",
      "author",
      "at",
      "CVPR",
      "2007"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2007.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"CVPR\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2007",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "CVPR",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "who published the most papers in CVPR 2007",
    "question_toks": [
      "who",
      "published",
      "the",
      "most",
      "papers",
      "in",
      "CVPR",
      "2007"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2007.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"CVPR\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2007 AND t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2007",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "CVPR",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "Who published the most papers in 2007 at CVPR ?",
    "question_toks": [
      "Who",
      "published",
      "the",
      "most",
      "papers",
      "in",
      "2007",
      "at",
      "CVPR",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2007.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"CVPR\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers in ACL 2015 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "in",
      "ACL",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "number of papers published in ACL 2015",
    "question_toks": [
      "number",
      "of",
      "papers",
      "published",
      "in",
      "ACL",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "paperid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2014",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "paperid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "papers from 2014",
    "question_toks": [
      "papers",
      "from",
      "2014"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  2014;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "paperid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2014",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "paperid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "2014 papers",
    "question_toks": [
      "2014",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Richard",
      "Ladner",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "chi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "What papers does Richard Ladner have in chi ?",
    "question_toks": [
      "What",
      "papers",
      "does",
      "Richard",
      "Ladner",
      "have",
      "in",
      "chi",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Richard Ladner\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Richard",
      "Ladner",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "chi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "what paper has Richard Ladner published in chi journal ?",
    "question_toks": [
      "what",
      "paper",
      "has",
      "Richard",
      "Ladner",
      "published",
      "in",
      "chi",
      "journal",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Richard Ladner\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Richard",
      "Ladner",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "chi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "what paper has Richard Ladner published in chi ?",
    "question_toks": [
      "what",
      "paper",
      "has",
      "Richard",
      "Ladner",
      "published",
      "in",
      "chi",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Richard Ladner\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Richard",
      "Ladner",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "chi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "papers by Richard Ladner published at chi",
    "question_toks": [
      "papers",
      "by",
      "Richard",
      "Ladner",
      "published",
      "at",
      "chi"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Richard Ladner\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Richard",
      "Ladner",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "chi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Does Richard Ladner publish in chi ?",
    "question_toks": [
      "Does",
      "Richard",
      "Ladner",
      "publish",
      "in",
      "chi",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Richard Ladner\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Richard",
      "Ladner",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "chi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "What has Richard Ladner published at chi ?",
    "question_toks": [
      "What",
      "has",
      "Richard",
      "Ladner",
      "published",
      "at",
      "chi",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Richard Ladner\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Richard",
      "Ladner",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "chi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "What papers has Richard Ladner written at chi ?",
    "question_toks": [
      "What",
      "papers",
      "has",
      "Richard",
      "Ladner",
      "written",
      "at",
      "chi",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Richard Ladner\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Richard Ladner\" AND t4.venuename  =  \"chi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Richard",
      "Ladner",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "chi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Which paper did Richard Ladner present at chi ?",
    "question_toks": [
      "Which",
      "paper",
      "did",
      "Richard",
      "Ladner",
      "present",
      "at",
      "chi",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Richard Ladner\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"Artificial Intelligence\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citingpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Artificial",
      "Intelligence",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "What is the paper with the most citation about Artificial Intelligence ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "paper",
      "with",
      "the",
      "most",
      "citation",
      "about",
      "Artificial",
      "Intelligence",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Artificial Intelligence\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid  ,  COUNT ( t4.citingpaperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"Artificial Intelligence\" GROUP BY t4.citedpaperid ORDER BY COUNT ( t4.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t4.citingpaperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Artificial",
      "Intelligence",
      "''",
      "GROUP",
      "BY",
      "t4.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "Fetch me the most cited publications for Artificial Intelligence",
    "question_toks": [
      "Fetch",
      "me",
      "the",
      "most",
      "cited",
      "publications",
      "for",
      "Artificial",
      "Intelligence"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Artificial Intelligence\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2014 AND t4.venuename  =  \"ACL\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t1.keyphraseid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t3.year",
      "=",
      "2014",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t1.keyphraseid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "keyphraseid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyphraseid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "topics at ACL 2014",
    "question_toks": [
      "topics",
      "at",
      "ACL",
      "2014"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t1.keyphraseid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t3.year",
      "=",
      "2015",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.keyphraseid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "keyphraseid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyphraseid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "most common topics at NIPS 2015",
    "question_toks": [
      "most",
      "common",
      "topics",
      "at",
      "NIPS",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t1.keyphraseid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t3.year",
      "=",
      "2015",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.keyphraseid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "keyphraseid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyphraseid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "most popular topics at NIPS 2015",
    "question_toks": [
      "most",
      "popular",
      "topics",
      "at",
      "NIPS",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t1.keyphraseid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t3.year",
      "=",
      "2015",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.keyphraseid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "keyphraseid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyphraseid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "hot topics at NIPS 2015",
    "question_toks": [
      "hot",
      "topics",
      "at",
      "NIPS",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t1.keyphraseid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t3.year",
      "=",
      "2015",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.keyphraseid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "keyphraseid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyphraseid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "popular topics at NIPS 2015",
    "question_toks": [
      "popular",
      "topics",
      "at",
      "NIPS",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t1.keyphraseid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t3.year",
      "=",
      "2015",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.keyphraseid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "keyphraseid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyphraseid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "which topics were most popular at NIPS 2015",
    "question_toks": [
      "which",
      "topics",
      "were",
      "most",
      "popular",
      "at",
      "NIPS",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t3.year  =  2015 AND t4.venuename  =  \"NIPS\" GROUP BY t1.keyphraseid ORDER BY COUNT ( t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t1.keyphraseid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t3.year",
      "=",
      "2015",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      "GROUP",
      "BY",
      "t1.keyphraseid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "keyphraseid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyphraseid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "topics popular at NIPS 2015",
    "question_toks": [
      "topics",
      "popular",
      "at",
      "NIPS",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          9,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"deep reinforcement learning\" AND t4.venuename  =  \"nips\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "reinforcement",
      "learning",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "nips",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers related to deep reinforcement learning in nips ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "related",
      "to",
      "deep",
      "reinforcement",
      "learning",
      "in",
      "nips",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep reinforcement learning\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"nips\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "WebKB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "Papers on WebKB",
    "question_toks": [
      "Papers",
      "on",
      "WebKB"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"WebKB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "WebKB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "which papers used WebKB ?",
    "question_toks": [
      "which",
      "papers",
      "used",
      "WebKB",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"WebKB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "WebKB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "papers about WebKB",
    "question_toks": [
      "papers",
      "about",
      "WebKB"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"WebKB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "WebKB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "List the papers that used WebKB dataset",
    "question_toks": [
      "List",
      "the",
      "papers",
      "that",
      "used",
      "WebKB",
      "dataset"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"WebKB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "WebKB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "papers using WebKB",
    "question_toks": [
      "papers",
      "using",
      "WebKB"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"WebKB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "WebKB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "papers that use WebKB",
    "question_toks": [
      "papers",
      "that",
      "use",
      "WebKB"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"WebKB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "WebKB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "WebKB papers",
    "question_toks": [
      "WebKB",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"WebKB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "WebKB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "papers that used WebKB",
    "question_toks": [
      "papers",
      "that",
      "used",
      "WebKB"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"WebKB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"WebKB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "WebKB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "Papers that use the WebKB dataset",
    "question_toks": [
      "Papers",
      "that",
      "use",
      "the",
      "WebKB",
      "dataset"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"WebKB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT venueid FROM paper WHERE YEAR  =  2013;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "venueid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2013",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "venueid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "conferences in 2013",
    "question_toks": [
      "conferences",
      "in",
      "2013"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.citingpaperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t1.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "CVPR",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "citingpaperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "how is the most cited author in CVPR ?",
    "question_toks": [
      "how",
      "is",
      "the",
      "most",
      "cited",
      "author",
      "in",
      "CVPR",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"CVPR\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid JOIN cite AS t4 ON t1.paperid  =  t4.citedpaperid WHERE t3.venuename  =  \"CVPR\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.citingpaperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t1.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "CVPR",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "citingpaperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "who is the most cited author at CVPR ?",
    "question_toks": [
      "who",
      "is",
      "the",
      "most",
      "cited",
      "author",
      "at",
      "CVPR",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"CVPR\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      ",",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t2.keyphraseid",
      "=",
      "t5.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "!",
      "=",
      "``",
      "chris",
      "dyer",
      "''",
      "AND",
      "t5.keyphrasename",
      "=",
      "``",
      "syntactic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      ",",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "!",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "what are some syntactic parsing papers that chris dyer did not write ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "syntactic",
      "parsing",
      "papers",
      "that",
      "chris",
      "dyer",
      "did",
      "not",
      "write",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"chris dyer\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"syntactic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      ",",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t2.keyphraseid",
      "=",
      "t5.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "!",
      "=",
      "``",
      "chris",
      "dyer",
      "''",
      "AND",
      "t5.keyphrasename",
      "=",
      "``",
      "syntactic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      ",",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "!",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "are there any syntactic parsing papers not written by chris dyer ?",
    "question_toks": [
      "are",
      "there",
      "any",
      "syntactic",
      "parsing",
      "papers",
      "not",
      "written",
      "by",
      "chris",
      "dyer",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"chris dyer\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"syntactic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      ",",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t2.keyphraseid",
      "=",
      "t5.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "!",
      "=",
      "``",
      "chris",
      "dyer",
      "''",
      "AND",
      "t5.keyphrasename",
      "=",
      "``",
      "syntactic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      ",",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "!",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "what are syntactic parsing papers not written by chris dyer",
    "question_toks": [
      "what",
      "are",
      "syntactic",
      "parsing",
      "papers",
      "not",
      "written",
      "by",
      "chris",
      "dyer"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"chris dyer\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"syntactic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname  ,  t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname != \"chris dyer\" AND t5.keyphrasename  =  \"syntactic parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      ",",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t2.keyphraseid",
      "=",
      "t5.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "!",
      "=",
      "``",
      "chris",
      "dyer",
      "''",
      "AND",
      "t5.keyphrasename",
      "=",
      "``",
      "syntactic",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      ",",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "!",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "syntactic parsing papers not written by chris dyer",
    "question_toks": [
      "syntactic",
      "parsing",
      "papers",
      "not",
      "written",
      "by",
      "chris",
      "dyer"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"chris dyer\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"syntactic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR  =  ( SELECT MAX ( YEAR ) FROM paper );",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "paperid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "YEAR",
      ")",
      "FROM",
      "paper",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "paperid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "(",
      "select",
      "max",
      "(",
      "year",
      ")",
      "from",
      "paper",
      ")"
    ],
    "question": "papers published in the last year",
    "question_toks": [
      "papers",
      "published",
      "in",
      "the",
      "last",
      "year"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  5
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      14,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": []
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"benjamin mako hill\" GROUP BY t3.year ORDER BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "benjamin",
      "mako",
      "hill",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "When was benjamin mako hill 's first publication ?",
    "question_toks": [
      "When",
      "was",
      "benjamin",
      "mako",
      "hill",
      "'s",
      "first",
      "publication",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"benjamin mako hill\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"benjamin mako hill\" GROUP BY t3.year ORDER BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "benjamin",
      "mako",
      "hill",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "When was benjamin mako hill 's first paper written ?",
    "question_toks": [
      "When",
      "was",
      "benjamin",
      "mako",
      "hill",
      "'s",
      "first",
      "paper",
      "written",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"benjamin mako hill\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"ameet soni\" GROUP BY t3.year ORDER BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ameet",
      "soni",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "When did ameet soni publish ?",
    "question_toks": [
      "When",
      "did",
      "ameet",
      "soni",
      "publish",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ameet soni\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"Daniel A Reed\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t4.citingpaperid",
      ")",
      ",",
      "t3.authorid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t2.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Daniel",
      "A",
      "Reed",
      "''",
      "GROUP",
      "BY",
      "t3.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t4",
      ".",
      "citingpaperid",
      ")",
      ",",
      "t3",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "Who cites Daniel A Reed the most",
    "question_toks": [
      "Who",
      "cites",
      "Daniel",
      "A",
      "Reed",
      "the",
      "most"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Daniel A Reed\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t4.citingpaperid )  ,  t3.authorid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN writes AS t3 ON t3.paperid  =  t4.citingpaperid WHERE t1.authorname  =  \"Daniel A Reed\" GROUP BY t3.authorid ORDER BY COUNT ( t4.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t4.citingpaperid",
      ")",
      ",",
      "t3.authorid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t2.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Daniel",
      "A",
      "Reed",
      "''",
      "GROUP",
      "BY",
      "t3.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t4",
      ".",
      "citingpaperid",
      ")",
      ",",
      "t3",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "Who cites Daniel A Reed most ?",
    "question_toks": [
      "Who",
      "cites",
      "Daniel",
      "A",
      "Reed",
      "most",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Daniel A Reed\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "sigir",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "how many papers are in sigir ?",
    "question_toks": [
      "how",
      "many",
      "papers",
      "are",
      "in",
      "sigir",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"sigir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "sigir",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "how many papers does sigir have ?",
    "question_toks": [
      "how",
      "many",
      "papers",
      "does",
      "sigir",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"sigir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "sigir",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "how many papers are published in sigir ?",
    "question_toks": [
      "how",
      "many",
      "papers",
      "are",
      "published",
      "in",
      "sigir",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"sigir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t1.paperid ) FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigir\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t1.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "sigir",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "number of papers in sigir conference",
    "question_toks": [
      "number",
      "of",
      "papers",
      "in",
      "sigir",
      "conference"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"sigir\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.citingpaperid",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t3.citingpaperid",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.citedpaperid",
      ")",
      "<",
      "5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "citingpaperid",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "citingpaperid",
      "having",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "citedpaperid",
      ")",
      "<",
      "value"
    ],
    "question": "what papers have fewer than 5 citations by ACL papers ?",
    "question_toks": [
      "what",
      "papers",
      "have",
      "fewer",
      "than",
      "5",
      "citations",
      "by",
      "ACL",
      "papers",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              19,
              true
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.citingpaperid",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t3.citingpaperid",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.citedpaperid",
      ")",
      "<",
      "5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "citingpaperid",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "citingpaperid",
      "having",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "citedpaperid",
      ")",
      "<",
      "value"
    ],
    "question": "ACL papers with less than 5 citations",
    "question_toks": [
      "ACL",
      "papers",
      "with",
      "less",
      "than",
      "5",
      "citations"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              19,
              true
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.citingpaperid",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t3.citingpaperid",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.citedpaperid",
      ")",
      "<",
      "5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "citingpaperid",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "citingpaperid",
      "having",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "citedpaperid",
      ")",
      "<",
      "value"
    ],
    "question": "what ACL papers have less than 5 citations ?",
    "question_toks": [
      "what",
      "ACL",
      "papers",
      "have",
      "less",
      "than",
      "5",
      "citations",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              19,
              true
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.citingpaperid FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  <  5;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.citingpaperid",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t3.citingpaperid",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.citedpaperid",
      ")",
      "<",
      "5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "citingpaperid",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "citingpaperid",
      "having",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "citedpaperid",
      ")",
      "<",
      "value"
    ],
    "question": "what papers have fewer than 5 citations by ACL papers",
    "question_toks": [
      "what",
      "papers",
      "have",
      "fewer",
      "than",
      "5",
      "citations",
      "by",
      "ACL",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              3,
              19,
              true
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mirella Lapata\" ORDER BY t3.year DESC LIMIT 5;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Mirella",
      "Lapata",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      "LIMIT",
      "5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc",
      "limit",
      "value"
    ],
    "question": "What are the 5 most recent papers of Mirella Lapata ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "5",
      "most",
      "recent",
      "papers",
      "of",
      "Mirella",
      "Lapata",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 5,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Mirella Lapata\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "What were the papers published at pldi 2015 ?",
    "question_toks": [
      "What",
      "were",
      "the",
      "papers",
      "published",
      "at",
      "pldi",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Papers from pldi 2015 conference",
    "question_toks": [
      "Papers",
      "from",
      "pldi",
      "2015",
      "conference"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "papers published at pldi 2015",
    "question_toks": [
      "papers",
      "published",
      "at",
      "pldi",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "What are the papers from pldi 2015 ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "papers",
      "from",
      "pldi",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Papers from pldi 2015 ?",
    "question_toks": [
      "Papers",
      "from",
      "pldi",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Which papers were accepted in pldi 2015 ?",
    "question_toks": [
      "Which",
      "papers",
      "were",
      "accepted",
      "in",
      "pldi",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "What papers were published during the conference pldi 2015 ?",
    "question_toks": [
      "What",
      "papers",
      "were",
      "published",
      "during",
      "the",
      "conference",
      "pldi",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "papers in pldi 2015",
    "question_toks": [
      "papers",
      "in",
      "pldi",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "List of papers in pldi 2015",
    "question_toks": [
      "List",
      "of",
      "papers",
      "in",
      "pldi",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "pldi papers in 2015",
    "question_toks": [
      "pldi",
      "papers",
      "in",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "what papers are published in pldi 2015",
    "question_toks": [
      "what",
      "papers",
      "are",
      "published",
      "in",
      "pldi",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "papers from pldi 2015",
    "question_toks": [
      "papers",
      "from",
      "pldi",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "pldi papers 2015",
    "question_toks": [
      "pldi",
      "papers",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "pldi 2015 conference",
    "question_toks": [
      "pldi",
      "2015",
      "conference"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "pldi best paper award 2015",
    "question_toks": [
      "pldi",
      "best",
      "paper",
      "award",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2015 AND t2.venuename  =  \"pldi\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "pldi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "pldi 2015 list of papers",
    "question_toks": [
      "pldi",
      "2015",
      "list",
      "of",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"pldi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "journalid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2011",
      "GROUP",
      "BY",
      "journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "journalid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value",
      "group",
      "by",
      "journalid"
    ],
    "question": "List today 's journals",
    "question_toks": [
      "List",
      "today",
      "'s",
      "journals"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2011.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT journalid FROM paper WHERE YEAR  =  2011 GROUP BY journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "journalid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "=",
      "2011",
      "GROUP",
      "BY",
      "journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "journalid",
      "from",
      "paper",
      "where",
      "year",
      "=",
      "value",
      "group",
      "by",
      "journalid"
    ],
    "question": "List the journals published in March , 2011",
    "question_toks": [
      "List",
      "the",
      "journals",
      "published",
      "in",
      "March",
      ",",
      "2011"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2011.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.paperid FROM venue AS t2 JOIN paper AS t1 ON t2.venueid  =  t1.venueid WHERE t1.title LIKE \"neural attention\" AND t1.year  =  2016 AND t2.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.paperid",
      "FROM",
      "venue",
      "AS",
      "t2",
      "JOIN",
      "paper",
      "AS",
      "t1",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.title",
      "LIKE",
      "``",
      "neural",
      "attention",
      "''",
      "AND",
      "t1.year",
      "=",
      "2016",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t2",
      "join",
      "paper",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "title",
      "like",
      "value",
      "and",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "ACL papers in 2016 with neural attention in the title",
    "question_toks": [
      "ACL",
      "papers",
      "in",
      "2016",
      "with",
      "neural",
      "attention",
      "in",
      "the",
      "title"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"neural attention\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename  =  \"Machine Learning\" GROUP BY t1.authorname ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t2.keyphraseid",
      "=",
      "t4.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t4.keyphrasename",
      "=",
      "``",
      "Machine",
      "Learning",
      "''",
      "GROUP",
      "BY",
      "t1.authorname",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorname",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "Who writes a lot of papers in Machine Learning ?",
    "question_toks": [
      "Who",
      "writes",
      "a",
      "lot",
      "of",
      "papers",
      "in",
      "Machine",
      "Learning",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          4,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              24,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Machine Learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t2.keyphraseid",
      "=",
      "t4.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t4.keyphrasename",
      "LIKE",
      "``",
      "sensor",
      "fusion",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "like",
      "value"
    ],
    "question": "Who wrote sensor fusion ?",
    "question_toks": [
      "Who",
      "wrote",
      "sensor",
      "fusion",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"sensor fusion\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t2.keyphraseid",
      "=",
      "t4.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t4.keyphrasename",
      "LIKE",
      "``",
      "sensor",
      "fusion",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "like",
      "value"
    ],
    "question": "Authors of papers on sensor fusion",
    "question_toks": [
      "Authors",
      "of",
      "papers",
      "on",
      "sensor",
      "fusion"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"sensor fusion\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t2.keyphraseid",
      "=",
      "t4.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t4.keyphrasename",
      "LIKE",
      "``",
      "sensor",
      "fusion",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "like",
      "value"
    ],
    "question": "people working on sensor fusion",
    "question_toks": [
      "people",
      "working",
      "on",
      "sensor",
      "fusion"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"sensor fusion\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t2.keyphraseid",
      "=",
      "t4.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t4.keyphrasename",
      "LIKE",
      "``",
      "sensor",
      "fusion",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "like",
      "value"
    ],
    "question": "Who publishes in sensor fusion ?",
    "question_toks": [
      "Who",
      "publishes",
      "in",
      "sensor",
      "fusion",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"sensor fusion\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorname FROM paperkeyphrase AS t2 JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid JOIN writes AS t3 ON t3.paperid  =  t2.paperid JOIN author AS t1 ON t3.authorid  =  t1.authorid WHERE t4.keyphrasename LIKE \"sensor fusion\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorname",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t2.keyphraseid",
      "=",
      "t4.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t4.keyphrasename",
      "LIKE",
      "``",
      "sensor",
      "fusion",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorname",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t4",
      ".",
      "keyphrasename",
      "like",
      "value"
    ],
    "question": "who publishes papers about sensor fusion",
    "question_toks": [
      "who",
      "publishes",
      "papers",
      "about",
      "sensor",
      "fusion"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"sensor fusion\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"michael i. jordan\" AND t1.authorname  =  \"dan klein\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t5.citingpaperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "cite",
      "AS",
      "t5",
      "ON",
      "t3.paperid",
      "=",
      "t5.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t5.citingpaperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "michael",
      "i.",
      "jordan",
      "''",
      "AND",
      "t1.authorname",
      "=",
      "``",
      "dan",
      "klein",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t5",
      ".",
      "citingpaperid",
      ")",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "cite",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "citingpaperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "how many papers by dan klein are cited by michael i. jordan",
    "question_toks": [
      "how",
      "many",
      "papers",
      "by",
      "dan",
      "klein",
      "are",
      "cited",
      "by",
      "michael",
      "i.",
      "jordan"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"michael i. jordan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"dan klein\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t5.citingpaperid ) FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN cite AS t5 ON t3.paperid  =  t5.citedpaperid JOIN writes AS t4 ON t4.paperid  =  t5.citingpaperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"michael i. jordan\" AND t1.authorname  =  \"dan klein\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t5.citingpaperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "cite",
      "AS",
      "t5",
      "ON",
      "t3.paperid",
      "=",
      "t5.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t5.citingpaperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "michael",
      "i.",
      "jordan",
      "''",
      "AND",
      "t1.authorname",
      "=",
      "``",
      "dan",
      "klein",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t5",
      ".",
      "citingpaperid",
      ")",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "cite",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "citingpaperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "how many of dan klein 's papers cite michael i. jordan",
    "question_toks": [
      "how",
      "many",
      "of",
      "dan",
      "klein",
      "'s",
      "papers",
      "cite",
      "michael",
      "i.",
      "jordan"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"michael i. jordan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"dan klein\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t5.authorid FROM writes AS t3 JOIN author AS t2 ON t3.authorid  =  t2.authorid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t2.authorname  =  \"Ameet Soni\" AND t1.authorname  =  \"Ras Bodik\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t5.authorid",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.authorid",
      "=",
      "t2.authorid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "writes",
      "AS",
      "t5",
      "ON",
      "t5.paperid",
      "=",
      "t4.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Ameet",
      "Soni",
      "''",
      "AND",
      "t1.authorname",
      "=",
      "``",
      "Ras",
      "Bodik",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t5",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "who else was on the paper with Ameet Soni and Ras Bodik ?",
    "question_toks": [
      "who",
      "else",
      "was",
      "on",
      "the",
      "paper",
      "with",
      "Ameet",
      "Soni",
      "and",
      "Ras",
      "Bodik",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Ameet Soni\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Ras Bodik\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "ImageNet",
      "''",
      "AND",
      "t3.year",
      "=",
      "2014",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "2014 papers using ImageNet",
    "question_toks": [
      "2014",
      "papers",
      "using",
      "ImageNet"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Takashi",
      "Matsumoto",
      "''",
      "GROUP",
      "BY",
      "t3.journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "journalid"
    ],
    "question": "What journals are Takashi Matsumoto 's articles published in ?",
    "question_toks": [
      "What",
      "journals",
      "are",
      "Takashi",
      "Matsumoto",
      "'s",
      "articles",
      "published",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Takashi Matsumoto\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Takashi",
      "Matsumoto",
      "''",
      "GROUP",
      "BY",
      "t3.journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "journalid"
    ],
    "question": "What journals has Takashi Matsumoto published in ?",
    "question_toks": [
      "What",
      "journals",
      "has",
      "Takashi",
      "Matsumoto",
      "published",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Takashi Matsumoto\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Takashi Matsumoto\" GROUP BY t3.journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Takashi",
      "Matsumoto",
      "''",
      "GROUP",
      "BY",
      "t3.journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "journalid"
    ],
    "question": "In what scholarly journals does Takashi Matsumoto publish ?",
    "question_toks": [
      "In",
      "what",
      "scholarly",
      "journals",
      "does",
      "Takashi",
      "Matsumoto",
      "publish",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Takashi Matsumoto\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"Bacterial Wilt\" AND t4.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.authorid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t1",
      "JOIN",
      "keyphrase",
      "AS",
      "t2",
      "ON",
      "t1.keyphraseid",
      "=",
      "t2.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t1.paperid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t4.paperid",
      "JOIN",
      "author",
      "AS",
      "t5",
      "ON",
      "t3.authorid",
      "=",
      "t5.authorid",
      "WHERE",
      "t2.keyphrasename",
      "=",
      "``",
      "Bacterial",
      "Wilt",
      "''",
      "AND",
      "t4.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "authorid",
      "from",
      "paperkeyphrase",
      "as",
      "t1",
      "join",
      "keyphrase",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t2",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t5",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What authors wrote papers about Bacterial Wilt in 2016 ?",
    "question_toks": [
      "What",
      "authors",
      "wrote",
      "papers",
      "about",
      "Bacterial",
      "Wilt",
      "in",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Bacterial Wilt\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid JOIN author AS t5 ON t3.authorid  =  t5.authorid WHERE t2.keyphrasename  =  \"Bacterial Wilt\" AND t4.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.authorid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t1",
      "JOIN",
      "keyphrase",
      "AS",
      "t2",
      "ON",
      "t1.keyphraseid",
      "=",
      "t2.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t1.paperid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t4.paperid",
      "JOIN",
      "author",
      "AS",
      "t5",
      "ON",
      "t3.authorid",
      "=",
      "t5.authorid",
      "WHERE",
      "t2.keyphrasename",
      "=",
      "``",
      "Bacterial",
      "Wilt",
      "''",
      "AND",
      "t4.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "authorid",
      "from",
      "paperkeyphrase",
      "as",
      "t1",
      "join",
      "keyphrase",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t2",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "authorid",
      "=",
      "t5",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Who wrote on the topic of Bacterial Wilt in 2016 ?",
    "question_toks": [
      "Who",
      "wrote",
      "on",
      "the",
      "topic",
      "of",
      "Bacterial",
      "Wilt",
      "in",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Bacterial Wilt\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Luke S Zettlemoyer\" ORDER BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Luke",
      "S",
      "Zettlemoyer",
      "''",
      "ORDER",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "When did Luke S Zettlemoyer publish ?",
    "question_toks": [
      "When",
      "did",
      "Luke",
      "S",
      "Zettlemoyer",
      "publish",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Luke S Zettlemoyer\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "question",
      "answering",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "question answering 2016 papers",
    "question_toks": [
      "question",
      "answering",
      "2016",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"question answering\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  =  2016;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "question",
      "answering",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "What papers were written on question answering in 2016 ?",
    "question_toks": [
      "What",
      "papers",
      "were",
      "written",
      "on",
      "question",
      "answering",
      "in",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"question answering\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.citingpaperid )  ,  t1.keyphrasename FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t3 ON t2.paperid  =  t3.citedpaperid GROUP BY t1.keyphrasename ORDER BY COUNT ( t3.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      ",",
      "t1.keyphrasename",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.citedpaperid",
      "GROUP",
      "BY",
      "t1.keyphrasename",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      ",",
      "t1",
      ".",
      "keyphrasename",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "group",
      "by",
      "t1",
      ".",
      "keyphrasename",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "what keyphrases get most citations ?",
    "question_toks": [
      "what",
      "keyphrases",
      "get",
      "most",
      "citations",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Temporal Data\" GROUP BY t3.journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Temporal",
      "Data",
      "''",
      "GROUP",
      "BY",
      "t3.journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "journalid"
    ],
    "question": "Find journals about Temporal Data .",
    "question_toks": [
      "Find",
      "journals",
      "about",
      "Temporal",
      "Data",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Temporal Data\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Temporal Data\" GROUP BY t3.journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Temporal",
      "Data",
      "''",
      "GROUP",
      "BY",
      "t3.journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "journalid"
    ],
    "question": "List the journals related to Temporal Data",
    "question_toks": [
      "List",
      "the",
      "journals",
      "related",
      "to",
      "Temporal",
      "Data"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Temporal Data\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t5",
      "ON",
      "t3.datasetid",
      "=",
      "t5.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "venue",
      "AS",
      "t6",
      "ON",
      "t6.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t4.keyphraseid",
      "=",
      "t1.keyphraseid",
      "WHERE",
      "t5.datasetname",
      "=",
      "``",
      "Jeopardy",
      "!",
      "Questions",
      "''",
      "AND",
      "t1.keyphrasename",
      "=",
      "``",
      "Parsing",
      "''",
      "AND",
      "t2.year",
      "=",
      "2014",
      "AND",
      "t6.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t5",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "where",
      "t5",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "which ACL 2014 papers about Parsing used Jeopardy! Questions ?",
    "question_toks": [
      "which",
      "ACL",
      "2014",
      "papers",
      "about",
      "Parsing",
      "used",
      "Jeopardy",
      "!",
      "Questions",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Jeopardy! Questions\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Parsing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t5",
      "ON",
      "t3.datasetid",
      "=",
      "t5.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "venue",
      "AS",
      "t6",
      "ON",
      "t6.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t4.keyphraseid",
      "=",
      "t1.keyphraseid",
      "WHERE",
      "t5.datasetname",
      "=",
      "``",
      "Jeopardy",
      "!",
      "Questions",
      "''",
      "AND",
      "t1.keyphrasename",
      "=",
      "``",
      "Parsing",
      "''",
      "AND",
      "t2.year",
      "=",
      "2014",
      "AND",
      "t6.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t5",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "where",
      "t5",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Parsing papers using Jeopardy! Questions published at ACL 2014",
    "question_toks": [
      "Parsing",
      "papers",
      "using",
      "Jeopardy",
      "!",
      "Questions",
      "published",
      "at",
      "ACL",
      "2014"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Jeopardy! Questions\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Parsing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t5",
      "ON",
      "t3.datasetid",
      "=",
      "t5.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "venue",
      "AS",
      "t6",
      "ON",
      "t6.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t4.keyphraseid",
      "=",
      "t1.keyphraseid",
      "WHERE",
      "t5.datasetname",
      "=",
      "``",
      "Jeopardy",
      "!",
      "Questions",
      "''",
      "AND",
      "t1.keyphrasename",
      "=",
      "``",
      "Parsing",
      "''",
      "AND",
      "t2.year",
      "=",
      "2014",
      "AND",
      "t6.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t5",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "where",
      "t5",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Parsing papers from ACL 2014 using Jeopardy! Questions",
    "question_toks": [
      "Parsing",
      "papers",
      "from",
      "ACL",
      "2014",
      "using",
      "Jeopardy",
      "!",
      "Questions"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Jeopardy! Questions\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Parsing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t5",
      "ON",
      "t3.datasetid",
      "=",
      "t5.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "venue",
      "AS",
      "t6",
      "ON",
      "t6.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t4.keyphraseid",
      "=",
      "t1.keyphraseid",
      "WHERE",
      "t5.datasetname",
      "=",
      "``",
      "Jeopardy",
      "!",
      "Questions",
      "''",
      "AND",
      "t1.keyphrasename",
      "=",
      "``",
      "Parsing",
      "''",
      "AND",
      "t2.year",
      "=",
      "2014",
      "AND",
      "t6.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t5",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "where",
      "t5",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Parsing papers from ACL 2014 that used Jeopardy! Questions",
    "question_toks": [
      "Parsing",
      "papers",
      "from",
      "ACL",
      "2014",
      "that",
      "used",
      "Jeopardy",
      "!",
      "Questions"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Jeopardy! Questions\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Parsing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t5 ON t3.datasetid  =  t5.datasetid JOIN paperkeyphrase AS t4 ON t4.paperid  =  t3.paperid JOIN paper AS t2 ON t2.paperid  =  t3.paperid JOIN venue AS t6 ON t6.venueid  =  t2.venueid JOIN keyphrase AS t1 ON t4.keyphraseid  =  t1.keyphraseid WHERE t5.datasetname  =  \"Jeopardy! Questions\" AND t1.keyphrasename  =  \"Parsing\" AND t2.year  =  2014 AND t6.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t5",
      "ON",
      "t3.datasetid",
      "=",
      "t5.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "venue",
      "AS",
      "t6",
      "ON",
      "t6.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t4.keyphraseid",
      "=",
      "t1.keyphraseid",
      "WHERE",
      "t5.datasetname",
      "=",
      "``",
      "Jeopardy",
      "!",
      "Questions",
      "''",
      "AND",
      "t1.keyphrasename",
      "=",
      "``",
      "Parsing",
      "''",
      "AND",
      "t2.year",
      "=",
      "2014",
      "AND",
      "t6.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t5",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "where",
      "t5",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "papers about Parsing that used Jeopardy! Questions and were published at ACL 2014",
    "question_toks": [
      "papers",
      "about",
      "Parsing",
      "that",
      "used",
      "Jeopardy",
      "!",
      "Questions",
      "and",
      "were",
      "published",
      "at",
      "ACL",
      "2014"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"Jeopardy! Questions\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Parsing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"linda shapiro\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.journalid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t3.journalid",
      "=",
      "t2.journalid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "linda",
      "shapiro",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "journalid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "journalid",
      "=",
      "t2",
      ".",
      "journalid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "in what journals does linda shapiro publish ?",
    "question_toks": [
      "in",
      "what",
      "journals",
      "does",
      "linda",
      "shapiro",
      "publish",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"linda shapiro\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.journalid FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"linda shapiro\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.journalid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t3.journalid",
      "=",
      "t2.journalid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "linda",
      "shapiro",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "journalid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "journalid",
      "=",
      "t2",
      ".",
      "journalid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "Which journals did linda shapiro submit papers to ?",
    "question_toks": [
      "Which",
      "journals",
      "did",
      "linda",
      "shapiro",
      "submit",
      "papers",
      "to",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"linda shapiro\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "NIPS authors",
    "question_toks": [
      "NIPS",
      "authors"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "who are the authors at NIPS ?",
    "question_toks": [
      "who",
      "are",
      "the",
      "authors",
      "at",
      "NIPS",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "who authored papers at NIPS ?",
    "question_toks": [
      "who",
      "authored",
      "papers",
      "at",
      "NIPS",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "who publishes in NIPS ?",
    "question_toks": [
      "who",
      "publishes",
      "in",
      "NIPS",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"NIPS\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "who has papers at NIPS ?",
    "question_toks": [
      "who",
      "has",
      "papers",
      "at",
      "NIPS",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t4.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t4.venueid ORDER BY COUNT ( t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t4.venueid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "GROUP",
      "BY",
      "t4.venueid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t4",
      ".",
      "venueid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "venueid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "which venue publishes the most papers about deep learning",
    "question_toks": [
      "which",
      "venue",
      "publishes",
      "the",
      "most",
      "papers",
      "about",
      "deep",
      "learning"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          1,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"Cell\" AND t3.year  =  2015;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t3.journalid",
      "=",
      "t2.journalid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t3.paperid",
      "=",
      "t1.paperid",
      "WHERE",
      "t2.journalname",
      "=",
      "``",
      "Cell",
      "''",
      "AND",
      "t3.year",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "journalid",
      "=",
      "t2",
      ".",
      "journalid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "journalname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many publications were added to the Cell journal this year ?",
    "question_toks": [
      "How",
      "many",
      "publications",
      "were",
      "added",
      "to",
      "the",
      "Cell",
      "journal",
      "this",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Cell\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paper AS t3 JOIN journal AS t2 ON t3.journalid  =  t2.journalid JOIN paperkeyphrase AS t1 ON t3.paperid  =  t1.paperid WHERE t2.journalname  =  \"Cell\" AND t3.year  =  2015;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t3.journalid",
      "=",
      "t2.journalid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t3.paperid",
      "=",
      "t1.paperid",
      "WHERE",
      "t2.journalname",
      "=",
      "``",
      "Cell",
      "''",
      "AND",
      "t3.year",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "journalid",
      "=",
      "t2",
      ".",
      "journalid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "journalname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many articles were published in the Cell journal in 2015 ?",
    "question_toks": [
      "How",
      "many",
      "articles",
      "were",
      "published",
      "in",
      "the",
      "Cell",
      "journal",
      "in",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Cell\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.title",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Donald",
      "E",
      "Knuth",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "What are all the publication titles by Donald E Knuth ?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "publication",
      "titles",
      "by",
      "Donald",
      "E",
      "Knuth",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Donald E Knuth\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ali",
      "farhadi",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "eccv",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "papers published in eccv 2016 by ali farhadi",
    "question_toks": [
      "papers",
      "published",
      "in",
      "eccv",
      "2016",
      "by",
      "ali",
      "farhadi"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ali farhadi\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"eccv\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ali",
      "farhadi",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "eccv",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Does ali farhadi have a paper in eccv in 2016 ?",
    "question_toks": [
      "Does",
      "ali",
      "farhadi",
      "have",
      "a",
      "paper",
      "in",
      "eccv",
      "in",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ali farhadi\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"eccv\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"ali farhadi\" AND t3.year  =  2016 AND t4.venuename  =  \"eccv\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "ali",
      "farhadi",
      "''",
      "AND",
      "t3.year",
      "=",
      "2016",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "eccv",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "papers of ali farhadi in eccv 2016",
    "question_toks": [
      "papers",
      "of",
      "ali",
      "farhadi",
      "in",
      "eccv",
      "2016"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"ali farhadi\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"eccv\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paperkeyphrase AS t2 ON t2.paperid  =  t3.paperid JOIN keyphrase AS t4 ON t2.keyphraseid  =  t4.keyphraseid WHERE t1.datasetname  =  \"YAGO\" AND t4.keyphrasename  =  \"Semantic Data\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t3.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "keyphrase",
      "AS",
      "t4",
      "ON",
      "t2.keyphraseid",
      "=",
      "t4.keyphraseid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "YAGO",
      "''",
      "AND",
      "t4.keyphrasename",
      "=",
      "``",
      "Semantic",
      "Data",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paperkeyphrase",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "keyphrase",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t4",
      ".",
      "keyphraseid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "What are some papers dealing with Semantic Data in YAGO ?",
    "question_toks": [
      "What",
      "are",
      "some",
      "papers",
      "dealing",
      "with",
      "Semantic",
      "Data",
      "in",
      "YAGO",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"YAGO\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Semantic Data\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "chi",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "Who has published more papers in chi ?",
    "question_toks": [
      "Who",
      "has",
      "published",
      "more",
      "papers",
      "in",
      "chi",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "chi",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "Who has written the most papers at chi ?",
    "question_toks": [
      "Who",
      "has",
      "written",
      "the",
      "most",
      "papers",
      "at",
      "chi",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "chi",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "how is the most prolific author in chi ?",
    "question_toks": [
      "how",
      "is",
      "the",
      "most",
      "prolific",
      "author",
      "in",
      "chi",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid )  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"chi\" GROUP BY t1.authorid ORDER BY COUNT ( DISTINCT t2.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "chi",
      "''",
      "GROUP",
      "BY",
      "t1.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "who published the most at chi",
    "question_toks": [
      "who",
      "published",
      "the",
      "most",
      "at",
      "chi"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"chi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Ye Cao\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "LIKE",
      "``",
      "Ye",
      "Cao",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "like",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "In what year did Ye Cao publish the most papers",
    "question_toks": [
      "In",
      "what",
      "year",
      "did",
      "Ye",
      "Cao",
      "publish",
      "the",
      "most",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Ye Cao\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname LIKE \"Ye Cao\" GROUP BY t3.year ORDER BY COUNT ( DISTINCT t3.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "LIKE",
      "``",
      "Ye",
      "Cao",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "like",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "What year did Ye Cao publish the most papers",
    "question_toks": [
      "What",
      "year",
      "did",
      "Ye",
      "Cao",
      "publish",
      "the",
      "most",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Ye Cao\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.venueid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.datasetname  =  \"ImageNet\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.venueid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "ImageNet",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "venueid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value"
    ],
    "question": "conferences that mention ImageNet",
    "question_toks": [
      "conferences",
      "that",
      "mention",
      "ImageNet"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      "ASC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "asc"
    ],
    "question": "first deep learning paper",
    "question_toks": [
      "first",
      "deep",
      "learning",
      "paper"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      "ASC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "asc"
    ],
    "question": "What was the first paper on deep learning written ?",
    "question_toks": [
      "What",
      "was",
      "the",
      "first",
      "paper",
      "on",
      "deep",
      "learning",
      "written",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      "ASC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "asc"
    ],
    "question": "When was deep learning proposed ?",
    "question_toks": [
      "When",
      "was",
      "deep",
      "learning",
      "proposed",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"deep learning\" GROUP BY t3.year ORDER BY t3.year ASC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "deep",
      "learning",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      "ASC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "asc"
    ],
    "question": "when was the first deep learning paper published ?",
    "question_toks": [
      "when",
      "was",
      "the",
      "first",
      "deep",
      "learning",
      "paper",
      "published",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "asc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"deep learning\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paper AS t2 JOIN journal AS t1 ON t2.journalid  =  t1.journalid WHERE t1.journalname  =  \"Academic radiology\" AND t2.year  =  1995;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paper",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.journalid",
      "=",
      "t1.journalid",
      "WHERE",
      "t1.journalname",
      "=",
      "``",
      "Academic",
      "radiology",
      "''",
      "AND",
      "t2.year",
      "=",
      "1995",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "journalid",
      "=",
      "t1",
      ".",
      "journalid",
      "where",
      "t1",
      ".",
      "journalname",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "what papers were published in Academic radiology in 1995 ?",
    "question_toks": [
      "what",
      "papers",
      "were",
      "published",
      "in",
      "Academic",
      "radiology",
      "in",
      "1995",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ],
            [
              0,
              7,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            3
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          "\"Academic radiology\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          1995.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "what papers do parsing papers typically cite ?",
    "question_toks": [
      "what",
      "papers",
      "do",
      "parsing",
      "papers",
      "typically",
      "cite",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t4.citedpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citingpaperid WHERE t1.keyphrasename  =  \"parsing\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t4.citedpaperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citingpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "parsing",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t4",
      ".",
      "citedpaperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citingpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "papers typically cited by parsing papers",
    "question_toks": [
      "papers",
      "typically",
      "cited",
      "by",
      "parsing",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.venueid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Trophic",
      "Cascade",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "venueid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "venue for Trophic Cascade",
    "question_toks": [
      "venue",
      "for",
      "Trophic",
      "Cascade"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Trophic Cascade\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.venueid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Trophic",
      "Cascade",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "venueid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "conferences for Trophic Cascade",
    "question_toks": [
      "conferences",
      "for",
      "Trophic",
      "Cascade"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Trophic Cascade\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.venueid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Trophic",
      "Cascade",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "venueid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "what conferences are related to Trophic Cascade",
    "question_toks": [
      "what",
      "conferences",
      "are",
      "related",
      "to",
      "Trophic",
      "Cascade"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Trophic Cascade\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.venueid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Trophic",
      "Cascade",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "venueid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "What was the conference name that approved Trophic Cascade ?",
    "question_toks": [
      "What",
      "was",
      "the",
      "conference",
      "name",
      "that",
      "approved",
      "Trophic",
      "Cascade",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Trophic Cascade\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"question answering\" AND t3.year  >=  2011;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "question",
      "answering",
      "''",
      "AND",
      "t3.year",
      ">",
      "=",
      "2011",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      ">",
      "=",
      "value"
    ],
    "question": "How many papers were written on question answering in 2011 through 2016 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "were",
      "written",
      "on",
      "question",
      "answering",
      "in",
      "2011",
      "through",
      "2016",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"question answering\"",
          null
        ],
        "and",
        [
          false,
          5,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2011.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t3.venueid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid WHERE t1.keyphrasename  =  \"NLP\" GROUP BY t3.venueid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.citingpaperid",
      ")",
      ",",
      "t3.venueid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "NLP",
      "''",
      "GROUP",
      "BY",
      "t3.venueid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "citingpaperid",
      ")",
      ",",
      "t3",
      ".",
      "venueid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "venueid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "What are the best NLP conferences ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "best",
      "NLP",
      "conferences",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          13,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"NLP\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid  ,  t1.authorid FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t3.venuename  =  \"ACL\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      ",",
      "t1.authorid",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t3.venuename",
      "=",
      "``",
      "ACL",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "ACL papers by author",
    "question_toks": [
      "ACL",
      "papers",
      "by",
      "author"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >  10;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.citingpaperid",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t2",
      "ON",
      "t1.paperid",
      "=",
      "t2.citedpaperid",
      "GROUP",
      "BY",
      "t2.citingpaperid",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.citedpaperid",
      ")",
      ">",
      "10",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "citingpaperid",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "citedpaperid",
      "group",
      "by",
      "t2",
      ".",
      "citingpaperid",
      "having",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "citedpaperid",
      ")",
      ">",
      "value"
    ],
    "question": "papers with more than 10 citations",
    "question_toks": [
      "papers",
      "with",
      "more",
      "than",
      "10",
      "citations"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              19,
              true
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t1",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t1",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Which authors published papers in 2015 ?",
    "question_toks": [
      "Which",
      "authors",
      "published",
      "papers",
      "in",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2015;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t1",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t1",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "who wrote papers in 2015",
    "question_toks": [
      "who",
      "wrote",
      "papers",
      "in",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Brian DeRenzi\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.keyphrasename",
      ",",
      "SUM",
      "(",
      "t3.numcitedby",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t5",
      "ON",
      "t4.authorid",
      "=",
      "t5.authorid",
      "WHERE",
      "t5.authorname",
      "=",
      "``",
      "Brian",
      "DeRenzi",
      "''",
      "GROUP",
      "BY",
      "t1.keyphrasename",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "t3.numcitedby",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "keyphrasename",
      ",",
      "sum",
      "(",
      "t3",
      ".",
      "numcitedby",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t5",
      ".",
      "authorid",
      "where",
      "t5",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyphrasename",
      "order",
      "by",
      "sum",
      "(",
      "t3",
      ".",
      "numcitedby",
      ")",
      "desc"
    ],
    "question": "what keyphrase does Brian DeRenzi write about that gets most citations ?",
    "question_toks": [
      "what",
      "keyphrase",
      "does",
      "Brian",
      "DeRenzi",
      "write",
      "about",
      "that",
      "gets",
      "most",
      "citations",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              4,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Brian DeRenzi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.keyphrasename  ,  SUM ( t3.numcitedby ) FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t5 ON t4.authorid  =  t5.authorid WHERE t5.authorname  =  \"Brian DeRenzi\" GROUP BY t1.keyphrasename ORDER BY SUM ( t3.numcitedby ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.keyphrasename",
      ",",
      "SUM",
      "(",
      "t3.numcitedby",
      ")",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t5",
      "ON",
      "t4.authorid",
      "=",
      "t5.authorid",
      "WHERE",
      "t5.authorname",
      "=",
      "``",
      "Brian",
      "DeRenzi",
      "''",
      "GROUP",
      "BY",
      "t1.keyphrasename",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "t3.numcitedby",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "keyphrasename",
      ",",
      "sum",
      "(",
      "t3",
      ".",
      "numcitedby",
      ")",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t5",
      ".",
      "authorid",
      "where",
      "t5",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyphrasename",
      "order",
      "by",
      "sum",
      "(",
      "t3",
      ".",
      "numcitedby",
      ")",
      "desc"
    ],
    "question": "main topics of work by Brian DeRenzi",
    "question_toks": [
      "main",
      "topics",
      "of",
      "work",
      "by",
      "Brian",
      "DeRenzi"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          10,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              4,
              16,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Brian DeRenzi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid )  ,  t1.authorid FROM writes AS t1 JOIN paper AS t2 ON t1.paperid  =  t2.paperid GROUP BY t1.authorid HAVING COUNT ( t2.paperid )  >=  5;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ",",
      "t1.authorid",
      "FROM",
      "writes",
      "AS",
      "t1",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "GROUP",
      "BY",
      "t1.authorid",
      "HAVING",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      ">",
      "=",
      "5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ",",
      "t1",
      ".",
      "authorid",
      "from",
      "writes",
      "as",
      "t1",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "group",
      "by",
      "t1",
      ".",
      "authorid",
      "having",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "authors with at least 5 papers",
    "question_toks": [
      "authors",
      "with",
      "at",
      "least",
      "5",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT paperid FROM paper WHERE YEAR != 2015;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "paperid",
      "FROM",
      "paper",
      "WHERE",
      "YEAR",
      "!",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "paperid",
      "from",
      "paper",
      "where",
      "year",
      "!",
      "=",
      "value"
    ],
    "question": "papers that were not published in the last year",
    "question_toks": [
      "papers",
      "that",
      "were",
      "not",
      "published",
      "in",
      "the",
      "last",
      "year"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t2.keyphraseid",
      "=",
      "t5.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Michael",
      "Stonebraker",
      "''",
      "AND",
      "t5.keyphrasename",
      "=",
      "``",
      "GIS",
      "Database",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "When was Michael Stonebraker GIS Database published ?",
    "question_toks": [
      "When",
      "was",
      "Michael",
      "Stonebraker",
      "GIS",
      "Database",
      "published",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Michael Stonebraker\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"GIS Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t2.keyphraseid",
      "=",
      "t5.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Michael",
      "Stonebraker",
      "''",
      "AND",
      "t5.keyphrasename",
      "=",
      "``",
      "GIS",
      "Database",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "When did Michael Stonebraker publish his GIS Database paper ?",
    "question_toks": [
      "When",
      "did",
      "Michael",
      "Stonebraker",
      "publish",
      "his",
      "GIS",
      "Database",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Michael Stonebraker\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"GIS Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN writes AS t4 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname  =  \"Michael Stonebraker\" AND t5.keyphrasename  =  \"GIS Database\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t2.keyphraseid",
      "=",
      "t5.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Michael",
      "Stonebraker",
      "''",
      "AND",
      "t5.keyphrasename",
      "=",
      "``",
      "GIS",
      "Database",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "When does Michael Stonebraker publish the GIS Database paper ?",
    "question_toks": [
      "When",
      "does",
      "Michael",
      "Stonebraker",
      "publish",
      "the",
      "GIS",
      "Database",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Michael Stonebraker\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"GIS Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"Trophic Cascade\" AND t3.year  =  2010 GROUP BY t3.journalid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Trophic",
      "Cascade",
      "''",
      "AND",
      "t3.year",
      "=",
      "2010",
      "GROUP",
      "BY",
      "t3.journalid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "journalid"
    ],
    "question": "In 2010 what journal published an article about Trophic Cascade ?",
    "question_toks": [
      "In",
      "2010",
      "what",
      "journal",
      "published",
      "an",
      "article",
      "about",
      "Trophic",
      "Cascade",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Trophic Cascade\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2016 AND t2.venuename  =  \"CVPR\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2016",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "CVPR",
      "''",
      "GROUP",
      "BY",
      "t3.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "What is the most popular paper this year in CVPR ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "popular",
      "paper",
      "this",
      "year",
      "in",
      "CVPR",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2016.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"CVPR\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t4.citedpaperid )  ,  t3.year FROM paper AS t3 JOIN cite AS t4 ON t3.paperid  =  t4.citedpaperid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"luke zettlemoyer\" GROUP BY t3.year;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t4.citedpaperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t3.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "luke",
      "zettlemoyer",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t4",
      ".",
      "citedpaperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "How many citations does luke zettlemoyer have per year",
    "question_toks": [
      "How",
      "many",
      "citations",
      "does",
      "luke",
      "zettlemoyer",
      "have",
      "per",
      "year"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"luke zettlemoyer\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paperdataset AS t3 JOIN dataset AS t1 ON t3.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t3.paperid JOIN writes AS t2 ON t2.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t2.paperid;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t3",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t3.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t4.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "ImageNet",
      "''",
      "GROUP",
      "BY",
      "t2.paperid",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t3",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "paperid"
    ],
    "question": "authors working on ImageNet",
    "question_toks": [
      "authors",
      "working",
      "on",
      "ImageNet"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          24,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT paperid  ,  title FROM paper WHERE title LIKE \"the effects of juicing for cancer patients\" AND YEAR  >  2006;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "paperid",
      ",",
      "title",
      "FROM",
      "paper",
      "WHERE",
      "title",
      "LIKE",
      "``",
      "the",
      "effects",
      "of",
      "juicing",
      "for",
      "cancer",
      "patients",
      "''",
      "AND",
      "YEAR",
      ">",
      "2006",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "paperid",
      ",",
      "title",
      "from",
      "paper",
      "where",
      "title",
      "like",
      "value",
      "and",
      "year",
      ">",
      "value"
    ],
    "question": "What articles have been published since 2006 about the effects of juicing for cancer patients ?",
    "question_toks": [
      "What",
      "articles",
      "have",
      "been",
      "published",
      "since",
      "2006",
      "about",
      "the",
      "effects",
      "of",
      "juicing",
      "for",
      "cancer",
      "patients",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"the effects of juicing for cancer patients\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2006.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.paperid FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname  =  \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Liquid\" AND t6.venuename  =  \"Automatica\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.paperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t5",
      "JOIN",
      "keyphrase",
      "AS",
      "t3",
      "ON",
      "t5.keyphraseid",
      "=",
      "t3.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t5.paperid",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t4.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "venue",
      "AS",
      "t6",
      "ON",
      "t6.venueid",
      "=",
      "t2.venueid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Eric",
      "C.",
      "Kerrigan",
      "''",
      "AND",
      "t3.keyphrasename",
      "=",
      "``",
      "Liquid",
      "''",
      "AND",
      "t6.venuename",
      "=",
      "``",
      "Automatica",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "paperid",
      "from",
      "paperkeyphrase",
      "as",
      "t5",
      "join",
      "keyphrase",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "keyphraseid",
      "=",
      "t3",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "venue",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Eric C. Kerrigan 's Liquid Automatica paper",
    "question_toks": [
      "Eric",
      "C.",
      "Kerrigan",
      "'s",
      "Liquid",
      "Automatica",
      "paper"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Eric C. Kerrigan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Liquid\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Automatica\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.venueid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"sergey levine\" GROUP BY t3.venueid  ,  t3.year ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.venueid",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "sergey",
      "levine",
      "''",
      "GROUP",
      "BY",
      "t3.venueid",
      ",",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "venueid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "venueid",
      ",",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "Where did sergey levine publish his last paper ?",
    "question_toks": [
      "Where",
      "did",
      "sergey",
      "levine",
      "publish",
      "his",
      "last",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          13,
          false
        ],
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"sergey levine\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.keyphraseid FROM paper AS t3 JOIN paperkeyphrase AS t2 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid JOIN writes AS t5 ON t5.paperid  =  t3.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid WHERE t1.authorname  =  \"dan klein\" AND t4.venuename  =  \"emnlp\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.keyphraseid",
      "FROM",
      "paper",
      "AS",
      "t3",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t2",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t5",
      "ON",
      "t5.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t5.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "dan",
      "klein",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "emnlp",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "keyphraseid",
      "from",
      "paper",
      "as",
      "t3",
      "join",
      "paperkeyphrase",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "keyphrases used by dan klein in his emnlp papers",
    "question_toks": [
      "keyphrases",
      "used",
      "by",
      "dan",
      "klein",
      "in",
      "his",
      "emnlp",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              22,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"dan klein\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"emnlp\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.authorid FROM paperkeyphrase AS t1 JOIN keyphrase AS t2 ON t1.keyphraseid  =  t2.keyphraseid JOIN paper AS t4 ON t4.paperid  =  t1.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t2.keyphrasename  =  \"Neutralizing Antibody\" AND t4.year  =  2012 GROUP BY t3.authorid ORDER BY COUNT ( t4.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      ",",
      "t3.authorid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t1",
      "JOIN",
      "keyphrase",
      "AS",
      "t2",
      "ON",
      "t1.keyphraseid",
      "=",
      "t2.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t1.paperid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t4.paperid",
      "WHERE",
      "t2.keyphrasename",
      "=",
      "``",
      "Neutralizing",
      "Antibody",
      "''",
      "AND",
      "t4.year",
      "=",
      "2012",
      "GROUP",
      "BY",
      "t3.authorid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "authorid",
      "from",
      "paperkeyphrase",
      "as",
      "t1",
      "join",
      "keyphrase",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "keyphraseid",
      "=",
      "t2",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "authorid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "Who are the prominent researchers in Neutralizing Antibody in 2012 ?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "prominent",
      "researchers",
      "in",
      "Neutralizing",
      "Antibody",
      "in",
      "2012",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          25,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Neutralizing Antibody\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2012.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "ImageNet",
      "''",
      "AND",
      "t3.year",
      "=",
      "2014",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "eccv",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "the papers at eccv in 2014 using ImageNet dataset",
    "question_toks": [
      "the",
      "papers",
      "at",
      "eccv",
      "in",
      "2014",
      "using",
      "ImageNet",
      "dataset"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"eccv\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "ImageNet",
      "''",
      "AND",
      "t3.year",
      "=",
      "2014",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "eccv",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "which papers in eccv 2014 use ImageNet ?",
    "question_toks": [
      "which",
      "papers",
      "in",
      "eccv",
      "2014",
      "use",
      "ImageNet",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"eccv\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t3.year  =  2014 AND t4.venuename  =  \"eccv\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "ImageNet",
      "''",
      "AND",
      "t3.year",
      "=",
      "2014",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "eccv",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "eccv 2014 papers using ImageNet",
    "question_toks": [
      "eccv",
      "2014",
      "papers",
      "using",
      "ImageNet"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"eccv\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t5.citingpaperid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN cite AS t5 ON t2.paperid  =  t5.citingpaperid JOIN paper AS t3 ON t3.paperid  =  t5.citedpaperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.keyphrasename  =  \"Euclidean Distance\" AND t4.venuename  =  \"NIPS\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t5.citingpaperid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "cite",
      "AS",
      "t5",
      "ON",
      "t2.paperid",
      "=",
      "t5.citingpaperid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t5.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "Euclidean",
      "Distance",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "NIPS",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t5",
      ".",
      "citingpaperid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "cite",
      "as",
      "t5",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "citingpaperid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "Euclidean Distance papers citing NIPS papers",
    "question_toks": [
      "Euclidean",
      "Distance",
      "papers",
      "citing",
      "NIPS",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Euclidean Distance\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"NIPS\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t4.paperid )  ,  t3.paperid FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t4 ON t4.paperid  =  t2.paperid JOIN writes AS t3 ON t3.paperid  =  t4.paperid WHERE t1.datasetname  =  \"ImageNet\" GROUP BY t3.paperid ORDER BY COUNT ( t4.paperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      ",",
      "t3.paperid",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t4.paperid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "ImageNet",
      "''",
      "GROUP",
      "BY",
      "t3.paperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t4.paperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "paperid",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "paperid",
      "order",
      "by",
      "count",
      "(",
      "t4",
      ".",
      "paperid",
      ")",
      "desc"
    ],
    "question": "top authors working on ImageNet ?",
    "question_toks": [
      "top",
      "authors",
      "working",
      "on",
      "ImageNet",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [
        [
          0,
          24,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              11,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT ( t1.paperid )  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t1.year  =  2012 AND t2.venuename  =  \"ACL\" GROUP BY t1.paperid HAVING COUNT ( t3.citingpaperid )  >  7;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "(",
      "t1.paperid",
      ")",
      ",",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t1.year",
      "=",
      "2012",
      "AND",
      "t2.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t1.paperid",
      "HAVING",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      ">",
      "7",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "(",
      "t1",
      ".",
      "paperid",
      ")",
      ",",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "paperid",
      "having",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      ">",
      "value"
    ],
    "question": "how many ACL 2012 papers have more than 7 citations ?",
    "question_toks": [
      "how",
      "many",
      "ACL",
      "2012",
      "papers",
      "have",
      "more",
      "than",
      "7",
      "citations",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              18,
              false
            ],
            null
          ],
          7.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2012.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t4.citingpaperid )  ,  t1.keyphraseid  ,  t2.paperid FROM paper AS t2 JOIN cite AS t4 ON t2.paperid  =  t4.citedpaperid JOIN paperkeyphrase AS t1 ON t2.paperid  =  t1.paperid JOIN venue AS t3 ON t3.venueid  =  t2.venueid WHERE t2.year  =  2012 AND t3.venuename  =  \"EMNLP-CoNLL\" GROUP BY t2.paperid  ,  t1.keyphraseid ORDER BY COUNT ( DISTINCT t4.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.citingpaperid",
      ")",
      ",",
      "t1.keyphraseid",
      ",",
      "t2.paperid",
      "FROM",
      "paper",
      "AS",
      "t2",
      "JOIN",
      "cite",
      "AS",
      "t4",
      "ON",
      "t2.paperid",
      "=",
      "t4.citedpaperid",
      "JOIN",
      "paperkeyphrase",
      "AS",
      "t1",
      "ON",
      "t2.paperid",
      "=",
      "t1.paperid",
      "JOIN",
      "venue",
      "AS",
      "t3",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "WHERE",
      "t2.year",
      "=",
      "2012",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "EMNLP-CoNLL",
      "''",
      "GROUP",
      "BY",
      "t2.paperid",
      ",",
      "t1.keyphraseid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "citingpaperid",
      ")",
      ",",
      "t1",
      ".",
      "keyphraseid",
      ",",
      "t2",
      ".",
      "paperid",
      "from",
      "paper",
      "as",
      "t2",
      "join",
      "cite",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "citedpaperid",
      "join",
      "paperkeyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t1",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "paperid",
      ",",
      "t1",
      ".",
      "keyphraseid",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "What was the topic of best paper in 2012 EMNLP-CoNLL ?",
    "question_toks": [
      "What",
      "was",
      "the",
      "topic",
      "of",
      "best",
      "paper",
      "in",
      "2012",
      "EMNLP-CoNLL",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ],
        [
          0,
          23,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2012.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"EMNLP-CoNLL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t2.paperid ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname != \"Noah Smith\" AND t3.year  >  2009 AND t2.paperid IN ( SELECT t2.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Noah Smith\" );",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.paperid",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "!",
      "=",
      "``",
      "Noah",
      "Smith",
      "''",
      "AND",
      "t3.year",
      ">",
      "2009",
      "AND",
      "t2.paperid",
      "IN",
      "(",
      "SELECT",
      "t2.paperid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "LIKE",
      "``",
      "Noah",
      "Smith",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "paperid",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "!",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "paperid",
      "in",
      "(",
      "select",
      "t2",
      ".",
      "paperid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "like",
      "value",
      ")"
    ],
    "question": "How many papers has Noah Smith co-authored since 2009 ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "has",
      "Noah",
      "Smith",
      "co-authored",
      "since",
      "2009",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          7,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Noah Smith\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2009.0,
          null
        ],
        "and",
        [
          false,
          8,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      25,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  9
                ],
                [
                  "table_unit",
                  1
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      24,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                9,
                [
                  0,
                  [
                    0,
                    4,
                    false
                  ],
                  null
                ],
                "\"Noah Smith\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"ACL\" GROUP BY t3.citingpaperid HAVING COUNT ( DISTINCT t3.citedpaperid )  >  2;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "ACL",
      "''",
      "GROUP",
      "BY",
      "t3.citingpaperid",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.citedpaperid",
      ")",
      ">",
      "2",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "citingpaperid",
      "having",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "citedpaperid",
      ")",
      ">",
      "value"
    ],
    "question": "Number of ACL papers with more than 2 citations",
    "question_toks": [
      "Number",
      "of",
      "ACL",
      "papers",
      "with",
      "more",
      "than",
      "2",
      "citations"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              19,
              true
            ],
            null
          ],
          2.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"ACL\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.title FROM paperkeyphrase AS t5 JOIN keyphrase AS t3 ON t5.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t5.paperid JOIN paper AS t2 ON t4.paperid  =  t2.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid JOIN venue AS t6 ON t6.venueid  =  t2.venueid WHERE t1.authorname LIKE \"Eric C. Kerrigan\" AND t3.keyphrasename  =  \"Liquid\" AND t6.venuename  =  \"Automatica\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.title",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t5",
      "JOIN",
      "keyphrase",
      "AS",
      "t3",
      "ON",
      "t5.keyphraseid",
      "=",
      "t3.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t5.paperid",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t4.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "venue",
      "AS",
      "t6",
      "ON",
      "t6.venueid",
      "=",
      "t2.venueid",
      "WHERE",
      "t1.authorname",
      "LIKE",
      "``",
      "Eric",
      "C.",
      "Kerrigan",
      "''",
      "AND",
      "t3.keyphrasename",
      "=",
      "``",
      "Liquid",
      "''",
      "AND",
      "t6.venuename",
      "=",
      "``",
      "Automatica",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "title",
      "from",
      "paperkeyphrase",
      "as",
      "t5",
      "join",
      "keyphrase",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "keyphraseid",
      "=",
      "t3",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t5",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "venue",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "authorname",
      "like",
      "value",
      "and",
      "t3",
      ".",
      "keyphrasename",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "What is the name of Eric C. Kerrigan 's Liquid Automatica paper ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "Eric",
      "C.",
      "Kerrigan",
      "'s",
      "Liquid",
      "Automatica",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Eric C. Kerrigan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Liquid\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Automatica\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid ) FROM paperdataset AS t2 JOIN dataset AS t1 ON t2.datasetid  =  t1.datasetid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t1.datasetname  =  \"ImageNet\" AND t4.venuename  =  \"cvpr\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      "FROM",
      "paperdataset",
      "AS",
      "t2",
      "JOIN",
      "dataset",
      "AS",
      "t1",
      "ON",
      "t2.datasetid",
      "=",
      "t1.datasetid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t1.datasetname",
      "=",
      "``",
      "ImageNet",
      "''",
      "AND",
      "t4.venuename",
      "=",
      "``",
      "cvpr",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "paperdataset",
      "as",
      "t2",
      "join",
      "dataset",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "datasetid",
      "=",
      "t1",
      ".",
      "datasetid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t1",
      ".",
      "datasetname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many papers used ImageNet datasets in cvpr ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "used",
      "ImageNet",
      "datasets",
      "in",
      "cvpr",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"ImageNet\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"cvpr\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT venueid FROM venue WHERE venuename  =  \"Neuroscience\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "venueid",
      "FROM",
      "venue",
      "WHERE",
      "venuename",
      "=",
      "``",
      "Neuroscience",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "venueid",
      "from",
      "venue",
      "where",
      "venuename",
      "=",
      "value"
    ],
    "question": "What venues are for Neuroscience ?",
    "question_toks": [
      "What",
      "venues",
      "are",
      "for",
      "Neuroscience",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"Neuroscience\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT MAX ( t3.year ) FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Mary Crainie\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "MAX",
      "(",
      "t3.year",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Mary",
      "Crainie",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "max",
      "(",
      "t3",
      ".",
      "year",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value"
    ],
    "question": "When was the last time Mary Crainie published a paper ?",
    "question_toks": [
      "When",
      "was",
      "the",
      "last",
      "time",
      "Mary",
      "Crainie",
      "published",
      "a",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            1,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Mary Crainie\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.authorid FROM paperkeyphrase AS t6 JOIN keyphrase AS t3 ON t6.keyphraseid  =  t3.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t6.paperid JOIN writes AS t5 ON t5.paperid  =  t4.paperid JOIN author AS t1 ON t5.authorid  =  t1.authorid JOIN author AS t2 ON t4.authorid  =  t2.authorid WHERE t2.authorname  =  \"Philipp Koehn\" AND t3.keyphrasename  =  \"Machine Translation Output\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.authorid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t6",
      "JOIN",
      "keyphrase",
      "AS",
      "t3",
      "ON",
      "t6.keyphraseid",
      "=",
      "t3.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t6.paperid",
      "JOIN",
      "writes",
      "AS",
      "t5",
      "ON",
      "t5.paperid",
      "=",
      "t4.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t5.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.authorid",
      "=",
      "t2.authorid",
      "WHERE",
      "t2.authorname",
      "=",
      "``",
      "Philipp",
      "Koehn",
      "''",
      "AND",
      "t3.keyphrasename",
      "=",
      "``",
      "Machine",
      "Translation",
      "Output",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "authorid",
      "from",
      "paperkeyphrase",
      "as",
      "t6",
      "join",
      "keyphrase",
      "as",
      "t3",
      "on",
      "t6",
      ".",
      "keyphraseid",
      "=",
      "t3",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t6",
      ".",
      "paperid",
      "join",
      "writes",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "paperid",
      "=",
      "t4",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t2",
      ".",
      "authorid",
      "where",
      "t2",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "I want the co-authors of papers on Machine Translation Output with Philipp Koehn",
    "question_toks": [
      "I",
      "want",
      "the",
      "co-authors",
      "of",
      "papers",
      "on",
      "Machine",
      "Translation",
      "Output",
      "with",
      "Philipp",
      "Koehn"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Philipp Koehn\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Machine Translation Output\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( DISTINCT t3.paperid ) FROM venue AS t4 JOIN paper AS t3 ON t4.venueid  =  t3.venueid JOIN writes AS t2 ON t2.paperid  =  t3.paperid JOIN author AS t1 ON t2.authorid  =  t1.authorid WHERE t1.authorname  =  \"Samuel Madden\" AND t4.venuename != \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t4",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Samuel",
      "Madden",
      "''",
      "AND",
      "t4.venuename",
      "!",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t4",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "venuename",
      "!",
      "=",
      "value"
    ],
    "question": "How many papers does Samuel Madden publish outside of PVLDB area ?",
    "question_toks": [
      "How",
      "many",
      "papers",
      "does",
      "Samuel",
      "Madden",
      "publish",
      "outside",
      "of",
      "PVLDB",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Samuel Madden\"",
          null
        ],
        "and",
        [
          false,
          7,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.journalid  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Donald E Knuth\" GROUP BY t3.journalid  ,  t3.year ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.journalid",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Donald",
      "E",
      "Knuth",
      "''",
      "GROUP",
      "BY",
      "t3.journalid",
      ",",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "journalid",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "journalid",
      ",",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "which journal did Donald E Knuth publish his last paper ?",
    "question_toks": [
      "which",
      "journal",
      "did",
      "Donald",
      "E",
      "Knuth",
      "publish",
      "his",
      "last",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ],
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Donald E Knuth\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT venueid FROM paper WHERE title  =  \"Fracture of acrylic bone cement\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "venueid",
      "FROM",
      "paper",
      "WHERE",
      "title",
      "=",
      "``",
      "Fracture",
      "of",
      "acrylic",
      "bone",
      "cement",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "venueid",
      "from",
      "paper",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "What is the venue of Fracture of acrylic bone cement ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "venue",
      "of",
      "Fracture",
      "of",
      "acrylic",
      "bone",
      "cement",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"Fracture of acrylic bone cement\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t2.paperid ) FROM venue AS t3 JOIN paper AS t2 ON t3.venueid  =  t2.venueid JOIN writes AS t1 ON t1.paperid  =  t2.paperid WHERE t2.year  =  2010 AND t3.venuename  =  \"sigcse\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t2.paperid",
      ")",
      "FROM",
      "venue",
      "AS",
      "t3",
      "JOIN",
      "paper",
      "AS",
      "t2",
      "ON",
      "t3.venueid",
      "=",
      "t2.venueid",
      "JOIN",
      "writes",
      "AS",
      "t1",
      "ON",
      "t1.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t2.year",
      "=",
      "2010",
      "AND",
      "t3.venuename",
      "=",
      "``",
      "sigcse",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t2",
      ".",
      "paperid",
      ")",
      "from",
      "venue",
      "as",
      "t3",
      "join",
      "paper",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "venueid",
      "=",
      "t2",
      ".",
      "venueid",
      "join",
      "writes",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "How many authors published at sigcse in 2010 ?",
    "question_toks": [
      "How",
      "many",
      "authors",
      "published",
      "at",
      "sigcse",
      "in",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                1,
                false
              ],
              null
            ],
            [
              0,
              13,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            0
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2010.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"sigcse\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT title  ,  YEAR FROM paper WHERE title  =  \"A Switching Architecture For ISDN\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "title",
      ",",
      "YEAR",
      "FROM",
      "paper",
      "WHERE",
      "title",
      "=",
      "``",
      "A",
      "Switching",
      "Architecture",
      "For",
      "ISDN",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "title",
      ",",
      "year",
      "from",
      "paper",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "What is the year of publication of \" A Switching Architecture For ISDN \" ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "year",
      "of",
      "publication",
      "of",
      "``",
      "A",
      "Switching",
      "Architecture",
      "For",
      "ISDN",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"A Switching Architecture For ISDN\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t1.keyphraseid FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid JOIN venue AS t4 ON t4.venueid  =  t3.venueid WHERE t4.venuename  =  \"uist\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t1.keyphraseid",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "venue",
      "AS",
      "t4",
      "ON",
      "t4.venueid",
      "=",
      "t3.venueid",
      "WHERE",
      "t4.venuename",
      "=",
      "``",
      "uist",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t1",
      ".",
      "keyphraseid",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "venue",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "venueid",
      "=",
      "t3",
      ".",
      "venueid",
      "where",
      "t4",
      ".",
      "venuename",
      "=",
      "value"
    ],
    "question": "what keywords are used by papers at uist",
    "question_toks": [
      "what",
      "keywords",
      "are",
      "used",
      "by",
      "papers",
      "at",
      "uist"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"uist\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.paperid FROM writes AS t2 JOIN author AS t1 ON t2.authorid  =  t1.authorid JOIN paper AS t3 ON t2.paperid  =  t3.paperid WHERE t1.authorname  =  \"Su-In Lee\" AND t3.year  <  2012;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.paperid",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.authorid",
      "=",
      "t1.authorid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t2.paperid",
      "=",
      "t3.paperid",
      "WHERE",
      "t1.authorname",
      "=",
      "``",
      "Su-In",
      "Lee",
      "''",
      "AND",
      "t3.year",
      "<",
      "2012",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "paperid",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "authorname",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "Give me the papers written by Su-In Lee before 2012 .",
    "question_toks": [
      "Give",
      "me",
      "the",
      "papers",
      "written",
      "by",
      "Su-In",
      "Lee",
      "before",
      "2012",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ],
            [
              0,
              3,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Su-In Lee\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          2012.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT COUNT ( t3.paperid )  ,  t3.year FROM paperkeyphrase AS t2 JOIN keyphrase AS t1 ON t2.keyphraseid  =  t1.keyphraseid JOIN paper AS t3 ON t3.paperid  =  t2.paperid WHERE t1.keyphrasename  =  \"semantic parsing\" GROUP BY t3.year ORDER BY t3.year DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "COUNT",
      "(",
      "t3.paperid",
      ")",
      ",",
      "t3.year",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t1",
      "ON",
      "t2.keyphraseid",
      "=",
      "t1.keyphraseid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t3.paperid",
      "=",
      "t2.paperid",
      "WHERE",
      "t1.keyphrasename",
      "=",
      "``",
      "semantic",
      "parsing",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      "ORDER",
      "BY",
      "t3.year",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "count",
      "(",
      "t3",
      ".",
      "paperid",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t1",
      ".",
      "keyphraseid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "where",
      "t1",
      ".",
      "keyphrasename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year",
      "order",
      "by",
      "t3",
      ".",
      "year",
      "desc"
    ],
    "question": "papers in semantic parsing for each year",
    "question_toks": [
      "papers",
      "in",
      "semantic",
      "parsing",
      "for",
      "each",
      "year"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          14,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            3,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"semantic parsing\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.citingpaperid",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t2",
      "ON",
      "t1.paperid",
      "=",
      "t2.citedpaperid",
      "GROUP",
      "BY",
      "t2.citingpaperid",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.citedpaperid",
      ")",
      ">",
      "=",
      "5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "citingpaperid",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "citedpaperid",
      "group",
      "by",
      "t2",
      ".",
      "citingpaperid",
      "having",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "citedpaperid",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "papers with at least 5 citations",
    "question_toks": [
      "papers",
      "with",
      "at",
      "least",
      "5",
      "citations"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              19,
              true
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t2.citingpaperid FROM paper AS t1 JOIN cite AS t2 ON t1.paperid  =  t2.citedpaperid GROUP BY t2.citingpaperid HAVING COUNT ( DISTINCT t2.citedpaperid )  >=  5;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t2.citingpaperid",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t2",
      "ON",
      "t1.paperid",
      "=",
      "t2.citedpaperid",
      "GROUP",
      "BY",
      "t2.citingpaperid",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.citedpaperid",
      ")",
      ">",
      "=",
      "5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t2",
      ".",
      "citingpaperid",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "citedpaperid",
      "group",
      "by",
      "t2",
      ".",
      "citingpaperid",
      "having",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "citedpaperid",
      ")",
      ">",
      "=",
      "value"
    ],
    "question": "papers cited by at least 5 papers",
    "question_toks": [
      "papers",
      "cited",
      "by",
      "at",
      "least",
      "5",
      "papers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          18,
          false
        ]
      ],
      "having": [
        [
          false,
          5,
          [
            0,
            [
              3,
              19,
              true
            ],
            null
          ],
          5.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.citedpaperid  ,  COUNT ( t3.citingpaperid ) FROM paper AS t1 JOIN cite AS t3 ON t1.paperid  =  t3.citedpaperid JOIN venue AS t2 ON t2.venueid  =  t1.venueid WHERE t2.venuename  =  \"sigcomm\" GROUP BY t3.citedpaperid ORDER BY COUNT ( t3.citingpaperid ) DESC;",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.citedpaperid",
      ",",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      "FROM",
      "paper",
      "AS",
      "t1",
      "JOIN",
      "cite",
      "AS",
      "t3",
      "ON",
      "t1.paperid",
      "=",
      "t3.citedpaperid",
      "JOIN",
      "venue",
      "AS",
      "t2",
      "ON",
      "t2.venueid",
      "=",
      "t1.venueid",
      "WHERE",
      "t2.venuename",
      "=",
      "``",
      "sigcomm",
      "''",
      "GROUP",
      "BY",
      "t3.citedpaperid",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "t3.citingpaperid",
      ")",
      "DESC",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "citedpaperid",
      ",",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "from",
      "paper",
      "as",
      "t1",
      "join",
      "cite",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "citedpaperid",
      "join",
      "venue",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "venueid",
      "=",
      "t1",
      ".",
      "venueid",
      "where",
      "t2",
      ".",
      "venuename",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "citedpaperid",
      "order",
      "by",
      "count",
      "(",
      "t3",
      ".",
      "citingpaperid",
      ")",
      "desc"
    ],
    "question": "What is the most cited paper at sigcomm ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "most",
      "cited",
      "paper",
      "at",
      "sigcomm",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ],
            [
              0,
              19,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              18,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ],
          [
            3,
            [
              0,
              [
                0,
                18,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"sigcomm\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "scholar",
    "query": "SELECT DISTINCT t3.title FROM paperkeyphrase AS t2 JOIN keyphrase AS t5 ON t2.keyphraseid  =  t5.keyphraseid JOIN writes AS t4 ON t4.paperid  =  t2.paperid JOIN paper AS t3 ON t4.paperid  =  t3.paperid JOIN author AS t1 ON t4.authorid  =  t1.authorid WHERE t1.authorname LIKE \"Ranjit Jhala\" AND t5.keyphrasename  =  \"Liquid Haskell\";",
    "query_toks": [
      "SELECT",
      "DISTINCT",
      "t3.title",
      "FROM",
      "paperkeyphrase",
      "AS",
      "t2",
      "JOIN",
      "keyphrase",
      "AS",
      "t5",
      "ON",
      "t2.keyphraseid",
      "=",
      "t5.keyphraseid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.paperid",
      "=",
      "t2.paperid",
      "JOIN",
      "paper",
      "AS",
      "t3",
      "ON",
      "t4.paperid",
      "=",
      "t3.paperid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.authorid",
      "=",
      "t1.authorid",
      "WHERE",
      "t1.authorname",
      "LIKE",
      "``",
      "Ranjit",
      "Jhala",
      "''",
      "AND",
      "t5.keyphrasename",
      "=",
      "``",
      "Liquid",
      "Haskell",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "distinct",
      "t3",
      ".",
      "title",
      "from",
      "paperkeyphrase",
      "as",
      "t2",
      "join",
      "keyphrase",
      "as",
      "t5",
      "on",
      "t2",
      ".",
      "keyphraseid",
      "=",
      "t5",
      ".",
      "keyphraseid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t2",
      ".",
      "paperid",
      "join",
      "paper",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "paperid",
      "=",
      "t3",
      ".",
      "paperid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "authorid",
      "=",
      "t1",
      ".",
      "authorid",
      "where",
      "t1",
      ".",
      "authorname",
      "like",
      "value",
      "and",
      "t5",
      ".",
      "keyphrasename",
      "=",
      "value"
    ],
    "question": "What is the name of Ranjit Jhala 's Liquid Haskell paper ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "name",
      "of",
      "Ranjit",
      "Jhala",
      "'s",
      "Liquid",
      "Haskell",
      "paper",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            8
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        true,
        [
          [
            0,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          9,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Ranjit Jhala\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          "\"Liquid Haskell\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT name FROM business WHERE rating  >  4.5;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "business",
      "WHERE",
      "rating",
      ">",
      "4.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "business",
      "where",
      "rating",
      ">",
      "value"
    ],
    "question": "List all the businesses with more than 4.5 stars",
    "question_toks": [
      "List",
      "all",
      "the",
      "businesses",
      "with",
      "more",
      "than",
      "4.5",
      "stars"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          4.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT name FROM business WHERE rating  =  3.5;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "business",
      "WHERE",
      "rating",
      "=",
      "3.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "business",
      "where",
      "rating",
      "=",
      "value"
    ],
    "question": "List all businesses with rating 3.5",
    "question_toks": [
      "List",
      "all",
      "businesses",
      "with",
      "rating",
      "3.5"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT user_id FROM USER WHERE name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "user_id",
      "FROM",
      "USER",
      "WHERE",
      "name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "user_id",
      "from",
      "user",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "List all user ids with name Michelle",
    "question_toks": [
      "List",
      "all",
      "user",
      "ids",
      "with",
      "name",
      "Michelle"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT state FROM business WHERE name  =  \"Whataburger\";",
    "query_toks": [
      "SELECT",
      "state",
      "FROM",
      "business",
      "WHERE",
      "name",
      "=",
      "``",
      "Whataburger",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "state",
      "from",
      "business",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Find all states in which there is a Whataburger",
    "question_toks": [
      "Find",
      "all",
      "states",
      "in",
      "which",
      "there",
      "is",
      "a",
      "Whataburger"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Whataburger\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t2.category_name  =  \"category_category_name0\";",
    "query_toks": [
      "SELECT",
      "t1.city",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "MGM",
      "Grand",
      "Buffet",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "category_category_name0",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "city",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all cities in which there is a restaurant called \" MGM Grand Buffet \"",
    "question_toks": [
      "Find",
      "all",
      "cities",
      "in",
      "which",
      "there",
      "is",
      "a",
      "restaurant",
      "called",
      "``",
      "MGM",
      "Grand",
      "Buffet",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"MGM Grand Buffet\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"category_category_name0\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT city FROM business WHERE rating  <  1.5;",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "business",
      "WHERE",
      "rating",
      "<",
      "1.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "business",
      "where",
      "rating",
      "<",
      "value"
    ],
    "question": "Find the cities of businesses rated below 1.5",
    "question_toks": [
      "Find",
      "the",
      "cities",
      "of",
      "businesses",
      "rated",
      "below",
      "1.5"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          1.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT city FROM business WHERE name  =  \"Taj Mahal\";",
    "query_toks": [
      "SELECT",
      "city",
      "FROM",
      "business",
      "WHERE",
      "name",
      "=",
      "``",
      "Taj",
      "Mahal",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "city",
      "from",
      "business",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Find all cities which has a \" Taj Mahal \" .",
    "question_toks": [
      "Find",
      "all",
      "cities",
      "which",
      "has",
      "a",
      "``",
      "Taj",
      "Mahal",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Taj Mahal\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT text FROM review WHERE rating  <  1;",
    "query_toks": [
      "SELECT",
      "text",
      "FROM",
      "review",
      "WHERE",
      "rating",
      "<",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "text",
      "from",
      "review",
      "where",
      "rating",
      "<",
      "value"
    ],
    "question": "List all the reviews which rated a business less than 1",
    "question_toks": [
      "List",
      "all",
      "the",
      "reviews",
      "which",
      "rated",
      "a",
      "business",
      "less",
      "than",
      "1"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          1.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.rating",
      ">",
      "3.5",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "rating",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "List all the restaurant rated more than 3.5",
    "question_toks": [
      "List",
      "all",
      "the",
      "restaurant",
      "rated",
      "more",
      "than",
      "3.5"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.5,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Taj Mahal\" AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.city",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Taj",
      "Mahal",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "city",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "find all cities which has a \" Taj Mahal \" restaurant",
    "question_toks": [
      "find",
      "all",
      "cities",
      "which",
      "has",
      "a",
      "``",
      "Taj",
      "Mahal",
      "``",
      "restaurant"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Taj Mahal\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";",
    "query_toks": [
      "SELECT",
      "t1.text",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "review",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Niloofar",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "text",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "review",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "list all the reviews by Niloofar",
    "question_toks": [
      "list",
      "all",
      "the",
      "reviews",
      "by",
      "Niloofar"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Niloofar\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t3.name  =  \"Niloofar\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "review",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t3",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Niloofar",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "review",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "list all the businesses which have a review by Niloofar",
    "question_toks": [
      "list",
      "all",
      "the",
      "businesses",
      "which",
      "have",
      "a",
      "review",
      "by",
      "Niloofar"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Niloofar\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.rating  =  5 AND t3.name  =  \"Niloofar\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "review",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t3",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t2.rating",
      "=",
      "5",
      "AND",
      "t3.name",
      "=",
      "``",
      "Niloofar",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "review",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "rating",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "list all the businesses which Niloofar rated 5",
    "question_toks": [
      "list",
      "all",
      "the",
      "businesses",
      "which",
      "Niloofar",
      "rated",
      "5"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          5.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Niloofar\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t4.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN review AS t4 ON t4.business_id  =  t1.business_id JOIN USER AS t5 ON t5.user_id  =  t4.user_id WHERE t2.category_name  =  \"Italian\" AND t3.category_name  =  \"category_category_name1\" AND t5.name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "t4.text",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t4",
      "ON",
      "t4.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t5",
      "ON",
      "t5.user_id",
      "=",
      "t4.user_id",
      "WHERE",
      "t2.category_name",
      "=",
      "``",
      "Italian",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "category_category_name1",
      "''",
      "AND",
      "t5.name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "text",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "user_id",
      "=",
      "t4",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "List all the reviews by Michelle for Italian restaurant",
    "question_toks": [
      "List",
      "all",
      "the",
      "reviews",
      "by",
      "Michelle",
      "for",
      "Italian",
      "restaurant"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Italian\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"category_category_name1\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t3.text ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.text",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Cafe",
      "Zinho",
      "''",
      "AND",
      "t1.state",
      "=",
      "``",
      "Texas",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "text",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "state",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "find the number of reviews written for \" Cafe Zinho \" restaurant in Texas",
    "question_toks": [
      "find",
      "the",
      "number",
      "of",
      "reviews",
      "written",
      "for",
      "``",
      "Cafe",
      "Zinho",
      "``",
      "restaurant",
      "in",
      "Texas"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Cafe Zinho\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.rating  =  5 AND t2.category_name  =  \"Italian\" AND t3.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.rating",
      "=",
      "5",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Italian",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "rating",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "List all 5 star Italian restaurant",
    "question_toks": [
      "List",
      "all",
      "5",
      "star",
      "Italian",
      "restaurant"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          5.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Italian\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.neighbourhood_name",
      "FROM",
      "category",
      "AS",
      "t3",
      "JOIN",
      "business",
      "AS",
      "t2",
      "ON",
      "t3.business_id",
      "=",
      "t2.business_id",
      "JOIN",
      "category",
      "AS",
      "t4",
      "ON",
      "t4.business_id",
      "=",
      "t2.business_id",
      "JOIN",
      "neighbourhood",
      "AS",
      "t1",
      "ON",
      "t1.business_id",
      "=",
      "t2.business_id",
      "WHERE",
      "t2.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "Italian",
      "''",
      "AND",
      "t4.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "neighbourhood_name",
      "from",
      "category",
      "as",
      "t3",
      "join",
      "business",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "join",
      "neighbourhood",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "where",
      "t2",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "List all the neighbourhoods with Italian restaurant in Madison",
    "question_toks": [
      "List",
      "all",
      "the",
      "neighbourhoods",
      "with",
      "Italian",
      "restaurant",
      "in",
      "Madison"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Italian\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN category AS t4 ON t4.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  <  2.5 AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.neighbourhood_name",
      "FROM",
      "category",
      "AS",
      "t3",
      "JOIN",
      "business",
      "AS",
      "t2",
      "ON",
      "t3.business_id",
      "=",
      "t2.business_id",
      "JOIN",
      "category",
      "AS",
      "t4",
      "ON",
      "t4.business_id",
      "=",
      "t2.business_id",
      "JOIN",
      "neighbourhood",
      "AS",
      "t1",
      "ON",
      "t1.business_id",
      "=",
      "t2.business_id",
      "WHERE",
      "t2.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t2.rating",
      "<",
      "2.5",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "Italian",
      "''",
      "AND",
      "t4.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "neighbourhood_name",
      "from",
      "category",
      "as",
      "t3",
      "join",
      "business",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "join",
      "neighbourhood",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "where",
      "t2",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "rating",
      "<",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "List all the neighbourhoods with Italian restaurant rated less than 2.5 in Madison",
    "question_toks": [
      "List",
      "all",
      "the",
      "neighbourhoods",
      "with",
      "Italian",
      "restaurant",
      "rated",
      "less",
      "than",
      "2.5",
      "in",
      "Madison"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2.5,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Italian\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.state",
      "=",
      "``",
      "Pennsylvania",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "state",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "find all the restaurant in Pennsylvania",
    "question_toks": [
      "find",
      "all",
      "the",
      "restaurant",
      "in",
      "Pennsylvania"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Pennsylvania\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Pennsylvania\" AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.state",
      "=",
      "``",
      "Pennsylvania",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "state",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "List all businesses that are restaurant in Pennsylvania .",
    "question_toks": [
      "List",
      "all",
      "businesses",
      "that",
      "are",
      "restaurant",
      "in",
      "Pennsylvania",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Pennsylvania\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t3.text FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id WHERE t1.review_count  >  100 AND t2.category_name  =  \"Pet Groomers\";",
    "query_toks": [
      "SELECT",
      "t3.text",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.review_count",
      ">",
      "100",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Pet",
      "Groomers",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "text",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "review_count",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all the reviews for all Pet Groomers with more than 100 reviews",
    "question_toks": [
      "Find",
      "all",
      "the",
      "reviews",
      "for",
      "all",
      "Pet",
      "Groomers",
      "with",
      "more",
      "than",
      "100",
      "reviews"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          100.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Pet Groomers\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "breweries",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "What are all the breweries in \" Los Angeles \" ?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "breweries",
      "in",
      "``",
      "Los",
      "Angeles",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"breweries\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "breweries",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all breweries in Los Angeles",
    "question_toks": [
      "Find",
      "all",
      "breweries",
      "in",
      "Los",
      "Angeles"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"breweries\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"breweries\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "breweries",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all breweries in \" Los Angeles \"",
    "question_toks": [
      "Find",
      "all",
      "breweries",
      "in",
      "``",
      "Los",
      "Angeles",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"breweries\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Mesa Grill\" AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t4.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Mesa",
      "Grill",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all users who reviewed restaurant \" Mesa Grill \"",
    "question_toks": [
      "Find",
      "all",
      "users",
      "who",
      "reviewed",
      "restaurant",
      "``",
      "Mesa",
      "Grill",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Mesa Grill\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT full_address FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Walmart\";",
    "query_toks": [
      "SELECT",
      "full_address",
      "FROM",
      "business",
      "WHERE",
      "city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "name",
      "=",
      "``",
      "Walmart",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "full_address",
      "from",
      "business",
      "where",
      "city",
      "=",
      "value",
      "and",
      "name",
      "=",
      "value"
    ],
    "question": "List the addresses of all Walmart in \" Los Angeles \"",
    "question_toks": [
      "List",
      "the",
      "addresses",
      "of",
      "all",
      "Walmart",
      "in",
      "``",
      "Los",
      "Angeles",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Walmart\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restaurant\" AND t4.name  =  \"Patrick\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "AND",
      "t4.name",
      "=",
      "``",
      "Patrick",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all restaurant reviewed by Patrick in \" Dallas \"",
    "question_toks": [
      "Find",
      "all",
      "restaurant",
      "reviewed",
      "by",
      "Patrick",
      "in",
      "``",
      "Dallas",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Patrick\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"restaurant\" AND t4.name  =  \"Patrick\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "AND",
      "t4.name",
      "=",
      "``",
      "Patrick",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Which restaurant in Dallas were reviewed by user Patrick ?",
    "question_toks": [
      "Which",
      "restaurant",
      "in",
      "Dallas",
      "were",
      "reviewed",
      "by",
      "user",
      "Patrick",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Patrick\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t2.category_name",
      "=",
      "``",
      "Bars",
      "''",
      "AND",
      "t4.name",
      "=",
      "``",
      "Patrick",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all Bars reviewed by Patrick",
    "question_toks": [
      "Find",
      "all",
      "Bars",
      "reviewed",
      "by",
      "Patrick"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Bars\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Patrick\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.rating  >=  3 AND t2.category_name  =  \"Bars\" AND t4.name  =  \"Patrick\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t1.rating",
      ">",
      "=",
      "3",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Bars",
      "''",
      "AND",
      "t4.name",
      "=",
      "``",
      "Patrick",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "rating",
      ">",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all Bars reviewed by Patrick with at least 3 stars",
    "question_toks": [
      "Find",
      "all",
      "Bars",
      "reviewed",
      "by",
      "Patrick",
      "with",
      "at",
      "least",
      "3",
      "stars"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          5,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Bars\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Patrick\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.year  =  2015;",
    "query_toks": [
      "SELECT",
      "t3.name",
      "FROM",
      "tip",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t3",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Barrio",
      "Cafe",
      "''",
      "AND",
      "t2.year",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "tip",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Find all users who have written tips for \" Barrio Cafe \" in 2015",
    "question_toks": [
      "Find",
      "all",
      "users",
      "who",
      "have",
      "written",
      "tips",
      "for",
      "``",
      "Barrio",
      "Cafe",
      "``",
      "in",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Barrio Cafe\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT name FROM business WHERE rating  <  2 AND state  =  \"Texas\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "business",
      "WHERE",
      "rating",
      "<",
      "2",
      "AND",
      "state",
      "=",
      "``",
      "Texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "business",
      "where",
      "rating",
      "<",
      "value",
      "and",
      "state",
      "=",
      "value"
    ],
    "question": "Find all businesses in Texas with a rating below 2",
    "question_toks": [
      "Find",
      "all",
      "businesses",
      "in",
      "Texas",
      "with",
      "a",
      "rating",
      "below",
      "2"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          4,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Seafood",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all restaurant Seafood in Los Angeles",
    "question_toks": [
      "Find",
      "all",
      "restaurant",
      "Seafood",
      "in",
      "Los",
      "Angeles"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Seafood\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Seafood",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "List all the Seafood restaurant in \" Los Angeles \"",
    "question_toks": [
      "List",
      "all",
      "the",
      "Seafood",
      "restaurant",
      "in",
      "``",
      "Los",
      "Angeles",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Seafood\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Seafood\" AND t3.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Seafood",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all restaurant that serve Seafood in \" Los Angeles \"",
    "question_toks": [
      "Find",
      "all",
      "restaurant",
      "that",
      "serve",
      "Seafood",
      "in",
      "``",
      "Los",
      "Angeles",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Seafood\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.text FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.rating  >  4 AND t2.name  =  \"Patrick\";",
    "query_toks": [
      "SELECT",
      "t1.text",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "review",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t1.rating",
      ">",
      "4",
      "AND",
      "t2.name",
      "=",
      "``",
      "Patrick",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "text",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "review",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "rating",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all reviews by Patrick with a rating above 4",
    "question_toks": [
      "Find",
      "all",
      "reviews",
      "by",
      "Patrick",
      "with",
      "a",
      "rating",
      "above",
      "4"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              28,
              false
            ],
            null
          ],
          4.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Patrick\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT business_id FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Apple Store\";",
    "query_toks": [
      "SELECT",
      "business_id",
      "FROM",
      "business",
      "WHERE",
      "city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "name",
      "=",
      "``",
      "Apple",
      "Store",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "business_id",
      "from",
      "business",
      "where",
      "city",
      "=",
      "value",
      "and",
      "name",
      "=",
      "value"
    ],
    "question": "Find all Apple Store in \" Los Angeles \"",
    "question_toks": [
      "Find",
      "all",
      "Apple",
      "Store",
      "in",
      "``",
      "Los",
      "Angeles",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Apple Store\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  4.5 AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t1.rating",
      ">",
      "4.5",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all Dallas restaurant with a rating above 4.5",
    "question_toks": [
      "Find",
      "all",
      "Dallas",
      "restaurant",
      "with",
      "a",
      "rating",
      "above",
      "4.5"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          4.5,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.neighbourhood_name FROM category AS t3 JOIN business AS t2 ON t3.business_id  =  t2.business_id JOIN neighbourhood AS t1 ON t1.business_id  =  t2.business_id WHERE t2.name  =  \"Flat Top Grill\" AND t3.category_name  =  \"category_category_name0\";",
    "query_toks": [
      "SELECT",
      "t1.neighbourhood_name",
      "FROM",
      "category",
      "AS",
      "t3",
      "JOIN",
      "business",
      "AS",
      "t2",
      "ON",
      "t3.business_id",
      "=",
      "t2.business_id",
      "JOIN",
      "neighbourhood",
      "AS",
      "t1",
      "ON",
      "t1.business_id",
      "=",
      "t2.business_id",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Flat",
      "Top",
      "Grill",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "category_category_name0",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "neighbourhood_name",
      "from",
      "category",
      "as",
      "t3",
      "join",
      "business",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "join",
      "neighbourhood",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "What neighbourhood is restaurant \" Flat Top Grill \" in ?",
    "question_toks": [
      "What",
      "neighbourhood",
      "is",
      "restaurant",
      "``",
      "Flat",
      "Top",
      "Grill",
      "``",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Flat Top Grill\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"category_category_name0\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Vintner Grill\" AND t2.likes  >  9;",
    "query_toks": [
      "SELECT",
      "t2.text",
      "FROM",
      "tip",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Vintner",
      "Grill",
      "''",
      "AND",
      "t2.likes",
      ">",
      "9",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "text",
      "from",
      "tip",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "likes",
      ">",
      "value"
    ],
    "question": "Find all tips about \" Vintner Grill \" that received more than 9 likes",
    "question_toks": [
      "Find",
      "all",
      "tips",
      "about",
      "``",
      "Vintner",
      "Grill",
      "``",
      "that",
      "received",
      "more",
      "than",
      "9",
      "likes"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Vintner Grill\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              36,
              false
            ],
            null
          ],
          9.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Kabob Palace\" AND t2.year  =  2014;",
    "query_toks": [
      "SELECT",
      "t2.text",
      "FROM",
      "review",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Kabob",
      "Palace",
      "''",
      "AND",
      "t2.year",
      "=",
      "2014",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "text",
      "from",
      "review",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Find all reviews about \" Kabob Palace \" in year 2014",
    "question_toks": [
      "Find",
      "all",
      "reviews",
      "about",
      "``",
      "Kabob",
      "Palace",
      "``",
      "in",
      "year",
      "2014"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Kabob Palace\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t3.name FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Dallas\";",
    "query_toks": [
      "SELECT",
      "t3.name",
      "FROM",
      "tip",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t3",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "tip",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value"
    ],
    "question": "Find all users who have written tips about businesses in Dallas",
    "question_toks": [
      "Find",
      "all",
      "users",
      "who",
      "have",
      "written",
      "tips",
      "about",
      "businesses",
      "in",
      "Dallas"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.city FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"MGM Grand Buffet\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.city",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "MGM",
      "Grand",
      "Buffet",
      "''",
      "AND",
      "t1.state",
      "=",
      "``",
      "Texas",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "city",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "state",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all cities in Texas in which there is a restaurant called \" MGM Grand Buffet \"",
    "question_toks": [
      "Find",
      "all",
      "cities",
      "in",
      "Texas",
      "in",
      "which",
      "there",
      "is",
      "a",
      "restaurant",
      "called",
      "``",
      "MGM",
      "Grand",
      "Buffet",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"MGM Grand Buffet\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN tip AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"Pet Groomers\";",
    "query_toks": [
      "SELECT",
      "t4.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "tip",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t2.category_name",
      "=",
      "``",
      "Pet",
      "Groomers",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "tip",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find the users who have given tips on Pet Groomers",
    "question_toks": [
      "Find",
      "the",
      "users",
      "who",
      "have",
      "given",
      "tips",
      "on",
      "Pet",
      "Groomers"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Pet Groomers\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Texas\";",
    "query_toks": [
      "SELECT",
      "t2.text",
      "FROM",
      "tip",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Cafe",
      "Zinho",
      "''",
      "AND",
      "t1.state",
      "=",
      "``",
      "Texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "text",
      "from",
      "tip",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "state",
      "=",
      "value"
    ],
    "question": "Find all tips for \" Cafe Zinho \" in Texas .",
    "question_toks": [
      "Find",
      "all",
      "tips",
      "for",
      "``",
      "Cafe",
      "Zinho",
      "``",
      "in",
      "Texas",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Cafe Zinho\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t4.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "List all users who reviewed businesses that are restaurant .",
    "question_toks": [
      "List",
      "all",
      "users",
      "who",
      "reviewed",
      "businesses",
      "that",
      "are",
      "restaurant",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t2.text FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t1.state  =  \"Pennsylvania\" AND t2.year  =  2010;",
    "query_toks": [
      "SELECT",
      "t2.text",
      "FROM",
      "tip",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Cafe",
      "Zinho",
      "''",
      "AND",
      "t1.state",
      "=",
      "``",
      "Pennsylvania",
      "''",
      "AND",
      "t2.year",
      "=",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "text",
      "from",
      "tip",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "state",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "List all tips for \" Cafe Zinho \" in Pennsylvania in 2010 .",
    "question_toks": [
      "List",
      "all",
      "tips",
      "for",
      "``",
      "Cafe",
      "Zinho",
      "``",
      "in",
      "Pennsylvania",
      "in",
      "2010",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Cafe Zinho\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Pennsylvania\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t4.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t2.category_name  =  \"restaurant\" AND t3.year  =  2010;",
    "query_toks": [
      "SELECT",
      "t4.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "AND",
      "t3.year",
      "=",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "List all users who reviewed businesses that are restaurant in 2010 .",
    "question_toks": [
      "List",
      "all",
      "users",
      "who",
      "reviewed",
      "businesses",
      "that",
      "are",
      "restaurant",
      "in",
      "2010",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t2.text FROM USER AS t3 JOIN review AS t1 ON t3.user_id  =  t1.user_id JOIN tip AS t2 ON t3.user_id  =  t2.user_id WHERE t1.year  =  2012;",
    "query_toks": [
      "SELECT",
      "t2.text",
      "FROM",
      "USER",
      "AS",
      "t3",
      "JOIN",
      "review",
      "AS",
      "t1",
      "ON",
      "t3.user_id",
      "=",
      "t1.user_id",
      "JOIN",
      "tip",
      "AS",
      "t2",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t1.year",
      "=",
      "2012",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "text",
      "from",
      "user",
      "as",
      "t3",
      "join",
      "review",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "join",
      "tip",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "Find all the tips from a user who has written a review in 2012",
    "question_toks": [
      "Find",
      "all",
      "the",
      "tips",
      "from",
      "a",
      "user",
      "who",
      "has",
      "written",
      "a",
      "review",
      "in",
      "2012"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2012.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t2.text FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  =  2.5;",
    "query_toks": [
      "SELECT",
      "t2.text",
      "FROM",
      "review",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.rating",
      "=",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "text",
      "from",
      "review",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "rating",
      "=",
      "value"
    ],
    "question": "Find all reviews for businesses rated 2.5",
    "question_toks": [
      "Find",
      "all",
      "reviews",
      "for",
      "businesses",
      "rated",
      "2.5"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "escape",
      "games",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "find the number of escape games in Madison",
    "question_toks": [
      "find",
      "the",
      "number",
      "of",
      "escape",
      "games",
      "in",
      "Madison"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"escape games\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "escape",
      "games",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "What is the number of escape games in Madison",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "escape",
      "games",
      "in",
      "Madison"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"escape games\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "escape",
      "games",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "How many escape games exist in Madison",
    "question_toks": [
      "How",
      "many",
      "escape",
      "games",
      "exist",
      "in",
      "Madison"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"escape games\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "escape",
      "games",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "What is the number of escape games in \" Madison \" ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "escape",
      "games",
      "in",
      "``",
      "Madison",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"escape games\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.category_name  =  \"escape games\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "escape",
      "games",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "How many escape games are there in Madison ?",
    "question_toks": [
      "How",
      "many",
      "escape",
      "games",
      "are",
      "there",
      "in",
      "Madison",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"escape games\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.rating  >  3.5 AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.rating",
      ">",
      "3.5",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "rating",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "find the number of restaurant rated more than 3.5",
    "question_toks": [
      "find",
      "the",
      "number",
      "of",
      "restaurant",
      "rated",
      "more",
      "than",
      "3.5"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.5,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Moroccan\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t4.count",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "checkin",
      "AS",
      "t4",
      "ON",
      "t4.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "Moroccan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t4",
      ".",
      "count",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "checkin",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "find the total checkins in Moroccan restaurant in \" Los Angeles \"",
    "question_toks": [
      "find",
      "the",
      "total",
      "checkins",
      "in",
      "Moroccan",
      "restaurant",
      "in",
      "``",
      "Los",
      "Angeles",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Moroccan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" AND t4.day  =  \"Friday\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t4.count",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "checkin",
      "AS",
      "t4",
      "ON",
      "t4.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Moroccan",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "AND",
      "t4.day",
      "=",
      "``",
      "Friday",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t4",
      ".",
      "count",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "checkin",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "day",
      "=",
      "value"
    ],
    "question": "find the total checkins in Moroccan restaurant in \" Los Angeles \" on Friday",
    "question_toks": [
      "find",
      "the",
      "total",
      "checkins",
      "in",
      "Moroccan",
      "restaurant",
      "in",
      "``",
      "Los",
      "Angeles",
      "``",
      "on",
      "Friday"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Moroccan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Friday\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t4.day  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\" GROUP BY t4.day;",
    "query_toks": [
      "SELECT",
      "t4.day",
      ",",
      "SUM",
      "(",
      "t4.count",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "checkin",
      "AS",
      "t4",
      "ON",
      "t4.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Moroccan",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "GROUP",
      "BY",
      "t4.day",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "day",
      ",",
      "sum",
      "(",
      "t4",
      ".",
      "count",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "checkin",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value",
      "group",
      "by",
      "t4",
      ".",
      "day"
    ],
    "question": "find the total checkins in Moroccan restaurant in \" Los Angeles \" per day",
    "question_toks": [
      "find",
      "the",
      "total",
      "checkins",
      "in",
      "Moroccan",
      "restaurant",
      "in",
      "``",
      "Los",
      "Angeles",
      "``",
      "per",
      "day"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Moroccan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.state  ,  SUM ( t4.count ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id JOIN checkin AS t4 ON t4.business_id  =  t1.business_id WHERE t2.category_name  =  \"Italian\" AND t3.category_name  =  \"Delis\" AND t4.day  =  \"Sunday\" GROUP BY t1.state;",
    "query_toks": [
      "SELECT",
      "t1.state",
      ",",
      "SUM",
      "(",
      "t4.count",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "checkin",
      "AS",
      "t4",
      "ON",
      "t4.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t2.category_name",
      "=",
      "``",
      "Italian",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "Delis",
      "''",
      "AND",
      "t4.day",
      "=",
      "``",
      "Sunday",
      "''",
      "GROUP",
      "BY",
      "t1.state",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "state",
      ",",
      "sum",
      "(",
      "t4",
      ".",
      "count",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "checkin",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "day",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "state"
    ],
    "question": "find the total checkins in Italian Delis in each state on Sunday",
    "question_toks": [
      "find",
      "the",
      "total",
      "checkins",
      "in",
      "Italian",
      "Delis",
      "in",
      "each",
      "state",
      "on",
      "Sunday"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          11,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                11,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Italian\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Delis\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Sunday\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2015 AND t2.name  =  \"Niloofar\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.text",
      ")",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "review",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t1.year",
      "=",
      "2015",
      "AND",
      "t2.name",
      "=",
      "``",
      "Niloofar",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "text",
      ")",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "review",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many reviews has Niloofar written in 2015",
    "question_toks": [
      "How",
      "many",
      "reviews",
      "has",
      "Niloofar",
      "written",
      "in",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Niloofar\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT AVG ( t1.rating ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "review",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "review",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "what is the average rating given in Michelle reviews",
    "question_toks": [
      "what",
      "is",
      "the",
      "average",
      "rating",
      "given",
      "in",
      "Michelle",
      "reviews"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t2.count FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\" AND t2.day  =  \"Friday\";",
    "query_toks": [
      "SELECT",
      "t2.count",
      "FROM",
      "checkin",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Cafe",
      "Zinho",
      "''",
      "AND",
      "t2.day",
      "=",
      "``",
      "Friday",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "count",
      "from",
      "checkin",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "day",
      "=",
      "value"
    ],
    "question": "What is the number of checkins for \" Cafe Zinho \" on Friday",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "checkins",
      "for",
      "``",
      "Cafe",
      "Zinho",
      "``",
      "on",
      "Friday"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Cafe Zinho\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              21,
              false
            ],
            null
          ],
          "\"Friday\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"Pittsburgh\" AND t1.name  =  \"Sushi Too\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.name",
      ")",
      "FROM",
      "review",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t3",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Pittsburgh",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Sushi",
      "Too",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "name",
      ")",
      "from",
      "review",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "how many users reviewed \" Sushi Too \" in Pittsburgh",
    "question_toks": [
      "how",
      "many",
      "users",
      "reviewed",
      "``",
      "Sushi",
      "Too",
      "``",
      "in",
      "Pittsburgh"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Pittsburgh\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Sushi Too\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Pittsburgh\" AND t1.rating  =  4.5 AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Pittsburgh",
      "''",
      "AND",
      "t1.rating",
      "=",
      "4.5",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "What is the number of restaurant in Pittsburgh rated 4.5",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "restaurant",
      "in",
      "Pittsburgh",
      "rated",
      "4.5"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Pittsburgh\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          4.5,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT text ) FROM tip WHERE YEAR  =  2015;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "text",
      ")",
      "FROM",
      "tip",
      "WHERE",
      "YEAR",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "text",
      ")",
      "from",
      "tip",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "How many tips have been written in 2015",
    "question_toks": [
      "How",
      "many",
      "tips",
      "have",
      "been",
      "written",
      "in",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT SUM ( t1.likes ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Niloofar\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t1.likes",
      ")",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "tip",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Niloofar",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t1",
      ".",
      "likes",
      ")",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "tip",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What is the total likes on tips from Niloofar",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "likes",
      "on",
      "tips",
      "from",
      "Niloofar"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Niloofar\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.name  =  \"Cafe Zinho\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t2.likes",
      ")",
      "FROM",
      "tip",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Cafe",
      "Zinho",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "likes",
      ")",
      "from",
      "tip",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What is the total likes on tips about \" Cafe Zinho \"",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "likes",
      "on",
      "tips",
      "about",
      "``",
      "Cafe",
      "Zinho",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Cafe Zinho\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT SUM ( t2.likes ) FROM tip AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Cafe Zinho\" AND t3.name  =  \"Niloofar\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t2.likes",
      ")",
      "FROM",
      "tip",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t3",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Cafe",
      "Zinho",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "Niloofar",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "likes",
      ")",
      "from",
      "tip",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What is the total likes on tips from Niloofar about \" Cafe Zinho \"",
    "question_toks": [
      "What",
      "is",
      "the",
      "total",
      "likes",
      "on",
      "tips",
      "from",
      "Niloofar",
      "about",
      "``",
      "Cafe",
      "Zinho",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                33,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Cafe Zinho\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Niloofar\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.text",
      ")",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "tip",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t1.year",
      "=",
      "2010",
      "AND",
      "t2.name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "text",
      ")",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "tip",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many tips has Michelle written in 2010",
    "question_toks": [
      "How",
      "many",
      "tips",
      "has",
      "Michelle",
      "written",
      "in",
      "2010"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          2010.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.year  =  2010 AND t2.name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.text",
      ")",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "tip",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t1.year",
      "=",
      "2010",
      "AND",
      "t2.name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "text",
      ")",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "tip",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Return me the number of tips that are written by Michelle in 2010 .",
    "question_toks": [
      "Return",
      "me",
      "the",
      "number",
      "of",
      "tips",
      "that",
      "are",
      "written",
      "by",
      "Michelle",
      "in",
      "2010",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              37,
              false
            ],
            null
          ],
          2010.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"April\" AND t2.name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.text",
      ")",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "tip",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t1.month",
      "=",
      "``",
      "April",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "text",
      ")",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "tip",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "month",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many tips has Michelle written in April",
    "question_toks": [
      "How",
      "many",
      "tips",
      "has",
      "Michelle",
      "written",
      "in",
      "April"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"April\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.state",
      "=",
      "``",
      "Texas",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "state",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "what is the number of restaurant in Texas",
    "question_toks": [
      "what",
      "is",
      "the",
      "number",
      "of",
      "restaurant",
      "in",
      "Texas"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bars\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t1.rating",
      ">",
      "3.5",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Bars",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "How many Bars in \" Dallas \" have a rating above 3.5 ?",
    "question_toks": [
      "How",
      "many",
      "Bars",
      "in",
      "``",
      "Dallas",
      "``",
      "have",
      "a",
      "rating",
      "above",
      "3.5",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.5,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Bars\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Bars\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t1.rating",
      ">",
      "3.5",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Bars",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "How many Bars in Dallas have a rating above 3.5 ?",
    "question_toks": [
      "How",
      "many",
      "Bars",
      "in",
      "Dallas",
      "have",
      "a",
      "rating",
      "above",
      "3.5",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.5,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Bars\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t1.name  =  \"Texas de Brazil\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Texas",
      "de",
      "Brazil",
      "''",
      "AND",
      "t1.state",
      "=",
      "``",
      "Texas",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "state",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "How many people reviewed the restaurant \" Texas de Brazil \" in Dallas Texas ?",
    "question_toks": [
      "How",
      "many",
      "people",
      "reviewed",
      "the",
      "restaurant",
      "``",
      "Texas",
      "de",
      "Brazil",
      "``",
      "in",
      "Dallas",
      "Texas",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Texas de Brazil\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t3.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.name  =  \"Bistro Di Napoli\" AND t2.year  =  2015;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.name",
      ")",
      "FROM",
      "review",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t3",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Bistro",
      "Di",
      "Napoli",
      "''",
      "AND",
      "t2.year",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "name",
      ")",
      "from",
      "review",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many people reviewed \" Bistro Di Napoli \" in 2015 ?",
    "question_toks": [
      "How",
      "many",
      "people",
      "reviewed",
      "``",
      "Bistro",
      "Di",
      "Napoli",
      "``",
      "in",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Bistro Di Napoli\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t3.category_name  =  \"restaurant\" AND t2.neighbourhood_name  =  \"Hazelwood\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t3",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "neighbourhood",
      "AS",
      "t2",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "AND",
      "t2.neighbourhood_name",
      "=",
      "``",
      "Hazelwood",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t3",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "neighbourhood",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "neighbourhood_name",
      "=",
      "value"
    ],
    "question": "How many restaurant are there in the Hazelwood district of Dallas ?",
    "question_toks": [
      "How",
      "many",
      "restaurant",
      "are",
      "there",
      "in",
      "the",
      "Hazelwood",
      "district",
      "of",
      "Dallas",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Hazelwood\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Dallas\" AND name  =  \"Starbucks\" AND state  =  \"Texas\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "business_id",
      ")",
      "FROM",
      "business",
      "WHERE",
      "city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "name",
      "=",
      "``",
      "Starbucks",
      "''",
      "AND",
      "state",
      "=",
      "``",
      "Texas",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "business_id",
      ")",
      "from",
      "business",
      "where",
      "city",
      "=",
      "value",
      "and",
      "name",
      "=",
      "value",
      "and",
      "state",
      "=",
      "value"
    ],
    "question": "How many Starbucks are there in Dallas Texas ?",
    "question_toks": [
      "How",
      "many",
      "Starbucks",
      "are",
      "there",
      "in",
      "Dallas",
      "Texas",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Starbucks\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT review_count FROM business WHERE name  =  \"Acacia Cafe\";",
    "query_toks": [
      "SELECT",
      "review_count",
      "FROM",
      "business",
      "WHERE",
      "name",
      "=",
      "``",
      "Acacia",
      "Cafe",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "review_count",
      "from",
      "business",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "How many reviews does \" Acacia Cafe \" have ?",
    "question_toks": [
      "How",
      "many",
      "reviews",
      "does",
      "``",
      "Acacia",
      "Cafe",
      "``",
      "have",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Acacia Cafe\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT AVG ( t3.count )  ,  t3.day FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN checkin AS t3 ON t3.business_id  =  t1.business_id WHERE t1.name  =  \"Barrio Cafe\" AND t2.category_name  =  \"restaurant\" GROUP BY t3.day;",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "t3.count",
      ")",
      ",",
      "t3.day",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "checkin",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Barrio",
      "Cafe",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "GROUP",
      "BY",
      "t3.day",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "t3",
      ".",
      "count",
      ")",
      ",",
      "t3",
      ".",
      "day",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "checkin",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "day"
    ],
    "question": "Find the average number of checkins in restaurant \" Barrio Cafe \" per day",
    "question_toks": [
      "Find",
      "the",
      "average",
      "number",
      "of",
      "checkins",
      "in",
      "restaurant",
      "``",
      "Barrio",
      "Cafe",
      "``",
      "per",
      "day"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          21,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                21,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Barrio Cafe\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM neighbourhood AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t2.neighbourhood_name  =  \"Stone Meadows\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "neighbourhood",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t2.neighbourhood_name",
      "=",
      "``",
      "Stone",
      "Meadows",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "neighbourhood",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "neighbourhood_name",
      "=",
      "value"
    ],
    "question": "How many businesses are there in the \" Stone Meadows \" neighbourhood in Madison ?",
    "question_toks": [
      "How",
      "many",
      "businesses",
      "are",
      "there",
      "in",
      "the",
      "``",
      "Stone",
      "Meadows",
      "``",
      "neighbourhood",
      "in",
      "Madison",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Stone Meadows\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Adrienne\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.text",
      ")",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "review",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Adrienne",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "text",
      ")",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "review",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many reviews has Adrienne written ?",
    "question_toks": [
      "How",
      "many",
      "reviews",
      "has",
      "Adrienne",
      "written",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Adrienne\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id WHERE t1.month  =  \"March\" AND t1.year  =  2014 AND t2.name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.text",
      ")",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "review",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t1.month",
      "=",
      "``",
      "March",
      "''",
      "AND",
      "t1.year",
      "=",
      "2014",
      "AND",
      "t2.name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "text",
      ")",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "review",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "month",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many reviews has Michelle written in March 2014 ?",
    "question_toks": [
      "How",
      "many",
      "reviews",
      "has",
      "Michelle",
      "written",
      "in",
      "March",
      "2014",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"March\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2014.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t2.year  =  2010 AND t3.name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "review",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t3",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t2.year",
      "=",
      "2010",
      "AND",
      "t3.name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "review",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many businesses has Michelle reviewed in 2010 ?",
    "question_toks": [
      "How",
      "many",
      "businesses",
      "has",
      "Michelle",
      "reviewed",
      "in",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2010.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN USER AS t3 ON t3.user_id  =  t2.user_id WHERE t1.city  =  \"San Diego\" AND t2.year  =  2010 AND t3.name  =  \"Christine\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "review",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t3",
      "ON",
      "t3.user_id",
      "=",
      "t2.user_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "San",
      "Diego",
      "''",
      "AND",
      "t2.year",
      "=",
      "2010",
      "AND",
      "t3.name",
      "=",
      "``",
      "Christine",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "review",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "user_id",
      "=",
      "t2",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many businesses in \" San Diego \" has Christine reviewed in 2010 ?",
    "question_toks": [
      "How",
      "many",
      "businesses",
      "in",
      "``",
      "San",
      "Diego",
      "``",
      "has",
      "Christine",
      "reviewed",
      "in",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"San Diego\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2010.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Christine\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT business_id ) FROM business WHERE city  =  \"Los Angeles\" AND name  =  \"Target\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "business_id",
      ")",
      "FROM",
      "business",
      "WHERE",
      "city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "name",
      "=",
      "``",
      "Target",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "business_id",
      ")",
      "from",
      "business",
      "where",
      "city",
      "=",
      "value",
      "and",
      "name",
      "=",
      "value"
    ],
    "question": "How many Target are there in \" Los Angeles \" ?",
    "question_toks": [
      "How",
      "many",
      "Target",
      "are",
      "there",
      "in",
      "``",
      "Los",
      "Angeles",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                2,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Target\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.city  =  \"Dallas\" AND t2.category_name  =  \"Irish Pub\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Irish",
      "Pub",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "How many users have reviewed Irish Pub in Dallas ?",
    "question_toks": [
      "How",
      "many",
      "users",
      "have",
      "reviewed",
      "Irish",
      "Pub",
      "in",
      "Dallas",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Irish Pub\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT AVG ( rating ) FROM review WHERE YEAR  =  2014;",
    "query_toks": [
      "SELECT",
      "AVG",
      "(",
      "rating",
      ")",
      "FROM",
      "review",
      "WHERE",
      "YEAR",
      "=",
      "2014",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "avg",
      "(",
      "rating",
      ")",
      "from",
      "review",
      "where",
      "year",
      "=",
      "value"
    ],
    "question": "What is the average rating of reviews written in year 2014 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "average",
      "rating",
      "of",
      "reviews",
      "written",
      "in",
      "year",
      "2014",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            5,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2014.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t4.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN review AS t3 ON t3.business_id  =  t1.business_id JOIN USER AS t4 ON t4.user_id  =  t3.user_id WHERE t1.name  =  \"Vintner Grill\" AND t2.category_name  =  \"category_category_name0\" AND t3.year  =  2010;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "USER",
      "AS",
      "t4",
      "ON",
      "t4.user_id",
      "=",
      "t3.user_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Vintner",
      "Grill",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "category_category_name0",
      "''",
      "AND",
      "t3.year",
      "=",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "user",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "user_id",
      "=",
      "t3",
      ".",
      "user_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "How many people reviewed restaurant \" Vintner Grill \" in 2010 ?",
    "question_toks": [
      "How",
      "many",
      "people",
      "reviewed",
      "restaurant",
      "``",
      "Vintner",
      "Grill",
      "``",
      "in",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Vintner Grill\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"category_category_name0\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t3.text ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id JOIN review AS t3 ON t3.business_id  =  t2.business_id WHERE t1.neighbourhood_name  =  \"South Summerlin\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.text",
      ")",
      "FROM",
      "neighbourhood",
      "AS",
      "t1",
      "JOIN",
      "business",
      "AS",
      "t2",
      "ON",
      "t1.business_id",
      "=",
      "t2.business_id",
      "JOIN",
      "review",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t2.business_id",
      "WHERE",
      "t1.neighbourhood_name",
      "=",
      "``",
      "South",
      "Summerlin",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "text",
      ")",
      "from",
      "neighbourhood",
      "as",
      "t1",
      "join",
      "business",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "join",
      "review",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "neighbourhood_name",
      "=",
      "value"
    ],
    "question": "Find the number of reviews on businesses located in \" South Summerlin \" neighbourhood",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "reviews",
      "on",
      "businesses",
      "located",
      "in",
      "``",
      "South",
      "Summerlin",
      "``",
      "neighbourhood"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"South Summerlin\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT name ) FROM USER WHERE name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "USER",
      "WHERE",
      "name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "user",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Find the number of users called Michelle",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "users",
      "called",
      "Michelle"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                17,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Return me the number of businesses that are restaurant .",
    "question_toks": [
      "Return",
      "me",
      "the",
      "number",
      "of",
      "businesses",
      "that",
      "are",
      "restaurant",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT city ) FROM business WHERE name  =  \"Panda Express\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "city",
      ")",
      "FROM",
      "business",
      "WHERE",
      "name",
      "=",
      "``",
      "Panda",
      "Express",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "city",
      ")",
      "from",
      "business",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Return me the number of cities that has \" Panda Express \" .",
    "question_toks": [
      "Return",
      "me",
      "the",
      "number",
      "of",
      "cities",
      "that",
      "has",
      "``",
      "Panda",
      "Express",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                5,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Panda Express\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.text ) FROM USER AS t2 JOIN tip AS t1 ON t2.user_id  =  t1.user_id WHERE t2.name  =  \"Michelle\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.text",
      ")",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "tip",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Michelle",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "text",
      ")",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "tip",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Return me the number of tips that are written by Michelle .",
    "question_toks": [
      "Return",
      "me",
      "the",
      "number",
      "of",
      "tips",
      "that",
      "are",
      "written",
      "by",
      "Michelle",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              35,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              17,
              false
            ],
            null
          ],
          "\"Michelle\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT SUM ( t3.count ) FROM checkin AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t2.neighbourhood_name  =  \"Brighton Heights\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t3.count",
      ")",
      "FROM",
      "checkin",
      "AS",
      "t3",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "neighbourhood",
      "AS",
      "t2",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t2.neighbourhood_name",
      "=",
      "``",
      "Brighton",
      "Heights",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t3",
      ".",
      "count",
      ")",
      "from",
      "checkin",
      "as",
      "t3",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "neighbourhood",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t2",
      ".",
      "neighbourhood_name",
      "=",
      "value"
    ],
    "question": "Find the total checkins in \" Brighton Heights \" neighbourhood",
    "question_toks": [
      "Find",
      "the",
      "total",
      "checkins",
      "in",
      "``",
      "Brighton",
      "Heights",
      "``",
      "neighbourhood"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                20,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Brighton Heights\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT text ) FROM review WHERE MONTH  =  \"March\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "text",
      ")",
      "FROM",
      "review",
      "WHERE",
      "MONTH",
      "=",
      "``",
      "March",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "text",
      ")",
      "from",
      "review",
      "where",
      "month",
      "=",
      "value"
    ],
    "question": "Find the total number of reviews written in March",
    "question_toks": [
      "Find",
      "the",
      "total",
      "number",
      "of",
      "reviews",
      "written",
      "in",
      "March"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"March\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT text )  ,  MONTH FROM tip GROUP BY MONTH;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "text",
      ")",
      ",",
      "MONTH",
      "FROM",
      "tip",
      "GROUP",
      "BY",
      "MONTH",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "text",
      ")",
      ",",
      "month",
      "from",
      "tip",
      "group",
      "by",
      "month"
    ],
    "question": "Find the number of tips written in each month",
    "question_toks": [
      "Find",
      "the",
      "number",
      "of",
      "tips",
      "written",
      "in",
      "each",
      "month"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [
        [
          0,
          38,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                34,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.neighbourhood_name ) FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" AND t2.rating  =  5;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.neighbourhood_name",
      ")",
      "FROM",
      "neighbourhood",
      "AS",
      "t1",
      "JOIN",
      "business",
      "AS",
      "t2",
      "ON",
      "t1.business_id",
      "=",
      "t2.business_id",
      "WHERE",
      "t2.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t2.rating",
      "=",
      "5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "neighbourhood_name",
      ")",
      "from",
      "neighbourhood",
      "as",
      "t1",
      "join",
      "business",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "where",
      "t2",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "rating",
      "=",
      "value"
    ],
    "question": "How many neighbourhoods have a business with rating 5 in Madison ?",
    "question_toks": [
      "How",
      "many",
      "neighbourhoods",
      "have",
      "a",
      "business",
      "with",
      "rating",
      "5",
      "in",
      "Madison",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                24,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          5.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.state  =  \"Texas\" AND t2.category_name  =  \"Moroccan\" AND t3.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.state",
      "=",
      "``",
      "Texas",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Moroccan",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "state",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Give me all the Moroccan restaurant in Texas",
    "question_toks": [
      "Give",
      "me",
      "all",
      "the",
      "Moroccan",
      "restaurant",
      "in",
      "Texas"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Moroccan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM checkin AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY SUM ( t2.count ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "checkin",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "GROUP",
      "BY",
      "t1.name",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "t2.count",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "checkin",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "sum",
      "(",
      "t2",
      ".",
      "count",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "which business has the most number of checkins",
    "question_toks": [
      "which",
      "business",
      "has",
      "the",
      "most",
      "number",
      "of",
      "checkins"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              4,
              20,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.neighbourhood_name FROM neighbourhood AS t1 JOIN business AS t2 ON t1.business_id  =  t2.business_id WHERE t2.city  =  \"Madison\" GROUP BY t1.neighbourhood_name ORDER BY COUNT ( DISTINCT t2.name ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.neighbourhood_name",
      "FROM",
      "neighbourhood",
      "AS",
      "t1",
      "JOIN",
      "business",
      "AS",
      "t2",
      "ON",
      "t1.business_id",
      "=",
      "t2.business_id",
      "WHERE",
      "t2.city",
      "=",
      "``",
      "Madison",
      "''",
      "GROUP",
      "BY",
      "t1.neighbourhood_name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.name",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "neighbourhood_name",
      "from",
      "neighbourhood",
      "as",
      "t1",
      "join",
      "business",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "business_id",
      "=",
      "t2",
      ".",
      "business_id",
      "where",
      "t2",
      ".",
      "city",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "neighbourhood_name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "name",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "which neighbourhood has the most number of businesses in Madison",
    "question_toks": [
      "which",
      "neighbourhood",
      "has",
      "the",
      "most",
      "number",
      "of",
      "businesses",
      "in",
      "Madison"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          24,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              3,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Mexican\" AND t3.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t1.rating",
      ">",
      "3.5",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Mexican",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all Mexican restaurant in Dallas with at least 3.5 stars",
    "question_toks": [
      "Find",
      "all",
      "Mexican",
      "restaurant",
      "in",
      "Dallas",
      "with",
      "at",
      "least",
      "3.5",
      "stars"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.5,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Mexican\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.rating  >  3.5 AND t2.category_name  =  \"Mexican\" AND t3.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t1.rating",
      ">",
      "3.5",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Mexican",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all Mexican restaurant in Dallas with a rating above 3.5",
    "question_toks": [
      "Find",
      "all",
      "Mexican",
      "restaurant",
      "in",
      "Dallas",
      "with",
      "a",
      "rating",
      "above",
      "3.5"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.5,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Mexican\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Dallas\" AND t1.state  =  \"Texas\" AND t2.category_name  =  \"Valet Service\" AND t3.category_name  =  \"restaurant\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Dallas",
      "''",
      "AND",
      "t1.state",
      "=",
      "``",
      "Texas",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Valet",
      "Service",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "state",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all restaurant with Valet Service in Dallas Texas",
    "question_toks": [
      "Find",
      "all",
      "restaurant",
      "with",
      "Valet",
      "Service",
      "in",
      "Dallas",
      "Texas"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Dallas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"Texas\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Valet Service\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t3 JOIN business AS t1 ON t3.business_id  =  t1.business_id JOIN category AS t4 ON t4.business_id  =  t1.business_id JOIN neighbourhood AS t2 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Madison\" AND t3.category_name  =  \"Italian\" AND t4.category_name  =  \"restaurant\" AND t2.neighbourhood_name  =  \"Meadowood\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t3",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t4",
      "ON",
      "t4.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "neighbourhood",
      "AS",
      "t2",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Madison",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "Italian",
      "''",
      "AND",
      "t4.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "AND",
      "t2.neighbourhood_name",
      "=",
      "``",
      "Meadowood",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t3",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "neighbourhood",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "neighbourhood_name",
      "=",
      "value"
    ],
    "question": "Find all Italian restaurant in the Meadowood neighbourhood of Madison",
    "question_toks": [
      "Find",
      "all",
      "Italian",
      "restaurant",
      "in",
      "the",
      "Meadowood",
      "neighbourhood",
      "of",
      "Madison"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Madison\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Italian\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Meadowood\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t1.city  =  \"Los Angeles\" AND t1.rating  >  3 AND t1.review_count  >  30 AND t2.category_name  =  \"Bars\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "t1.rating",
      ">",
      "3",
      "AND",
      "t1.review_count",
      ">",
      "30",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "Bars",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value",
      "and",
      "t1",
      ".",
      "review_count",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "Find all Bars in \" Los Angeles \" with at least 30 reviews and average rating above 3 stars",
    "question_toks": [
      "Find",
      "all",
      "Bars",
      "in",
      "``",
      "Los",
      "Angeles",
      "``",
      "with",
      "at",
      "least",
      "30",
      "reviews",
      "and",
      "average",
      "rating",
      "above",
      "3",
      "stars"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              10,
              false
            ],
            null
          ],
          3.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          30.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Bars\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id JOIN category AS t3 ON t3.business_id  =  t1.business_id WHERE t1.city  =  \"Edinburgh\" AND t2.category_name  =  \"restaurant\" AND t3.category_name  =  \"Egyptian\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "JOIN",
      "category",
      "AS",
      "t3",
      "ON",
      "t3.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t1.city",
      "=",
      "``",
      "Edinburgh",
      "''",
      "AND",
      "t2.category_name",
      "=",
      "``",
      "restaurant",
      "''",
      "AND",
      "t3.category_name",
      "=",
      "``",
      "Egyptian",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "join",
      "category",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t1",
      ".",
      "city",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "category_name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "category_name",
      "=",
      "value"
    ],
    "question": "How many Egyptian restaurant are there in Edinburgh ?",
    "question_toks": [
      "How",
      "many",
      "Egyptian",
      "restaurant",
      "are",
      "there",
      "in",
      "Edinburgh",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Edinburgh\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"restaurant\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              14,
              false
            ],
            null
          ],
          "\"Egyptian\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t2.name FROM USER AS t2 JOIN review AS t1 ON t2.user_id  =  t1.user_id GROUP BY t2.name HAVING AVG ( t1.rating )  <  3;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "USER",
      "AS",
      "t2",
      "JOIN",
      "review",
      "AS",
      "t1",
      "ON",
      "t2.user_id",
      "=",
      "t1.user_id",
      "GROUP",
      "BY",
      "t2.name",
      "HAVING",
      "AVG",
      "(",
      "t1.rating",
      ")",
      "<",
      "3",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "user",
      "as",
      "t2",
      "join",
      "review",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "user_id",
      "=",
      "t1",
      ".",
      "user_id",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "having",
      "avg",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "<",
      "value"
    ],
    "question": "Find users whose average review rating is below 3",
    "question_toks": [
      "Find",
      "users",
      "whose",
      "average",
      "review",
      "rating",
      "is",
      "below",
      "3"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ],
            [
              0,
              27,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          17,
          false
        ]
      ],
      "having": [
        [
          false,
          4,
          [
            0,
            [
              5,
              28,
              false
            ],
            null
          ],
          3.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                17,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM review AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id WHERE t2.month  =  \"April\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.text ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "review",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "WHERE",
      "t2.month",
      "=",
      "``",
      "April",
      "''",
      "GROUP",
      "BY",
      "t1.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.text",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "review",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "where",
      "t2",
      ".",
      "month",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "text",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the business with the most number of reviews in April",
    "question_toks": [
      "Find",
      "the",
      "business",
      "with",
      "the",
      "most",
      "number",
      "of",
      "reviews",
      "in",
      "April"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            5
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              31,
              false
            ],
            null
          ],
          "\"April\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "yelp",
    "query": "SELECT t1.name FROM category AS t2 JOIN business AS t1 ON t2.business_id  =  t1.business_id GROUP BY t1.name ORDER BY COUNT ( DISTINCT t2.category_name ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "category",
      "AS",
      "t2",
      "JOIN",
      "business",
      "AS",
      "t1",
      "ON",
      "t2.business_id",
      "=",
      "t1.business_id",
      "GROUP",
      "BY",
      "t1.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.category_name",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "category",
      "as",
      "t2",
      "join",
      "business",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "business_id",
      "=",
      "t1",
      ".",
      "business_id",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "category_name",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the business which has the most number of categories",
    "question_toks": [
      "Find",
      "the",
      "business",
      "which",
      "has",
      "the",
      "most",
      "number",
      "of",
      "categories"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ],
            [
              0,
              2,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              14,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT homepage FROM journal WHERE name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "homepage",
      "FROM",
      "journal",
      "WHERE",
      "name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "homepage",
      "from",
      "journal",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "return me the homepage of PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "homepage",
      "of",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT homepage FROM author WHERE name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "homepage",
      "FROM",
      "author",
      "WHERE",
      "name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "homepage",
      "from",
      "author",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "return me the homepage of \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "homepage",
      "of",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                2,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT abstract FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "abstract",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "abstract",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the abstract of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "abstract",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                23,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "YEAR",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the year of \" Making database systems usable \"",
    "question_toks": [
      "return",
      "me",
      "the",
      "year",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT YEAR FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "YEAR",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the year of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "year",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT title FROM publication WHERE YEAR  >  2000;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "publication",
      "WHERE",
      "YEAR",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "publication",
      "where",
      "year",
      ">",
      "value"
    ],
    "question": "return me the papers after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT homepage FROM conference WHERE name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "homepage",
      "FROM",
      "conference",
      "WHERE",
      "name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "homepage",
      "from",
      "conference",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "return me the homepage of the VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "homepage",
      "of",
      "the",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT keyword FROM keyword;",
    "query_toks": [
      "SELECT",
      "keyword",
      "FROM",
      "keyword",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "keyword",
      "from",
      "keyword"
    ],
    "question": "return me all the keywords .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "keywords",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT name FROM organization;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "organization",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "organization"
    ],
    "question": "return me all the organizations .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "organizations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT name FROM organization WHERE continent  =  \"North America\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "organization",
      "WHERE",
      "continent",
      "=",
      "``",
      "North",
      "America",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "organization",
      "where",
      "continent",
      "=",
      "value"
    ],
    "question": "return me all the organizations in \" North America \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "organizations",
      "in",
      "``",
      "North",
      "America",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          "\"North America\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT homepage FROM organization WHERE name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "homepage",
      "FROM",
      "organization",
      "WHERE",
      "name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "homepage",
      "from",
      "organization",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "return me the homepage of \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "homepage",
      "of",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                34,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "reference_num",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "reference_num",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the number of references of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "references",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT reference_num FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "reference_num",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "reference_num",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the references of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "references",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "citation_num",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "citation_num",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the number of citations of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "citations",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT citation_num FROM publication WHERE title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "citation_num",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "citation_num",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "return me the citations of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "citations",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT title FROM publication WHERE citation_num  >  200;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "publication",
      "WHERE",
      "citation_num",
      ">",
      "200",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "publication",
      "where",
      "citation_num",
      ">",
      "value"
    ],
    "question": "return me the paper with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  =  2010;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t4.year",
      "=",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "return me the authors who have papers in PVLDB 2010 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "papers",
      "in",
      "PVLDB",
      "2010",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" AND t4.year  >  2010;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t4.year",
      ">",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the authors who have papers in PVLDB after 2010 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "papers",
      "in",
      "PVLDB",
      "after",
      "2010",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  =  2002;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t4.year",
      "=",
      "2002",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "return me the authors who have papers in VLDB conference in 2002 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "papers",
      "in",
      "VLDB",
      "conference",
      "in",
      "2002",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2002.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t4.year",
      "<",
      "2002",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "return me the authors who have papers in VLDB conference before 2002 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "papers",
      "in",
      "VLDB",
      "conference",
      "before",
      "2002",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2002.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" AND t4.year  <  2002 AND t4.year  >  1995;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t4.year",
      "<",
      "2002",
      "AND",
      "t4.year",
      ">",
      "1995",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      "<",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the authors who have papers in VLDB conference before 2002 after 1995 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "papers",
      "in",
      "VLDB",
      "conference",
      "before",
      "2002",
      "after",
      "1995",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2002.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          1995.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.name FROM DOMAIN AS t3 JOIN domain_journal AS t1 ON t3.did  =  t1.did JOIN journal AS t2 ON t2.jid  =  t1.jid WHERE t2.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "t3.name",
      "FROM",
      "DOMAIN",
      "AS",
      "t3",
      "JOIN",
      "domain_journal",
      "AS",
      "t1",
      "ON",
      "t3.did",
      "=",
      "t1.did",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "domain",
      "as",
      "t3",
      "join",
      "domain_journal",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the area of PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "area",
      "of",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              17,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the authors who have papers in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "papers",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the organization \" H. V. Jagadish \" is in .",
    "question_toks": [
      "return",
      "me",
      "the",
      "organization",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "is",
      "in",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the conferences, which have papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "conferences",
      ",",
      "which",
      "have",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the journals, which have papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "journals",
      ",",
      "which",
      "have",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM domain_author AS t3 JOIN author AS t1 ON t3.aid  =  t1.aid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "domain_author",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t2",
      "ON",
      "t2.did",
      "=",
      "t3.did",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "domain_author",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "domain",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t3",
      ".",
      "did",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the domain where \" H. V. Jagadish \" is focused .",
    "question_toks": [
      "return",
      "me",
      "the",
      "domain",
      "where",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "is",
      "focused",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "return me the authors of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t2.title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t2.title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "return me the conference, which published \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "conference",
      ",",
      "which",
      "published",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the papers on VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "on",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the papers on PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "on",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the papers on PVLDB after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "on",
      "PVLDB",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t2.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the papers on VLDB conference after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "on",
      "VLDB",
      "conference",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the papers by \" H. V. Jagadish \" on PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the papers by \" H. V. Jagadish \" on VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t3.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the papers by \" H. V. Jagadish \" after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t4.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the papers by \" H. V. Jagadish \" on PVLDB after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "PVLDB",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t4.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the papers by \" H. V. Jagadish \" on VLDB conference after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "VLDB",
      "conference",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM domain_conference AS t3 JOIN conference AS t1 ON t3.cid  =  t1.cid JOIN DOMAIN AS t2 ON t2.did  =  t3.did WHERE t1.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "domain_conference",
      "AS",
      "t3",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t3.cid",
      "=",
      "t1.cid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t2",
      "ON",
      "t2.did",
      "=",
      "t3.did",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "domain_conference",
      "as",
      "t3",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "join",
      "domain",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t3",
      ".",
      "did",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the area of the VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "area",
      "of",
      "the",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            4
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                9,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the authors who have papers in the VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "papers",
      "in",
      "the",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Databases\";",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "DOMAIN",
      "AS",
      "t3",
      "JOIN",
      "domain_keyword",
      "AS",
      "t2",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t1.kid",
      "=",
      "t2.kid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "domain",
      "as",
      "t3",
      "join",
      "domain_keyword",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "kid",
      "=",
      "t2",
      ".",
      "kid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me all the keywords in Databases area .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "keywords",
      "in",
      "Databases",
      "area",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "publication_keyword",
      "AS",
      "t2",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t2.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t2.pid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Natural",
      "Language",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "publication_keyword",
      "as",
      "t2",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t2",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me all the papers, which contain the keyword \" Natural Language \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "papers",
      ",",
      "which",
      "contain",
      "the",
      "keyword",
      "``",
      "Natural",
      "Language",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Natural Language\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t3",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t3.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t2.title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t3",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "return me the keywords of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keywords",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t5",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t5.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t5",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the keywords related to \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keywords",
      "related",
      "to",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t3.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the keywords in VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keywords",
      "in",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t4.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t2.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the keywords in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keywords",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "organization",
      "AS",
      "t6",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t6.oid",
      "=",
      "t2.oid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "publication_keyword",
      "AS",
      "t3",
      "ON",
      "t5.pid",
      "=",
      "t3.pid",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t3.kid",
      "=",
      "t1.kid",
      "WHERE",
      "t6.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "organization",
      "as",
      "t6",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t6",
      ".",
      "oid",
      "=",
      "t2",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "publication_keyword",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "where",
      "t6",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the keywords in the papers of \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keywords",
      "in",
      "the",
      "papers",
      "of",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t5.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"User Study\";",
    "query_toks": [
      "SELECT",
      "t5.title",
      "FROM",
      "publication_keyword",
      "AS",
      "t3",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t3.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t5.pid",
      "=",
      "t3.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.keyword",
      "=",
      "``",
      "User",
      "Study",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t5",
      ".",
      "title",
      "from",
      "publication_keyword",
      "as",
      "t3",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the papers of \" H. V. Jagadish \" containing keyword \" User Study \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "of",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "containing",
      "keyword",
      "``",
      "User",
      "Study",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"User Study\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Keyword search\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "publication_keyword",
      "AS",
      "t2",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t2.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t2.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t4.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t1.keyword",
      "=",
      "``",
      "Keyword",
      "search",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "publication_keyword",
      "as",
      "t2",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t2",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the papers in PVLDB containing keyword \" Keyword search \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "in",
      "PVLDB",
      "containing",
      "keyword",
      "``",
      "Keyword",
      "search",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Keyword search\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Information Retrieval\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "publication_keyword",
      "AS",
      "t3",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t3.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t1.keyword",
      "=",
      "``",
      "Information",
      "Retrieval",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "publication_keyword",
      "as",
      "t3",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the papers in VLDB conference containing keyword \" Information Retrieval \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "in",
      "VLDB",
      "conference",
      "containing",
      "keyword",
      "``",
      "Information",
      "Retrieval",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Information Retrieval\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication_keyword",
      "AS",
      "t5",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t5.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication_keyword",
      "as",
      "t5",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the authors who have papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "domain_author",
      "AS",
      "t4",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t4.did",
      "JOIN",
      "organization",
      "AS",
      "t2",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "domain_author",
      "as",
      "t4",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "domain",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t4",
      ".",
      "did",
      "join",
      "organization",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me all the organizations in Databases area .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "organizations",
      "in",
      "Databases",
      "area",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.continent  =  \"North America\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "domain_author",
      "AS",
      "t4",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t4.did",
      "JOIN",
      "organization",
      "AS",
      "t2",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t2.continent",
      "=",
      "``",
      "North",
      "America",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "domain_author",
      "as",
      "t4",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "domain",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t4",
      ".",
      "did",
      "join",
      "organization",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "continent",
      "=",
      "value"
    ],
    "question": "return me all the organizations in Databases area located in \" North America \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "organizations",
      "in",
      "Databases",
      "area",
      "located",
      "in",
      "``",
      "North",
      "America",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                35,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          "\"North America\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me all the researchers in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "researchers",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "domain_author",
      "AS",
      "t4",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t4.did",
      "JOIN",
      "organization",
      "AS",
      "t2",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "domain_author",
      "as",
      "t4",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "domain",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t4",
      ".",
      "did",
      "join",
      "organization",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me all the researchers in Databases area in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "researchers",
      "in",
      "Databases",
      "area",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me all the papers in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "papers",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" AND t4.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      "AND",
      "t4.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me all the papers after 2000 in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "papers",
      "after",
      "2000",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t5.title FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "t5.title",
      "FROM",
      "organization",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t5.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t5",
      ".",
      "title",
      "from",
      "organization",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t5",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me all the papers in VLDB conference in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "papers",
      "in",
      "VLDB",
      "conference",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "t5.title",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t5.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t5",
      ".",
      "title",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me all the papers in PVLDB in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "papers",
      "in",
      "PVLDB",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t5.title FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\" AND t5.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t5.title",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t5.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      "AND",
      "t5.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t5",
      ".",
      "title",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me all the papers in PVLDB after 2000 in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "all",
      "the",
      "papers",
      "in",
      "PVLDB",
      "after",
      "2000",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.citation_num  >  200;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "DOMAIN",
      "AS",
      "t2",
      "JOIN",
      "domain_publication",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t1.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t3.citation_num",
      ">",
      "200",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "domain",
      "as",
      "t2",
      "join",
      "domain_publication",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t1",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "citation_num",
      ">",
      "value"
    ],
    "question": "return me the paper in Databases area with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "in",
      "Databases",
      "area",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              31,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            10
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.citation_num",
      ">",
      "200",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "citation_num",
      ">",
      "value"
    ],
    "question": "return me the paper in PVLDB with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "in",
      "PVLDB",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t2.citation_num",
      ">",
      "200",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "citation_num",
      ">",
      "value"
    ],
    "question": "return me the paper in VLDB conference with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "in",
      "VLDB",
      "conference",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.citation_num  >  200;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t3.citation_num",
      ">",
      "200",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "citation_num",
      ">",
      "value"
    ],
    "question": "return me the paper by \" H. V. Jagadish \" with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.citation_num  >  200;",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t4.citation_num",
      ">",
      "200",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "citation_num",
      ">",
      "value"
    ],
    "question": "return me the papers by \" H. V. Jagadish \" on PVLDB with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "PVLDB",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t4.title FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.citation_num  >  200;",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t4.citation_num",
      ">",
      "200",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "citation_num",
      ">",
      "value"
    ],
    "question": "return me the papers by \" H. V. Jagadish \" on VLDB conference with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "VLDB",
      "conference",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT title FROM publication WHERE citation_num  >  200 AND YEAR  >  2000;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "publication",
      "WHERE",
      "citation_num",
      ">",
      "200",
      "AND",
      "YEAR",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "publication",
      "where",
      "citation_num",
      ">",
      "value",
      "and",
      "year",
      ">",
      "value"
    ],
    "question": "return me the paper after 2000 with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "after",
      "2000",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.citation_num  >  200 AND t3.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "DOMAIN",
      "AS",
      "t2",
      "JOIN",
      "domain_publication",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t1.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t3.citation_num",
      ">",
      "200",
      "AND",
      "t3.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "domain",
      "as",
      "t2",
      "join",
      "domain_publication",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t1",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "citation_num",
      ">",
      "value",
      "and",
      "t3",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the paper after 2000 in Databases area with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "after",
      "2000",
      "in",
      "Databases",
      "area",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              31,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            10
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.citation_num",
      ">",
      "200",
      "AND",
      "t2.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "citation_num",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the paper after 2000 in PVLDB with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "after",
      "2000",
      "in",
      "PVLDB",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.citation_num  >  200 AND t2.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t2.citation_num",
      ">",
      "200",
      "AND",
      "t2.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "citation_num",
      ">",
      "value",
      "and",
      "t2",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the paper after 2000 in VLDB conference with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "after",
      "2000",
      "in",
      "VLDB",
      "conference",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.name",
      ")",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "name",
      ")",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of conferences which have papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "conferences",
      "which",
      "have",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                7,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.name",
      ")",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "name",
      ")",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of journals which have papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "journals",
      "which",
      "have",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                16,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t3.title )  ,  t3.year FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t3.year;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      ",",
      "t3.year",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "GROUP",
      "BY",
      "t3.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      ",",
      "t3",
      ".",
      "year",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "year"
    ],
    "question": "return me the number of papers written by \" H. V. Jagadish \" in each year .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "in",
      "each",
      "year",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          30,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t3.title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "return me the number of authors of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "authors",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT YEAR  ,  SUM ( citation_num ) FROM publication WHERE title  =  \"Making database systems usable\" GROUP BY YEAR;",
    "query_toks": [
      "SELECT",
      "YEAR",
      ",",
      "SUM",
      "(",
      "citation_num",
      ")",
      "FROM",
      "publication",
      "WHERE",
      "title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      "GROUP",
      "BY",
      "YEAR",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "year",
      ",",
      "sum",
      "(",
      "citation_num",
      ")",
      "from",
      "publication",
      "where",
      "title",
      "=",
      "value",
      "group",
      "by",
      "year"
    ],
    "question": "return me the number of citations of \" Making database systems usable \" in each year .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "citations",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "in",
      "each",
      "year",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [
        [
          0,
          30,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t3 JOIN cite AS t1 ON t3.pid  =  t1.cited JOIN publication AS t2 ON t2.pid  =  t1.citing WHERE t3.title  =  \"Making database systems usable\" AND t2.year  <  2010;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t3",
      "JOIN",
      "cite",
      "AS",
      "t1",
      "ON",
      "t3.pid",
      "=",
      "t1.cited",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t1.citing",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      "AND",
      "t2.year",
      "<",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t3",
      "join",
      "cite",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t1",
      ".",
      "cited",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t1",
      ".",
      "citing",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "return me the number of citations of \" Making database systems usable \" before 2010 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "citations",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "before",
      "2010",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ],
            [
              0,
              41,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            14
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers on VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "on",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers on PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "on",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT title ) FROM publication WHERE YEAR  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "title",
      ")",
      "FROM",
      "publication",
      "WHERE",
      "YEAR",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "title",
      ")",
      "from",
      "publication",
      "where",
      "year",
      ">",
      "value"
    ],
    "question": "return me the number of papers after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the number of papers on PVLDB after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "on",
      "PVLDB",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t2.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the number of papers on VLDB conference after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "on",
      "VLDB",
      "conference",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers by \" H. V. Jagadish \" on PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers by \" H. V. Jagadish \" on VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t3.title ) FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.year  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t3.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the number of papers by \" H. V. Jagadish \" after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"PVLDB\" AND t4.year  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t4.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the number of papers by \" H. V. Jagadish \" on PVLDB after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "PVLDB",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t2.name  =  \"VLDB\" AND t4.year  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t4.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the number of papers by \" H. V. Jagadish \" on VLDB conference after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "on",
      "VLDB",
      "conference",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT keyword ) FROM keyword;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "keyword",
      ")",
      "FROM",
      "keyword",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "keyword",
      ")",
      "from",
      "keyword"
    ],
    "question": "return me the number of keywords .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "keywords",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM DOMAIN AS t3 JOIN domain_keyword AS t2 ON t3.did  =  t2.did JOIN keyword AS t1 ON t1.kid  =  t2.kid WHERE t3.name  =  \"Databases\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.keyword",
      ")",
      "FROM",
      "DOMAIN",
      "AS",
      "t3",
      "JOIN",
      "domain_keyword",
      "AS",
      "t2",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t1.kid",
      "=",
      "t2.kid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "keyword",
      ")",
      "from",
      "domain",
      "as",
      "t3",
      "join",
      "domain_keyword",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "kid",
      "=",
      "t2",
      ".",
      "kid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of keywords in Databases area .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "keywords",
      "in",
      "Databases",
      "area",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              21,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t3.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t2",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t2.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t2.pid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Natural",
      "Language",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t2",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t2",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the number of papers which contain the keyword \" Natural Language \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "which",
      "contain",
      "the",
      "keyword",
      "``",
      "Natural",
      "Language",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Natural Language\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t3.pid WHERE t2.title  =  \"Making database systems usable\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.keyword",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t3",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t3.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t2.title",
      "=",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "keyword",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t3",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "return me the number of the keywords of \" Making database systems usable \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "the",
      "keywords",
      "of",
      "``",
      "Making",
      "database",
      "systems",
      "usable",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              29,
              false
            ],
            null
          ],
          "\"Making database systems usable\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.keyword",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t5",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t5.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "keyword",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t5",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of the keywords related to \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "the",
      "keywords",
      "related",
      "to",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.keyword",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t3.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "keyword",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of keywords in VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "keywords",
      "in",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.keyword",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t4.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t2.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "keyword",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of keywords in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "keywords",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.keyword ) FROM organization AS t6 JOIN author AS t2 ON t6.oid  =  t2.oid JOIN writes AS t4 ON t4.aid  =  t2.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN publication_keyword AS t3 ON t5.pid  =  t3.pid JOIN keyword AS t1 ON t3.kid  =  t1.kid WHERE t6.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.keyword",
      ")",
      "FROM",
      "organization",
      "AS",
      "t6",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t6.oid",
      "=",
      "t2.oid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "publication_keyword",
      "AS",
      "t3",
      "ON",
      "t5.pid",
      "=",
      "t3.pid",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t3.kid",
      "=",
      "t1.kid",
      "WHERE",
      "t6.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "keyword",
      ")",
      "from",
      "organization",
      "as",
      "t6",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t6",
      ".",
      "oid",
      "=",
      "t2",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "publication_keyword",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "where",
      "t6",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of keywords in the papers of \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "keywords",
      "in",
      "the",
      "papers",
      "of",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                19,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t5.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t5 ON t5.pid  =  t3.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.keyword  =  \"User Study\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t5.title",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t3",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t3.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t5.pid",
      "=",
      "t3.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.keyword",
      "=",
      "``",
      "User",
      "Study",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t5",
      ".",
      "title",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t3",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the number of the papers of \" H. V. Jagadish \" containing keyword \" User Study \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "the",
      "papers",
      "of",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "containing",
      "keyword",
      "``",
      "User",
      "Study",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"User Study\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t2.pid JOIN journal AS t3 ON t4.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t1.keyword  =  \"Keyword search\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t2",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t2.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t2.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t4.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t1.keyword",
      "=",
      "``",
      "Keyword",
      "search",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t2",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t2",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the number of papers in PVLDB containing keyword \" Keyword search \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "in",
      "PVLDB",
      "containing",
      "keyword",
      "``",
      "Keyword",
      "search",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Keyword search\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t4.title ) FROM publication_keyword AS t3 JOIN keyword AS t1 ON t3.kid  =  t1.kid JOIN publication AS t4 ON t4.pid  =  t3.pid JOIN conference AS t2 ON t4.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t1.keyword  =  \"Information Retrieval\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t3",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t3.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t1.keyword",
      "=",
      "``",
      "Information",
      "Retrieval",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t3",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the number of papers in VLDB conference containing keyword \" Information Retrieval \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "in",
      "VLDB",
      "conference",
      "containing",
      "keyword",
      "``",
      "Information",
      "Retrieval",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Information Retrieval\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.name ) FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.name",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t5",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t5.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "name",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t5",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the number of authors who have papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "authors",
      "who",
      "have",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT SUM ( t3.citation_num ) FROM publication_keyword AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t2.pid WHERE t1.keyword  =  \"Natural Language\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t3.citation_num",
      ")",
      "FROM",
      "publication_keyword",
      "AS",
      "t2",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t2.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t2.pid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Natural",
      "Language",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t3",
      ".",
      "citation_num",
      ")",
      "from",
      "publication_keyword",
      "as",
      "t2",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t2",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "return me the total citations of the papers containing keyword \" Natural Language \"",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "the",
      "papers",
      "containing",
      "keyword",
      "``",
      "Natural",
      "Language",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Natural Language\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT name ) FROM organization;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "organization",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "organization"
    ],
    "question": "return me the number of the organizations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "the",
      "organizations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT name ) FROM organization WHERE continent  =  \"North America\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "organization",
      "WHERE",
      "continent",
      "=",
      "``",
      "North",
      "America",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "organization",
      "where",
      "continent",
      "=",
      "value"
    ],
    "question": "return me the number of the organizations in \" North America \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "the",
      "organizations",
      "in",
      "``",
      "North",
      "America",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          "\"North America\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.name",
      ")",
      "FROM",
      "domain_author",
      "AS",
      "t4",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t4.did",
      "JOIN",
      "organization",
      "AS",
      "t2",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "name",
      ")",
      "from",
      "domain_author",
      "as",
      "t4",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "domain",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t4",
      ".",
      "did",
      "join",
      "organization",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of organizations in Databases area .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "organizations",
      "in",
      "Databases",
      "area",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.continent  =  \"North America\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.name",
      ")",
      "FROM",
      "domain_author",
      "AS",
      "t4",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t4.did",
      "JOIN",
      "organization",
      "AS",
      "t2",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t2.continent",
      "=",
      "``",
      "North",
      "America",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "name",
      ")",
      "from",
      "domain_author",
      "as",
      "t4",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "domain",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t4",
      ".",
      "did",
      "join",
      "organization",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "continent",
      "=",
      "value"
    ],
    "question": "return me the number of organizations in Databases area located in \" North America \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "organizations",
      "in",
      "Databases",
      "area",
      "located",
      "in",
      "``",
      "North",
      "America",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                35,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              33,
              false
            ],
            null
          ],
          "\"North America\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t4.title ) FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN domain_publication AS t2 ON t3.did  =  t2.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN publication AS t4 ON t4.pid  =  t2.pid WHERE t3.name  =  \"Databases\" AND t5.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "domain_author",
      "AS",
      "t6",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t6.aid",
      "=",
      "t1.aid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t6.did",
      "JOIN",
      "domain_publication",
      "AS",
      "t2",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "JOIN",
      "organization",
      "AS",
      "t5",
      "ON",
      "t5.oid",
      "=",
      "t1.oid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t2.pid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t5.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "domain_author",
      "as",
      "t6",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t6",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "domain",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t6",
      ".",
      "did",
      "join",
      "domain_publication",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "join",
      "organization",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t2",
      ".",
      "pid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers in \" University of Michigan \" in Databases area .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "in",
      "Databases",
      "area",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t4.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" AND t4.year  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      "AND",
      "t4.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the number of papers after 2000 in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "after",
      "2000",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t3 JOIN author AS t1 ON t3.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN conference AS t2 ON t5.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" AND t3.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t5.title",
      ")",
      "FROM",
      "organization",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t5.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t5",
      ".",
      "title",
      ")",
      "from",
      "organization",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t5",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers in VLDB conference in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "in",
      "VLDB",
      "conference",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t5.title",
      ")",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t5.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t5",
      ".",
      "title",
      ")",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers in PVLDB in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "in",
      "PVLDB",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t5.title ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t4 ON t4.aid  =  t1.aid JOIN publication AS t5 ON t4.pid  =  t5.pid JOIN journal AS t3 ON t5.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" AND t2.name  =  \"University of Michigan\" AND t5.year  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t5.title",
      ")",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t5.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      "AND",
      "t5.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t5",
      ".",
      "title",
      ")",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the number of papers in PVLDB after 2000 in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "in",
      "PVLDB",
      "after",
      "2000",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT SUM ( t4.citation_num ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t4.citation_num",
      ")",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t4",
      ".",
      "citation_num",
      ")",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the total citations of the papers in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "the",
      "papers",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid WHERE t2.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of researchers in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "researchers",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM domain_author AS t4 JOIN author AS t1 ON t4.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t4.did JOIN organization AS t2 ON t2.oid  =  t1.oid WHERE t3.name  =  \"Databases\" AND t2.name  =  \"University of Michigan\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "domain_author",
      "AS",
      "t4",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t4.did",
      "JOIN",
      "organization",
      "AS",
      "t2",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "domain_author",
      "as",
      "t4",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "domain",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t4",
      ".",
      "did",
      "join",
      "organization",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of researchers in Databases area in \" University of Michigan \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "researchers",
      "in",
      "Databases",
      "area",
      "in",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of authors who have papers in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "authors",
      "who",
      "have",
      "papers",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t1.name ) FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of authors who have papers in the VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "authors",
      "who",
      "have",
      "papers",
      "in",
      "the",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.year",
      "<",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "return me the number of papers published on PVLDB before 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "published",
      "on",
      "PVLDB",
      "before",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.title ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t2.year",
      "<",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "return me the number of papers published in the VLDB conference before 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "published",
      "in",
      "the",
      "VLDB",
      "conference",
      "before",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t2.citation_num",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "citation_num",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the total citations of all the papers in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "all",
      "the",
      "papers",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.citation_num FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "t2.citation_num",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "citation_num",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the citations of each paper in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "citations",
      "of",
      "each",
      "paper",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  =  2005;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t2.citation_num",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.year",
      "=",
      "2005",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "citation_num",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "return me the total citations of papers in PVLDB in 2005 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "papers",
      "in",
      "PVLDB",
      "in",
      "2005",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  <  2005;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t2.citation_num",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.year",
      "<",
      "2005",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "citation_num",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "return me the total citations of papers in PVLDB before 2005 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "papers",
      "in",
      "PVLDB",
      "before",
      "2005",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;",
    "query_toks": [
      "SELECT",
      "t2.year",
      ",",
      "SUM",
      "(",
      "t2.citation_num",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "GROUP",
      "BY",
      "t2.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "year",
      ",",
      "sum",
      "(",
      "t2",
      ".",
      "citation_num",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "year"
    ],
    "question": "return me the total citations of papers in PVLDB in each year .",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "papers",
      "in",
      "PVLDB",
      "in",
      "each",
      "year",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          30,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" GROUP BY t2.year;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      ",",
      "t2.year",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "GROUP",
      "BY",
      "t2.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      ",",
      "t2",
      ".",
      "year",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "year"
    ],
    "question": "return me the number of papers published in PVLDB in each year .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "published",
      "in",
      "PVLDB",
      "in",
      "each",
      "year",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          30,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t2.citation_num",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "citation_num",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the total citations of all the papers in the VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "all",
      "the",
      "papers",
      "in",
      "the",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.citation_num FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\";",
    "query_toks": [
      "SELECT",
      "t2.citation_num",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "citation_num",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the citations of each paper in the VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "citations",
      "of",
      "each",
      "paper",
      "in",
      "the",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  =  2005;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t2.citation_num",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t2.year",
      "=",
      "2005",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "citation_num",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "=",
      "value"
    ],
    "question": "return me the total citations of papers in the VLDB conference in 2005 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "papers",
      "in",
      "the",
      "VLDB",
      "conference",
      "in",
      "2005",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  <  2005;",
    "query_toks": [
      "SELECT",
      "SUM",
      "(",
      "t2.citation_num",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t2.year",
      "<",
      "2005",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "sum",
      "(",
      "t2",
      ".",
      "citation_num",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "return me the total citations of papers in the VLDB conference before 2005 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "papers",
      "in",
      "the",
      "VLDB",
      "conference",
      "before",
      "2005",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.year  ,  SUM ( t2.citation_num ) FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;",
    "query_toks": [
      "SELECT",
      "t2.year",
      ",",
      "SUM",
      "(",
      "t2.citation_num",
      ")",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "GROUP",
      "BY",
      "t2.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "year",
      ",",
      "sum",
      "(",
      "t2",
      ".",
      "citation_num",
      ")",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "year"
    ],
    "question": "return me the total citations of papers in the VLDB conference in each year .",
    "question_toks": [
      "return",
      "me",
      "the",
      "total",
      "citations",
      "of",
      "papers",
      "in",
      "the",
      "VLDB",
      "conference",
      "in",
      "each",
      "year",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          30,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ],
          [
            4,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.title )  ,  t2.year FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" GROUP BY t2.year;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      ",",
      "t2.year",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "GROUP",
      "BY",
      "t2.year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      ",",
      "t2",
      ".",
      "year",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "year"
    ],
    "question": "return me the number of papers published in the VLDB conference in each year .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "published",
      "in",
      "the",
      "VLDB",
      "conference",
      "in",
      "each",
      "year",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          30,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Divesh Srivastava\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "writes",
      "AS",
      "t4",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t7",
      "ON",
      "t4.pid",
      "=",
      "t7.pid",
      "JOIN",
      "writes",
      "AS",
      "t5",
      "ON",
      "t5.pid",
      "=",
      "t7.pid",
      "JOIN",
      "writes",
      "AS",
      "t6",
      "ON",
      "t6.pid",
      "=",
      "t7.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "author",
      "AS",
      "t3",
      "ON",
      "t6.aid",
      "=",
      "t3.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "Divesh",
      "Srivastava",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "writes",
      "as",
      "t4",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t7",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t7",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "pid",
      "=",
      "t7",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "pid",
      "=",
      "t7",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "author",
      "as",
      "t3",
      "on",
      "t6",
      ".",
      "aid",
      "=",
      "t3",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the authors who have cooperated both with \" H. V. Jagadish \" and \" Divesh Srivastava \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "cooperated",
      "both",
      "with",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Divesh",
      "Srivastava",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Divesh Srivastava\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" AND t5.year  >  2000;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t5.year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the authors who have cooperated with \" H. V. Jagadish \" after 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "cooperated",
      "with",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "after",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";",
    "query_toks": [
      "SELECT",
      "t5.title",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Divesh",
      "Srivastava",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t5",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Divesh",
      "Srivastava",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Divesh Srivastava\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t5.year  >  2005;",
    "query_toks": [
      "SELECT",
      "t5.title",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Yunyao",
      "Li",
      "''",
      "AND",
      "t5.year",
      ">",
      "2005",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t5",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the papers written by \" H. V. Jagadish \" and \" Yunyao Li \" after 2005 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Yunyao",
      "Li",
      "``",
      "after",
      "2005",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Yunyao Li\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\";",
    "query_toks": [
      "SELECT",
      "t6.title",
      "FROM",
      "publication",
      "AS",
      "t6",
      "JOIN",
      "journal",
      "AS",
      "t4",
      "ON",
      "t6.jid",
      "=",
      "t4.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t6.pid",
      "JOIN",
      "writes",
      "AS",
      "t5",
      "ON",
      "t5.pid",
      "=",
      "t6.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Yunyao",
      "Li",
      "''",
      "AND",
      "t4.name",
      "=",
      "``",
      "PVLDB",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t6",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t6",
      "join",
      "journal",
      "as",
      "t4",
      "on",
      "t6",
      ".",
      "jid",
      "=",
      "t4",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t6",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "pid",
      "=",
      "t6",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the papers written by \" H. V. Jagadish \" and \" Yunyao Li \" on PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Yunyao",
      "Li",
      "``",
      "on",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Yunyao Li\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t6.title FROM publication AS t6 JOIN journal AS t4 ON t6.jid  =  t4.jid JOIN writes AS t3 ON t3.pid  =  t6.pid JOIN writes AS t5 ON t5.pid  =  t6.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Yunyao Li\" AND t4.name  =  \"PVLDB\" AND t6.year  >  2005;",
    "query_toks": [
      "SELECT",
      "t6.title",
      "FROM",
      "publication",
      "AS",
      "t6",
      "JOIN",
      "journal",
      "AS",
      "t4",
      "ON",
      "t6.jid",
      "=",
      "t4.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t6.pid",
      "JOIN",
      "writes",
      "AS",
      "t5",
      "ON",
      "t5.pid",
      "=",
      "t6.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Yunyao",
      "Li",
      "''",
      "AND",
      "t4.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t6.year",
      ">",
      "2005",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t6",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t6",
      "join",
      "journal",
      "as",
      "t4",
      "on",
      "t6",
      ".",
      "jid",
      "=",
      "t4",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t6",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "pid",
      "=",
      "t6",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "year",
      ">",
      "value"
    ],
    "question": "return me the papers written by \" H. V. Jagadish \" and \" Yunyao Li \" on PVLDB after 2005 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Yunyao",
      "Li",
      "``",
      "on",
      "PVLDB",
      "after",
      "2005",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Yunyao Li\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2005.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the authors who have cooperated with \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "cooperated",
      "with",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;",
    "query_toks": [
      "SELECT",
      "t5.title",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Divesh",
      "Srivastava",
      "''",
      "AND",
      "t5.year",
      "<",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t5",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" before 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Divesh",
      "Srivastava",
      "``",
      "before",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Divesh Srivastava\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication",
      "AS",
      "t7",
      "JOIN",
      "cite",
      "AS",
      "t5",
      "ON",
      "t7.pid",
      "=",
      "t5.citing",
      "JOIN",
      "publication",
      "AS",
      "t6",
      "ON",
      "t6.pid",
      "=",
      "t5.cited",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t7.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t6.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t7",
      "join",
      "cite",
      "as",
      "t5",
      "on",
      "t7",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "citing",
      "join",
      "publication",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "cited",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t7",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t6",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the authors who have cited the papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "cited",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ],
            [
              0,
              42,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            14
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t5.title",
      ")",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Divesh",
      "Srivastava",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t5",
      ".",
      "title",
      ")",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Divesh",
      "Srivastava",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Divesh Srivastava\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t5.title ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.year  <  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t5.title",
      ")",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Divesh",
      "Srivastava",
      "''",
      "AND",
      "t5.year",
      "<",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t5",
      ".",
      "title",
      ")",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "year",
      "<",
      "value"
    ],
    "question": "return me the number of papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" before 2000 .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Divesh",
      "Srivastava",
      "``",
      "before",
      "2000",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Divesh Srivastava\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t7.title ) FROM writes AS t4 JOIN author AS t2 ON t4.aid  =  t2.aid JOIN publication AS t7 ON t4.pid  =  t7.pid JOIN writes AS t5 ON t5.pid  =  t7.pid JOIN writes AS t6 ON t6.pid  =  t7.pid JOIN author AS t1 ON t5.aid  =  t1.aid JOIN author AS t3 ON t6.aid  =  t3.aid WHERE t2.name  =  \"Cong Yu\" AND t1.name  =  \"H. V. Jagadish\" AND t3.name  =  \"Yunyao Li\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t7.title",
      ")",
      "FROM",
      "writes",
      "AS",
      "t4",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t7",
      "ON",
      "t4.pid",
      "=",
      "t7.pid",
      "JOIN",
      "writes",
      "AS",
      "t5",
      "ON",
      "t5.pid",
      "=",
      "t7.pid",
      "JOIN",
      "writes",
      "AS",
      "t6",
      "ON",
      "t6.pid",
      "=",
      "t7.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "author",
      "AS",
      "t3",
      "ON",
      "t6.aid",
      "=",
      "t3.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Cong",
      "Yu",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "Yunyao",
      "Li",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t7",
      ".",
      "title",
      ")",
      "from",
      "writes",
      "as",
      "t4",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t7",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t7",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "pid",
      "=",
      "t7",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "pid",
      "=",
      "t7",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "author",
      "as",
      "t3",
      "on",
      "t6",
      ".",
      "aid",
      "=",
      "t3",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of papers written by \" H. V. Jagadish \" , \" Yunyao Li \" , and \" Cong Yu \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      ",",
      "``",
      "Yunyao",
      "Li",
      "``",
      ",",
      "and",
      "``",
      "Cong",
      "Yu",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                29,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Cong Yu\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Yunyao Li\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.name ) FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.name",
      ")",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "name",
      ")",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of authors who have cooperated with \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "authors",
      "who",
      "have",
      "cooperated",
      "with",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT COUNT ( DISTINCT t2.name ) FROM publication AS t7 JOIN cite AS t5 ON t7.pid  =  t5.citing JOIN publication AS t6 ON t6.pid  =  t5.cited JOIN writes AS t3 ON t3.pid  =  t7.pid JOIN writes AS t4 ON t4.pid  =  t6.pid JOIN author AS t2 ON t3.aid  =  t2.aid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.name",
      ")",
      "FROM",
      "publication",
      "AS",
      "t7",
      "JOIN",
      "cite",
      "AS",
      "t5",
      "ON",
      "t7.pid",
      "=",
      "t5.citing",
      "JOIN",
      "publication",
      "AS",
      "t6",
      "ON",
      "t6.pid",
      "=",
      "t5.cited",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t7.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t6.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "name",
      ")",
      "from",
      "publication",
      "as",
      "t7",
      "join",
      "cite",
      "as",
      "t5",
      "on",
      "t7",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "citing",
      "join",
      "publication",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "cited",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t7",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t6",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "return me the number of authors who have cited the papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "number",
      "of",
      "authors",
      "who",
      "have",
      "cited",
      "the",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                27,
                false
              ],
              null
            ],
            [
              0,
              42,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            14
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"H. V. Jagadish\" AND t1.name  =  \"Divesh Srivastava\" AND t5.citation_num  >  200;",
    "query_toks": [
      "SELECT",
      "t5.title",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "Divesh",
      "Srivastava",
      "''",
      "AND",
      "t5.citation_num",
      ">",
      "200",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t5",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "citation_num",
      ">",
      "value"
    ],
    "question": "return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" with more than 200 citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Divesh",
      "Srivastava",
      "``",
      "with",
      "more",
      "than",
      "200",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Divesh Srivastava\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          200.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication_keyword",
      "AS",
      "t5",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t5.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      "GROUP",
      "BY",
      "t2.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication_keyword",
      "as",
      "t5",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the author who has the most number of papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "author",
      "who",
      "has",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t3.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      "GROUP",
      "BY",
      "t2.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the conference that has the most number of papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "conference",
      "that",
      "has",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t3.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      "GROUP",
      "BY",
      "t2.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the conference, which has the most number of papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "conference",
      ",",
      "which",
      "has",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t3.name",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t4.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t2.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      "GROUP",
      "BY",
      "t3.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the journal that has the most number of papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "journal",
      "that",
      "has",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t3.name",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t4.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t2.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      "GROUP",
      "BY",
      "t3.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the journal, which has the most number of papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "journal",
      ",",
      "which",
      "has",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t3.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "GROUP",
      "BY",
      "t1.keyword",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyword",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the keyword, which have been contained by the most number of papers in VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keyword",
      ",",
      "which",
      "have",
      "been",
      "contained",
      "by",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "in",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t2.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t4.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t2.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "GROUP",
      "BY",
      "t1.keyword",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyword",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the keyword, which have been contained by the most number of papers in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keyword",
      ",",
      "which",
      "have",
      "been",
      "contained",
      "by",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword ORDER BY COUNT ( DISTINCT t3.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t5",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t5.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "GROUP",
      "BY",
      "t1.keyword",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t5",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyword",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the keyword, which have been contained by the most number of papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keyword",
      ",",
      "which",
      "have",
      "been",
      "contained",
      "by",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" GROUP BY t1.name ORDER BY SUM ( t4.citation_num ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      "GROUP",
      "BY",
      "t1.name",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "t4.citation_num",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "sum",
      "(",
      "t4",
      ".",
      "citation_num",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the author in the \" University of Michigan \" whose papers have the most total citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "author",
      "in",
      "the",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "whose",
      "papers",
      "have",
      "the",
      "most",
      "total",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              4,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM DOMAIN AS t4 JOIN domain_publication AS t2 ON t4.did  =  t2.did JOIN publication AS t5 ON t5.pid  =  t2.pid JOIN writes AS t3 ON t3.pid  =  t5.pid JOIN author AS t1 ON t3.aid  =  t1.aid JOIN organization AS t6 ON t6.oid  =  t1.oid WHERE t4.name  =  \"Databases\" AND t6.name  =  \"University of Michigan\" GROUP BY t1.name ORDER BY SUM ( t5.citation_num ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "DOMAIN",
      "AS",
      "t4",
      "JOIN",
      "domain_publication",
      "AS",
      "t2",
      "ON",
      "t4.did",
      "=",
      "t2.did",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t5.pid",
      "=",
      "t2.pid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "organization",
      "AS",
      "t6",
      "ON",
      "t6.oid",
      "=",
      "t1.oid",
      "WHERE",
      "t4.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t6.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      "GROUP",
      "BY",
      "t1.name",
      "ORDER",
      "BY",
      "SUM",
      "(",
      "t5.citation_num",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "domain",
      "as",
      "t4",
      "join",
      "domain_publication",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "pid",
      "=",
      "t2",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "organization",
      "as",
      "t6",
      "on",
      "t6",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "where",
      "t4",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t6",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "sum",
      "(",
      "t5",
      ".",
      "citation_num",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the author in the \" University of Michigan \" whose papers in Databases area have the most total citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "author",
      "in",
      "the",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "whose",
      "papers",
      "in",
      "Databases",
      "area",
      "have",
      "the",
      "most",
      "total",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              31,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            10
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              4,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t5.title FROM writes AS t3 JOIN author AS t2 ON t3.aid  =  t2.aid JOIN publication AS t5 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t5.pid JOIN author AS t1 ON t4.aid  =  t1.aid WHERE t2.name  =  \"Divesh Srivastava\" AND t1.name  =  \"H. V. Jagadish\" ORDER BY t5.citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t5.title",
      "FROM",
      "writes",
      "AS",
      "t3",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "publication",
      "AS",
      "t5",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t5.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Divesh",
      "Srivastava",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "ORDER",
      "BY",
      "t5.citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t5",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t3",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t5",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "order",
      "by",
      "t5",
      ".",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the papers written by \" H. V. Jagadish \" and \" Divesh Srivastava \" with the most number of citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "papers",
      "written",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "and",
      "``",
      "Divesh",
      "Srivastava",
      "``",
      "with",
      "the",
      "most",
      "number",
      "of",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Divesh Srivastava\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "GROUP",
      "BY",
      "t2.name",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      ">",
      "10",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "having",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the conferences, which have more than 10 papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "conferences",
      ",",
      "which",
      "have",
      "more",
      "than",
      "10",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "GROUP",
      "BY",
      "t2.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the conference, which have the most number of papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "conference",
      ",",
      "which",
      "have",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name HAVING COUNT ( DISTINCT t4.title )  >  10;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "GROUP",
      "BY",
      "t2.name",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      ">",
      "10",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "having",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the journals, which have more than 10 papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "journals",
      ",",
      "which",
      "have",
      "more",
      "than",
      "10",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t1.name  =  \"H. V. Jagadish\" GROUP BY t2.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "GROUP",
      "BY",
      "t2.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the journal, which have the most number of papers by \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "journal",
      ",",
      "which",
      "have",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT title FROM publication ORDER BY citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "publication",
      "ORDER",
      "BY",
      "citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "publication",
      "order",
      "by",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" ORDER BY t3.citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "DOMAIN",
      "AS",
      "t2",
      "JOIN",
      "domain_publication",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t1.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Databases",
      "''",
      "ORDER",
      "BY",
      "t3.citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "domain",
      "as",
      "t2",
      "join",
      "domain_publication",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t1",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper in Databases area with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "in",
      "Databases",
      "area",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              31,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            10
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" ORDER BY t2.citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "ORDER",
      "BY",
      "t2.citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "order",
      "by",
      "t2",
      ".",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper in PVLDB with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "in",
      "PVLDB",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" ORDER BY t2.citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "ORDER",
      "BY",
      "t2.citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "order",
      "by",
      "t2",
      ".",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper in VLDB conference with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "in",
      "VLDB",
      "conference",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.title FROM writes AS t2 JOIN author AS t1 ON t2.aid  =  t1.aid JOIN publication AS t3 ON t2.pid  =  t3.pid WHERE t1.name  =  \"H. V. Jagadish\" ORDER BY t3.citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "writes",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t2.pid",
      "=",
      "t3.pid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "ORDER",
      "BY",
      "t3.citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "writes",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper by \" H. V. Jagadish \" with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "by",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                39,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            13
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT title FROM publication WHERE YEAR  >  2000 ORDER BY citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "publication",
      "WHERE",
      "YEAR",
      ">",
      "2000",
      "ORDER",
      "BY",
      "citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "publication",
      "where",
      "year",
      ">",
      "value",
      "order",
      "by",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper after 2000 with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "after",
      "2000",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.title FROM DOMAIN AS t2 JOIN domain_publication AS t1 ON t2.did  =  t1.did JOIN publication AS t3 ON t3.pid  =  t1.pid WHERE t2.name  =  \"Databases\" AND t3.year  >  2000 ORDER BY t3.citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "DOMAIN",
      "AS",
      "t2",
      "JOIN",
      "domain_publication",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t1.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t3.year",
      ">",
      "2000",
      "ORDER",
      "BY",
      "t3.citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "domain",
      "as",
      "t2",
      "join",
      "domain_publication",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t1",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "year",
      ">",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper after 2000 in Databases area with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "after",
      "2000",
      "in",
      "Databases",
      "area",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                8,
                false
              ],
              null
            ],
            [
              0,
              31,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            10
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN journal AS t1 ON t2.jid  =  t1.jid WHERE t1.name  =  \"PVLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "journal",
      "AS",
      "t1",
      "ON",
      "t2.jid",
      "=",
      "t1.jid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "AND",
      "t2.year",
      ">",
      "2000",
      "ORDER",
      "BY",
      "t2.citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "journal",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t1",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      ">",
      "value",
      "order",
      "by",
      "t2",
      ".",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper after 2000 in PVLDB with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "after",
      "2000",
      "in",
      "PVLDB",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.title FROM publication AS t2 JOIN conference AS t1 ON t2.cid  =  t1.cid WHERE t1.name  =  \"VLDB\" AND t2.year  >  2000 ORDER BY t2.citation_num DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "publication",
      "AS",
      "t2",
      "JOIN",
      "conference",
      "AS",
      "t1",
      "ON",
      "t2.cid",
      "=",
      "t1.cid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "VLDB",
      "''",
      "AND",
      "t2.year",
      ">",
      "2000",
      "ORDER",
      "BY",
      "t2.citation_num",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "publication",
      "as",
      "t2",
      "join",
      "conference",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "cid",
      "=",
      "t1",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "year",
      ">",
      "value",
      "order",
      "by",
      "t2",
      ".",
      "citation_num",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the paper after 2000 in VLDB conference with the most citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "paper",
      "after",
      "2000",
      "in",
      "VLDB",
      "conference",
      "with",
      "the",
      "most",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                29,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "GROUP",
      "BY",
      "t1.name",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      ">",
      "10",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "having",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the authors who have more than 10 papers in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "more",
      "than",
      "10",
      "papers",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN journal AS t2 ON t4.jid  =  t2.jid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"PVLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "journal",
      "AS",
      "t2",
      "ON",
      "t4.jid",
      "=",
      "t2.jid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "GROUP",
      "BY",
      "t1.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "journal",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "jid",
      "=",
      "t2",
      ".",
      "jid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the authors who have the most number of papers in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ],
            [
              0,
              15,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            5
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  10;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication_keyword",
      "AS",
      "t5",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t5.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      "GROUP",
      "BY",
      "t2.name",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      ">",
      "10",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication_keyword",
      "as",
      "t5",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "having",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the authors who have more than 10 papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "more",
      "than",
      "10",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t2.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t2.name HAVING COUNT ( DISTINCT t3.title )  >  60;",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t3.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      "GROUP",
      "BY",
      "t2.name",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      ">",
      "60",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "name",
      "having",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the conferences, which have more than 60 papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "conferences",
      ",",
      "which",
      "have",
      "more",
      "than",
      "60",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          7,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          60.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t3.name FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t1.keyword  =  \"Relational Database\" GROUP BY t3.name HAVING COUNT ( DISTINCT t2.title )  >  60;",
    "query_toks": [
      "SELECT",
      "t3.name",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t4.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t2.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Relational",
      "Database",
      "''",
      "GROUP",
      "BY",
      "t3.name",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      ">",
      "60",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "name",
      "having",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the journals, which have more than 60 papers containing keyword \" Relational Database \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "journals",
      ",",
      "which",
      "have",
      "more",
      "than",
      "60",
      "papers",
      "containing",
      "keyword",
      "``",
      "Relational",
      "Database",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          16,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          60.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                16,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              19,
              false
            ],
            null
          ],
          "\"Relational Database\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t4.pid JOIN conference AS t2 ON t3.cid  =  t2.cid WHERE t2.name  =  \"VLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  100;",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t3.cid",
      "=",
      "t2.cid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "GROUP",
      "BY",
      "t1.keyword",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      ">",
      "100",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyword",
      "having",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the keywords, which have been contained by more than 100 papers in VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keywords",
      ",",
      "which",
      "have",
      "been",
      "contained",
      "by",
      "more",
      "than",
      "100",
      "papers",
      "in",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t4 JOIN keyword AS t1 ON t4.kid  =  t1.kid JOIN publication AS t2 ON t2.pid  =  t4.pid JOIN journal AS t3 ON t2.jid  =  t3.jid WHERE t3.name  =  \"PVLDB\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t2.title )  >  100;",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t4",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t4.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t2",
      "ON",
      "t2.pid",
      "=",
      "t4.pid",
      "JOIN",
      "journal",
      "AS",
      "t3",
      "ON",
      "t2.jid",
      "=",
      "t3.jid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "PVLDB",
      "''",
      "GROUP",
      "BY",
      "t1.keyword",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      ">",
      "100",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t4",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "journal",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "jid",
      "=",
      "t3",
      ".",
      "jid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyword",
      "having",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the keywords, which have been contained by more than 100 papers in PVLDB .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keywords",
      ",",
      "which",
      "have",
      "been",
      "contained",
      "by",
      "more",
      "than",
      "100",
      "papers",
      "in",
      "PVLDB",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          100.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              16,
              false
            ],
            null
          ],
          "\"PVLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.keyword FROM publication_keyword AS t5 JOIN keyword AS t1 ON t5.kid  =  t1.kid JOIN publication AS t3 ON t3.pid  =  t5.pid JOIN writes AS t4 ON t4.pid  =  t3.pid JOIN author AS t2 ON t4.aid  =  t2.aid WHERE t2.name  =  \"H. V. Jagadish\" GROUP BY t1.keyword HAVING COUNT ( DISTINCT t3.title )  >  10;",
    "query_toks": [
      "SELECT",
      "t1.keyword",
      "FROM",
      "publication_keyword",
      "AS",
      "t5",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t5.kid",
      "=",
      "t1.kid",
      "JOIN",
      "publication",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t5.pid",
      "JOIN",
      "writes",
      "AS",
      "t4",
      "ON",
      "t4.pid",
      "=",
      "t3.pid",
      "JOIN",
      "author",
      "AS",
      "t2",
      "ON",
      "t4.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "''",
      "GROUP",
      "BY",
      "t1.keyword",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      ">",
      "10",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "keyword",
      "from",
      "publication_keyword",
      "as",
      "t5",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "kid",
      "join",
      "publication",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "join",
      "writes",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "keyword",
      "having",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the keywords, which have been contained by more than 10 papers of \" H. V. Jagadish \" .",
    "question_toks": [
      "return",
      "me",
      "the",
      "keywords",
      ",",
      "which",
      "have",
      "been",
      "contained",
      "by",
      "more",
      "than",
      "10",
      "papers",
      "of",
      "``",
      "H.",
      "V.",
      "Jagadish",
      "``",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                38,
                false
              ],
              null
            ],
            [
              0,
              20,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            7
          ]
        ]
      },
      "groupBy": [
        [
          0,
          19,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                19,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"H. V. Jagadish\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name HAVING COUNT ( DISTINCT t4.title )  >  10;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "GROUP",
      "BY",
      "t1.name",
      "HAVING",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      ">",
      "10",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "having",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      ">",
      "value"
    ],
    "question": "return me the authors who have more than 10 papers in the VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "authors",
      "who",
      "have",
      "more",
      "than",
      "10",
      "papers",
      "in",
      "the",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ],
          10.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM publication AS t4 JOIN conference AS t2 ON t4.cid  =  t2.cid JOIN writes AS t3 ON t3.pid  =  t4.pid JOIN author AS t1 ON t3.aid  =  t1.aid WHERE t2.name  =  \"VLDB\" GROUP BY t1.name ORDER BY COUNT ( DISTINCT t4.title ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "publication",
      "AS",
      "t4",
      "JOIN",
      "conference",
      "AS",
      "t2",
      "ON",
      "t4.cid",
      "=",
      "t2.cid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "VLDB",
      "''",
      "GROUP",
      "BY",
      "t1.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "publication",
      "as",
      "t4",
      "join",
      "conference",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "cid",
      "=",
      "t2",
      ".",
      "cid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "return me the author who has the most number of papers in the VLDB conference .",
    "question_toks": [
      "return",
      "me",
      "the",
      "author",
      "who",
      "has",
      "the",
      "most",
      "number",
      "of",
      "papers",
      "in",
      "the",
      "VLDB",
      "conference",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ],
            [
              0,
              5,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            9
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              29,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          "\"VLDB\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM organization AS t2 JOIN author AS t1 ON t2.oid  =  t1.oid JOIN writes AS t3 ON t3.aid  =  t1.aid JOIN publication AS t4 ON t3.pid  =  t4.pid WHERE t2.name  =  \"University of Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "organization",
      "AS",
      "t2",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t2.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t3",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t3.pid",
      "=",
      "t4.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      "GROUP",
      "BY",
      "t1.name",
      "HAVING",
      "SUM",
      "(",
      "t4.citation_num",
      ")",
      ">",
      "5000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "organization",
      "as",
      "t2",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t3",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "having",
      "sum",
      "(",
      "t4",
      ".",
      "citation_num",
      ")",
      ">",
      "value"
    ],
    "question": "return me the author in the \" University of Michigan \" whose papers have more than 5000 total citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "author",
      "in",
      "the",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "whose",
      "papers",
      "have",
      "more",
      "than",
      "5000",
      "total",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                36,
                false
              ],
              null
            ],
            [
              0,
              4,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              4,
              25,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "academic",
    "query": "SELECT t1.name FROM domain_author AS t6 JOIN author AS t1 ON t6.aid  =  t1.aid JOIN DOMAIN AS t3 ON t3.did  =  t6.did JOIN organization AS t5 ON t5.oid  =  t1.oid JOIN writes AS t2 ON t2.aid  =  t1.aid JOIN publication AS t4 ON t2.pid  =  t4.pid WHERE t3.name  =  \"Databases\" AND t5.name  =  \"University of Michigan\" GROUP BY t1.name HAVING SUM ( t4.citation_num )  >  5000;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "domain_author",
      "AS",
      "t6",
      "JOIN",
      "author",
      "AS",
      "t1",
      "ON",
      "t6.aid",
      "=",
      "t1.aid",
      "JOIN",
      "DOMAIN",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t6.did",
      "JOIN",
      "organization",
      "AS",
      "t5",
      "ON",
      "t5.oid",
      "=",
      "t1.oid",
      "JOIN",
      "writes",
      "AS",
      "t2",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "publication",
      "AS",
      "t4",
      "ON",
      "t2.pid",
      "=",
      "t4.pid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Databases",
      "''",
      "AND",
      "t5.name",
      "=",
      "``",
      "University",
      "of",
      "Michigan",
      "''",
      "GROUP",
      "BY",
      "t1.name",
      "HAVING",
      "SUM",
      "(",
      "t4.citation_num",
      ")",
      ">",
      "5000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "domain_author",
      "as",
      "t6",
      "join",
      "author",
      "as",
      "t1",
      "on",
      "t6",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "domain",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t6",
      ".",
      "did",
      "join",
      "organization",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "oid",
      "=",
      "t1",
      ".",
      "oid",
      "join",
      "writes",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "publication",
      "as",
      "t4",
      "on",
      "t2",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t5",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "having",
      "sum",
      "(",
      "t4",
      ".",
      "citation_num",
      ")",
      ">",
      "value"
    ],
    "question": "return me the author in the \" University of Michigan \" in Databases area whose papers have more than 5000 total citations .",
    "question_toks": [
      "return",
      "me",
      "the",
      "author",
      "in",
      "the",
      "``",
      "University",
      "of",
      "Michigan",
      "``",
      "in",
      "Databases",
      "area",
      "whose",
      "papers",
      "have",
      "more",
      "than",
      "5000",
      "total",
      "citations",
      "."
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          3,
          false
        ]
      ],
      "having": [
        [
          false,
          3,
          [
            0,
            [
              4,
              25,
              false
            ],
            null
          ],
          5000.0,
          null
        ]
      ],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              9,
              false
            ],
            null
          ],
          "\"Databases\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              35,
              false
            ],
            null
          ],
          "\"University of Michigan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";",
    "query_toks": [
      "SELECT",
      "release_year",
      "FROM",
      "movie",
      "WHERE",
      "title",
      "=",
      "``",
      "The",
      "Imitation",
      "Game",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "release_year",
      "from",
      "movie",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "What year is the movie \" The Imitation Game \" from ?",
    "question_toks": [
      "What",
      "year",
      "is",
      "the",
      "movie",
      "``",
      "The",
      "Imitation",
      "Game",
      "``",
      "from",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Imitation Game\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT release_year FROM movie WHERE title  =  \"The Imitation Game\";",
    "query_toks": [
      "SELECT",
      "release_year",
      "FROM",
      "movie",
      "WHERE",
      "title",
      "=",
      "``",
      "The",
      "Imitation",
      "Game",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "release_year",
      "from",
      "movie",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "What year was the movie \" The Imitation Game \" produced",
    "question_toks": [
      "What",
      "year",
      "was",
      "the",
      "movie",
      "``",
      "The",
      "Imitation",
      "Game",
      "``",
      "produced"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Imitation Game\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT birth_year FROM actor WHERE name  =  \"Benedict Cumberbatch\";",
    "query_toks": [
      "SELECT",
      "birth_year",
      "FROM",
      "actor",
      "WHERE",
      "name",
      "=",
      "``",
      "Benedict",
      "Cumberbatch",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "birth_year",
      "from",
      "actor",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What year was \" Benedict Cumberbatch \" born ?",
    "question_toks": [
      "What",
      "year",
      "was",
      "``",
      "Benedict",
      "Cumberbatch",
      "``",
      "born",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Benedict Cumberbatch\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT birth_year FROM actor WHERE name  =  \"Benedict Cumberbatch\";",
    "query_toks": [
      "SELECT",
      "birth_year",
      "FROM",
      "actor",
      "WHERE",
      "name",
      "=",
      "``",
      "Benedict",
      "Cumberbatch",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "birth_year",
      "from",
      "actor",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "In what year was \" Benedict Cumberbatch \" born",
    "question_toks": [
      "In",
      "what",
      "year",
      "was",
      "``",
      "Benedict",
      "Cumberbatch",
      "``",
      "born"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Benedict Cumberbatch\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT nationality FROM actor WHERE name  =  \"Christoph Waltz\";",
    "query_toks": [
      "SELECT",
      "nationality",
      "FROM",
      "actor",
      "WHERE",
      "name",
      "=",
      "``",
      "Christoph",
      "Waltz",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "nationality",
      "from",
      "actor",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the nationality of the actress \" Christoph Waltz \" ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nationality",
      "of",
      "the",
      "actress",
      "``",
      "Christoph",
      "Waltz",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Christoph Waltz\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT nationality FROM actor WHERE name  =  \"Christoph Waltz\";",
    "query_toks": [
      "SELECT",
      "nationality",
      "FROM",
      "actor",
      "WHERE",
      "name",
      "=",
      "``",
      "Christoph",
      "Waltz",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "nationality",
      "from",
      "actor",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the nationality of the actor \" Christoph Waltz \" ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nationality",
      "of",
      "the",
      "actor",
      "``",
      "Christoph",
      "Waltz",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Christoph Waltz\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT title FROM movie WHERE release_year  =  2015;",
    "query_toks": [
      "SELECT",
      "title",
      "FROM",
      "movie",
      "WHERE",
      "release_year",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "title",
      "from",
      "movie",
      "where",
      "release_year",
      "=",
      "value"
    ],
    "question": "Find all movies produced in 2015",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "produced",
      "in",
      "2015"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_city  =  \"Tehran\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "Tehran",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value"
    ],
    "question": "Find all actors born in \" Tehran \"",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "born",
      "in",
      "``",
      "Tehran",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Tehran\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_city  =  \"Tehran\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "Tehran",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value"
    ],
    "question": "Find all actors born in Tehran",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "born",
      "in",
      "Tehran"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Tehran\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_city  =  \"Tehran\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "Tehran",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value"
    ],
    "question": "Which actors were born in Tehran",
    "question_toks": [
      "Which",
      "actors",
      "were",
      "born",
      "in",
      "Tehran"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Tehran\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "nationality",
      "=",
      "``",
      "Afghanistan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "nationality",
      "=",
      "value"
    ],
    "question": "Find all actors who are from Afghanistan",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "who",
      "are",
      "from",
      "Afghanistan"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Afghanistan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "nationality",
      "=",
      "``",
      "Afghanistan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "nationality",
      "=",
      "value"
    ],
    "question": "Find all actors from Afghanistan",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "from",
      "Afghanistan"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Afghanistan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE nationality  =  \"Afghanistan\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "nationality",
      "=",
      "``",
      "Afghanistan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "nationality",
      "=",
      "value"
    ],
    "question": "Give me the name of all the actors from Afghanistan",
    "question_toks": [
      "Give",
      "me",
      "the",
      "name",
      "of",
      "all",
      "the",
      "actors",
      "from",
      "Afghanistan"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Afghanistan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_year  =  1984;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_year",
      "=",
      "1984",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_year",
      "=",
      "value"
    ],
    "question": "Find all actors who were born in 1984",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "who",
      "were",
      "born",
      "in",
      "1984"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1984.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT birth_year FROM actor WHERE name  =  \"actor_name0\";",
    "query_toks": [
      "SELECT",
      "birth_year",
      "FROM",
      "actor",
      "WHERE",
      "name",
      "=",
      "``",
      "actor_name0",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "birth_year",
      "from",
      "actor",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "When was \" Kevin Spacey \" born ?",
    "question_toks": [
      "When",
      "was",
      "``",
      "Kevin",
      "Spacey",
      "``",
      "born",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"actor_name0\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT birth_year FROM actor WHERE name  =  \"actor_name0\";",
    "query_toks": [
      "SELECT",
      "birth_year",
      "FROM",
      "actor",
      "WHERE",
      "name",
      "=",
      "``",
      "actor_name0",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "birth_year",
      "from",
      "actor",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "In what year was \" Kevin Spacey \" born ?",
    "question_toks": [
      "In",
      "what",
      "year",
      "was",
      "``",
      "Kevin",
      "Spacey",
      "``",
      "born",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                6,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"actor_name0\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT birth_city FROM director WHERE name  =  \"director_name0\";",
    "query_toks": [
      "SELECT",
      "birth_city",
      "FROM",
      "director",
      "WHERE",
      "name",
      "=",
      "``",
      "director_name0",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "birth_city",
      "from",
      "director",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "Where is the birth place of \" Kevin Spacey \"",
    "question_toks": [
      "Where",
      "is",
      "the",
      "birth",
      "place",
      "of",
      "``",
      "Kevin",
      "Spacey",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"director_name0\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT birth_city FROM director WHERE name  =  \"director_name0\";",
    "query_toks": [
      "SELECT",
      "birth_city",
      "FROM",
      "director",
      "WHERE",
      "name",
      "=",
      "``",
      "director_name0",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "birth_city",
      "from",
      "director",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "In what city was \" Kevin Spacey \" born ?",
    "question_toks": [
      "In",
      "what",
      "city",
      "was",
      "``",
      "Kevin",
      "Spacey",
      "``",
      "born",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"director_name0\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT nationality FROM director WHERE name  =  \"director_name0\";",
    "query_toks": [
      "SELECT",
      "nationality",
      "FROM",
      "director",
      "WHERE",
      "name",
      "=",
      "``",
      "director_name0",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "nationality",
      "from",
      "director",
      "where",
      "name",
      "=",
      "value"
    ],
    "question": "What is the nationality of \" Kevin Spacey \" ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "nationality",
      "of",
      "``",
      "Kevin",
      "Spacey",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                25,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"director_name0\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT budget FROM movie WHERE title  =  \"Finding Nemo\";",
    "query_toks": [
      "SELECT",
      "budget",
      "FROM",
      "movie",
      "WHERE",
      "title",
      "=",
      "``",
      "Finding",
      "Nemo",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "budget",
      "from",
      "movie",
      "where",
      "title",
      "=",
      "value"
    ],
    "question": "How much was the budget of \" Finding Nemo \"",
    "question_toks": [
      "How",
      "much",
      "was",
      "the",
      "budget",
      "of",
      "``",
      "Finding",
      "Nemo",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Finding Nemo\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\" AND t3.release_year  >  2006;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Steven",
      "Spielberg",
      "''",
      "AND",
      "t3.release_year",
      ">",
      "2006",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "release_year",
      ">",
      "value"
    ],
    "question": "Find all movies directed by \" Steven Spielberg \" after 2006",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "directed",
      "by",
      "``",
      "Steven",
      "Spielberg",
      "``",
      "after",
      "2006"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Steven Spielberg\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2006.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "James",
      "Bond",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who is the director of the movie \" James Bond \" ?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "director",
      "of",
      "the",
      "movie",
      "``",
      "James",
      "Bond",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"James Bond\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "James",
      "Bond",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who directed the movie \" James Bond \" ?",
    "question_toks": [
      "Who",
      "directed",
      "the",
      "movie",
      "``",
      "James",
      "Bond",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"James Bond\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"James Bond\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "James",
      "Bond",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "List \" James Bond \" directors",
    "question_toks": [
      "List",
      "``",
      "James",
      "Bond",
      "``",
      "directors"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"James Bond\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t2.role",
      "=",
      "``",
      "Alan",
      "Turing",
      "''",
      "AND",
      "t3.title",
      "=",
      "``",
      "The",
      "Imitation",
      "Game",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "role",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Find the actor who played \" Alan Turing \" in the movie \" The Imitation Game \"",
    "question_toks": [
      "Find",
      "the",
      "actor",
      "who",
      "played",
      "``",
      "Alan",
      "Turing",
      "``",
      "in",
      "the",
      "movie",
      "``",
      "The",
      "Imitation",
      "Game",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Alan Turing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Imitation Game\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t2.role",
      "=",
      "``",
      "Alan",
      "Turing",
      "''",
      "AND",
      "t3.title",
      "=",
      "``",
      "The",
      "Imitation",
      "Game",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "role",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who acted \" Alan Turing \" in the movie \" The Imitation Game \" ?",
    "question_toks": [
      "Who",
      "acted",
      "``",
      "Alan",
      "Turing",
      "``",
      "in",
      "the",
      "movie",
      "``",
      "The",
      "Imitation",
      "Game",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Alan Turing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Imitation Game\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t2.role",
      "=",
      "``",
      "Alan",
      "Turing",
      "''",
      "AND",
      "t3.title",
      "=",
      "``",
      "The",
      "Imitation",
      "Game",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "role",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who was the actor that played \" Alan Turing \" in the movie \" The Imitation Game \" ?",
    "question_toks": [
      "Who",
      "was",
      "the",
      "actor",
      "that",
      "played",
      "``",
      "Alan",
      "Turing",
      "``",
      "in",
      "the",
      "movie",
      "``",
      "The",
      "Imitation",
      "Game",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Alan Turing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Imitation Game\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t2.role",
      "=",
      "``",
      "Alan",
      "Turing",
      "''",
      "AND",
      "t3.title",
      "=",
      "``",
      "The",
      "Imitation",
      "Game",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "role",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who acts as \" Alan Turing \" in the movie \" The Imitation Game \" ?",
    "question_toks": [
      "Who",
      "acts",
      "as",
      "``",
      "Alan",
      "Turing",
      "``",
      "in",
      "the",
      "movie",
      "``",
      "The",
      "Imitation",
      "Game",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Alan Turing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Imitation Game\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t2.role  =  \"Alan Turing\" AND t3.title  =  \"The Imitation Game\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t2.role",
      "=",
      "``",
      "Alan",
      "Turing",
      "''",
      "AND",
      "t3.title",
      "=",
      "``",
      "The",
      "Imitation",
      "Game",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "role",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who is the actor playing \" Alan Turing \" in \" The Imitation Game \" ?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "actor",
      "playing",
      "``",
      "Alan",
      "Turing",
      "``",
      "in",
      "``",
      "The",
      "Imitation",
      "Game",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Alan Turing\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Imitation Game\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.genre FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"Jurassic Park\";",
    "query_toks": [
      "SELECT",
      "t2.genre",
      "FROM",
      "genre",
      "AS",
      "t2",
      "JOIN",
      "classification",
      "AS",
      "t1",
      "ON",
      "t2.gid",
      "=",
      "t1.gid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "Jurassic",
      "Park",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "genre",
      "from",
      "genre",
      "as",
      "t2",
      "join",
      "classification",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "gid",
      "=",
      "t1",
      ".",
      "gid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "What is the genre of the movie \" Jurassic Park \" ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "genre",
      "of",
      "the",
      "movie",
      "``",
      "Jurassic",
      "Park",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Jurassic Park\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.release_year  =  2015 AND t3.title  =  \"Joy\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t3.release_year",
      "=",
      "2015",
      "AND",
      "t3.title",
      "=",
      "``",
      "Joy",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "release_year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who was the director of the movie Joy from 2015 ?",
    "question_toks": [
      "Who",
      "was",
      "the",
      "director",
      "of",
      "the",
      "movie",
      "Joy",
      "from",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2015.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Joy\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.title FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t2.name  =  \"Matt Damon\";",
    "query_toks": [
      "SELECT",
      "t1.title",
      "FROM",
      "written_by",
      "AS",
      "t3",
      "JOIN",
      "movie",
      "AS",
      "t1",
      "ON",
      "t3.msid",
      "=",
      "t1.mid",
      "JOIN",
      "writer",
      "AS",
      "t2",
      "ON",
      "t3.wid",
      "=",
      "t2.wid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Matt",
      "Damon",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "title",
      "from",
      "written_by",
      "as",
      "t3",
      "join",
      "movie",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "msid",
      "=",
      "t1",
      ".",
      "mid",
      "join",
      "writer",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "wid",
      "=",
      "t2",
      ".",
      "wid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all movies written by \" Matt Damon \"",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "written",
      "by",
      "``",
      "Matt",
      "Damon",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                65,
                false
              ],
              null
            ],
            [
              0,
              42,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            15
          ],
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              59,
              false
            ],
            null
          ],
          "\"Matt Damon\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.title FROM movie AS t2 JOIN made_by AS t3 ON t2.mid  =  t3.msid JOIN producer AS t1 ON t1.pid  =  t3.pid JOIN written_by AS t5 ON t5.msid  =  t2.mid JOIN writer AS t4 ON t5.wid  =  t4.wid WHERE t1.name  =  \"Woody Allen\" AND t4.name  =  \"Woody Allen\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "movie",
      "AS",
      "t2",
      "JOIN",
      "made_by",
      "AS",
      "t3",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "JOIN",
      "producer",
      "AS",
      "t1",
      "ON",
      "t1.pid",
      "=",
      "t3.pid",
      "JOIN",
      "written_by",
      "AS",
      "t5",
      "ON",
      "t5.msid",
      "=",
      "t2.mid",
      "JOIN",
      "writer",
      "AS",
      "t4",
      "ON",
      "t5.wid",
      "=",
      "t4.wid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Woody",
      "Allen",
      "''",
      "AND",
      "t4.name",
      "=",
      "``",
      "Woody",
      "Allen",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "movie",
      "as",
      "t2",
      "join",
      "made_by",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "join",
      "producer",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "written_by",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "msid",
      "=",
      "t2",
      ".",
      "mid",
      "join",
      "writer",
      "as",
      "t4",
      "on",
      "t5",
      ".",
      "wid",
      "=",
      "t4",
      ".",
      "wid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all movies written and produced by \" Woody Allen \"",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "written",
      "and",
      "produced",
      "by",
      "``",
      "Woody",
      "Allen",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                42,
                false
              ],
              null
            ],
            [
              0,
              40,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            10
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"Woody Allen\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              59,
              false
            ],
            null
          ],
          "\"Woody Allen\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Robin",
      "Wright",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all movies featuring \" Robin Wright \"",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "featuring",
      "``",
      "Robin",
      "Wright",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Robin Wright\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Robin",
      "Wright",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What are all the movies featuring \" Robin Wright \" ?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "movies",
      "featuring",
      "``",
      "Robin",
      "Wright",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Robin Wright\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Robin Wright\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Robin",
      "Wright",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all movies in which \" Robin Wright \" appears",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "in",
      "which",
      "``",
      "Robin",
      "Wright",
      "``",
      "appears"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Robin Wright\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT budget FROM movie WHERE release_year  =  2007 AND title  =  \"Juno\";",
    "query_toks": [
      "SELECT",
      "budget",
      "FROM",
      "movie",
      "WHERE",
      "release_year",
      "=",
      "2007",
      "AND",
      "title",
      "=",
      "``",
      "Juno",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "budget",
      "from",
      "movie",
      "where",
      "release_year",
      "=",
      "value",
      "and",
      "title",
      "=",
      "value"
    ],
    "question": "What was the budget of the movie Juno from 2007 ?",
    "question_toks": [
      "What",
      "was",
      "the",
      "budget",
      "of",
      "the",
      "movie",
      "Juno",
      "from",
      "2007",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2007.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Juno\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"Sci-Fi\" AND t3.release_year  =  2010;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "genre",
      "AS",
      "t2",
      "JOIN",
      "classification",
      "AS",
      "t1",
      "ON",
      "t2.gid",
      "=",
      "t1.gid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.genre",
      "=",
      "``",
      "Sci-Fi",
      "''",
      "AND",
      "t3.release_year",
      "=",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "genre",
      "as",
      "t2",
      "join",
      "classification",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "gid",
      "=",
      "t1",
      ".",
      "gid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "genre",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "release_year",
      "=",
      "value"
    ],
    "question": "Find all Sci-Fi produced in year 2010",
    "question_toks": [
      "Find",
      "all",
      "Sci-Fi",
      "produced",
      "in",
      "year",
      "2010"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Sci-Fi\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.genre  =  \"Sci-Fi\" AND t3.release_year  =  2010;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "genre",
      "AS",
      "t2",
      "JOIN",
      "classification",
      "AS",
      "t1",
      "ON",
      "t2.gid",
      "=",
      "t1.gid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.genre",
      "=",
      "``",
      "Sci-Fi",
      "''",
      "AND",
      "t3.release_year",
      "=",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "genre",
      "as",
      "t2",
      "join",
      "classification",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "gid",
      "=",
      "t1",
      ".",
      "gid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "genre",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "release_year",
      "=",
      "value"
    ],
    "question": "List all the Sci-Fi movies which released in 2010",
    "question_toks": [
      "List",
      "all",
      "the",
      "Sci-Fi",
      "movies",
      "which",
      "released",
      "in",
      "2010"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              15,
              false
            ],
            null
          ],
          "\"Sci-Fi\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "Austin",
      "''",
      "AND",
      "birth_year",
      ">",
      "1980",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value",
      "and",
      "birth_year",
      ">",
      "value"
    ],
    "question": "Find all actors born in \" Austin \" after 1980",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "born",
      "in",
      "``",
      "Austin",
      "``",
      "after",
      "1980"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Austin\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1980.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "Austin",
      "''",
      "AND",
      "birth_year",
      ">",
      "1980",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value",
      "and",
      "birth_year",
      ">",
      "value"
    ],
    "question": "Who are the actors born in \" Austin \" after 1980 ?",
    "question_toks": [
      "Who",
      "are",
      "the",
      "actors",
      "born",
      "in",
      "``",
      "Austin",
      "``",
      "after",
      "1980",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Austin\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1980.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND birth_year  >  1980;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "Austin",
      "''",
      "AND",
      "birth_year",
      ">",
      "1980",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value",
      "and",
      "birth_year",
      ">",
      "value"
    ],
    "question": "Find all actors from Austin born after 1980",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "from",
      "Austin",
      "born",
      "after",
      "1980"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Austin\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1980.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.birth_city  =  \"Los Angeles\";",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.birth_city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "birth_city",
      "=",
      "value"
    ],
    "question": "Find all movies by directors born in \" Los Angeles \"",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "by",
      "directors",
      "born",
      "in",
      "``",
      "Los",
      "Angeles",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              26,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  =  1984;",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "New",
      "York",
      "City",
      "''",
      "AND",
      "birth_year",
      "=",
      "1984",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value",
      "and",
      "birth_year",
      "=",
      "value"
    ],
    "question": "Find all actors who were born in \" New York City \" in 1984",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "who",
      "were",
      "born",
      "in",
      "``",
      "New",
      "York",
      "City",
      "``",
      "in",
      "1984"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"New York City\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1984.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"nuclear weapons\";",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "tags",
      "AS",
      "t2",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t2.kid",
      "=",
      "t1.id",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t2.msid",
      "=",
      "t3.mid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "nuclear",
      "weapons",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "tags",
      "as",
      "t2",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "id",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "msid",
      "=",
      "t3",
      ".",
      "mid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "Find all movies about nuclear weapons",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "about",
      "nuclear",
      "weapons"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ],
            [
              0,
              37,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"nuclear weapons\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"nuclear weapons\";",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "tags",
      "AS",
      "t2",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t2.kid",
      "=",
      "t1.id",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t2.msid",
      "=",
      "t3.mid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "nuclear",
      "weapons",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "tags",
      "as",
      "t2",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "id",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "msid",
      "=",
      "t3",
      ".",
      "mid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "What are the movies related to nuclear weapons",
    "question_toks": [
      "What",
      "are",
      "the",
      "movies",
      "related",
      "to",
      "nuclear",
      "weapons"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ],
            [
              0,
              37,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"nuclear weapons\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Alfred Hitchcock\";",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Alfred",
      "Hitchcock",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Which movies did \" Alfred Hitchcock \" direct ?",
    "question_toks": [
      "Which",
      "movies",
      "did",
      "``",
      "Alfred",
      "Hitchcock",
      "``",
      "direct",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Alfred Hitchcock\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "CAST",
      "AS",
      "t5",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t4.mid",
      "=",
      "t2.msid",
      "JOIN",
      "director",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Taraneh",
      "Alidoosti",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "Asghar",
      "Farhadi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t5",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "director",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all movies directed by \" Asghar Farhadi \" and featuring \" Taraneh Alidoosti \"",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "directed",
      "by",
      "``",
      "Asghar",
      "Farhadi",
      "``",
      "and",
      "featuring",
      "``",
      "Taraneh",
      "Alidoosti",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Taraneh Alidoosti\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Asghar Farhadi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "CAST",
      "AS",
      "t5",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t4.mid",
      "=",
      "t2.msid",
      "JOIN",
      "director",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Taraneh",
      "Alidoosti",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "Asghar",
      "Farhadi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t5",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "director",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What are all the movies directed by \" Asghar Farhadi \" featuring \" Taraneh Alidoosti \" ?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "movies",
      "directed",
      "by",
      "``",
      "Asghar",
      "Farhadi",
      "``",
      "featuring",
      "``",
      "Taraneh",
      "Alidoosti",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Taraneh Alidoosti\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Asghar Farhadi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "CAST",
      "AS",
      "t5",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t4.mid",
      "=",
      "t2.msid",
      "JOIN",
      "director",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Taraneh",
      "Alidoosti",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "Asghar",
      "Farhadi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t5",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "director",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many movies are there that are directed by \" Asghar Farhadi \" and featuring \" Taraneh Alidoosti \" ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "are",
      "there",
      "that",
      "are",
      "directed",
      "by",
      "``",
      "Asghar",
      "Farhadi",
      "``",
      "and",
      "featuring",
      "``",
      "Taraneh",
      "Alidoosti",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Taraneh Alidoosti\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Asghar Farhadi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN directed_by AS t2 ON t4.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Taraneh Alidoosti\" AND t3.name  =  \"Asghar Farhadi\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "CAST",
      "AS",
      "t5",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t4.mid",
      "=",
      "t2.msid",
      "JOIN",
      "director",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Taraneh",
      "Alidoosti",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "Asghar",
      "Farhadi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t5",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "director",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "List all the movies directed by \" Asghar Farhadi \" in which \" Taraneh Alidoosti \" played",
    "question_toks": [
      "List",
      "all",
      "the",
      "movies",
      "directed",
      "by",
      "``",
      "Asghar",
      "Farhadi",
      "``",
      "in",
      "which",
      "``",
      "Taraneh",
      "Alidoosti",
      "``",
      "played"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Taraneh Alidoosti\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Asghar Farhadi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.title FROM producer AS t1 JOIN made_by AS t3 ON t1.pid  =  t3.pid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Shonda Rhimes\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "producer",
      "AS",
      "t1",
      "JOIN",
      "made_by",
      "AS",
      "t3",
      "ON",
      "t1.pid",
      "=",
      "t3.pid",
      "JOIN",
      "tv_series",
      "AS",
      "t2",
      "ON",
      "t2.sid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Shonda",
      "Rhimes",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "producer",
      "as",
      "t1",
      "join",
      "made_by",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "pid",
      "=",
      "t3",
      ".",
      "pid",
      "join",
      "tv_series",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "sid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What are all the tv series created by \" Shonda Rhimes \" ?",
    "question_toks": [
      "What",
      "are",
      "all",
      "the",
      "tv",
      "series",
      "created",
      "by",
      "``",
      "Shonda",
      "Rhimes",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                28,
                false
              ],
              null
            ],
            [
              0,
              41,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            7
          ],
          [
            "table_unit",
            10
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              30,
              false
            ],
            null
          ],
          "\"Shonda Rhimes\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t3.role  =  \"Olivia Pope\" AND t2.title  =  \"Scandal\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "tv_series",
      "AS",
      "t2",
      "ON",
      "t2.sid",
      "=",
      "t3.msid",
      "WHERE",
      "t3.role",
      "=",
      "``",
      "Olivia",
      "Pope",
      "''",
      "AND",
      "t2.title",
      "=",
      "``",
      "Scandal",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "tv_series",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "sid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "role",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who acts \" Olivia Pope \" in the series Scandal ?",
    "question_toks": [
      "Who",
      "acts",
      "``",
      "Olivia",
      "Pope",
      "``",
      "in",
      "the",
      "series",
      "Scandal",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Olivia Pope\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              51,
              false
            ],
            null
          ],
          "\"Scandal\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"The Truman Show\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "written_by",
      "AS",
      "t3",
      "JOIN",
      "movie",
      "AS",
      "t1",
      "ON",
      "t3.msid",
      "=",
      "t1.mid",
      "JOIN",
      "writer",
      "AS",
      "t2",
      "ON",
      "t3.wid",
      "=",
      "t2.wid",
      "WHERE",
      "t1.title",
      "=",
      "``",
      "The",
      "Truman",
      "Show",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "written_by",
      "as",
      "t3",
      "join",
      "movie",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "msid",
      "=",
      "t1",
      ".",
      "mid",
      "join",
      "writer",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "wid",
      "=",
      "t2",
      ".",
      "wid",
      "where",
      "t1",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who is the writer of the movie \" The Truman Show \"",
    "question_toks": [
      "Who",
      "is",
      "the",
      "writer",
      "of",
      "the",
      "movie",
      "``",
      "The",
      "Truman",
      "Show",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                65,
                false
              ],
              null
            ],
            [
              0,
              42,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            15
          ],
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Truman Show\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.name FROM written_by AS t3 JOIN movie AS t1 ON t3.msid  =  t1.mid JOIN writer AS t2 ON t3.wid  =  t2.wid WHERE t1.title  =  \"The Truman Show\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "written_by",
      "AS",
      "t3",
      "JOIN",
      "movie",
      "AS",
      "t1",
      "ON",
      "t3.msid",
      "=",
      "t1.mid",
      "JOIN",
      "writer",
      "AS",
      "t2",
      "ON",
      "t3.wid",
      "=",
      "t2.wid",
      "WHERE",
      "t1.title",
      "=",
      "``",
      "The",
      "Truman",
      "Show",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "written_by",
      "as",
      "t3",
      "join",
      "movie",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "msid",
      "=",
      "t1",
      ".",
      "mid",
      "join",
      "writer",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "wid",
      "=",
      "t2",
      ".",
      "wid",
      "where",
      "t1",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who is the writer of \" The Truman Show \"",
    "question_toks": [
      "Who",
      "is",
      "the",
      "writer",
      "of",
      "``",
      "The",
      "Truman",
      "Show",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                65,
                false
              ],
              null
            ],
            [
              0,
              42,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            15
          ],
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                59,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Truman Show\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Scott Foley\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "tv_series",
      "AS",
      "t2",
      "ON",
      "t2.sid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Scott",
      "Foley",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "tv_series",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "sid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What are the series featuring \" Scott Foley \" ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "series",
      "featuring",
      "``",
      "Scott",
      "Foley",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Scott Foley\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN tv_series AS t2 ON t2.sid  =  t3.msid WHERE t1.name  =  \"Scott Foley\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "tv_series",
      "AS",
      "t2",
      "ON",
      "t2.sid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Scott",
      "Foley",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "tv_series",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "sid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What are the series in which \" Scott Foley \" is an actor ?",
    "question_toks": [
      "What",
      "are",
      "the",
      "series",
      "in",
      "which",
      "``",
      "Scott",
      "Foley",
      "``",
      "is",
      "an",
      "actor",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                51,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Scott Foley\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.name  =  \"Kate Winslet\";",
    "query_toks": [
      "SELECT",
      "t3.name",
      "FROM",
      "CAST",
      "AS",
      "t4",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t5",
      "ON",
      "t5.mid",
      "=",
      "t4.msid",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t5.mid",
      "=",
      "t2.msid",
      "JOIN",
      "director",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Kate",
      "Winslet",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t4",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t4",
      ".",
      "msid",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "director",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find the directors of all movies featuring \" Kate Winslet \"",
    "question_toks": [
      "Find",
      "the",
      "directors",
      "of",
      "all",
      "movies",
      "featuring",
      "``",
      "Kate",
      "Winslet",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Kate Winslet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t3 JOIN actor AS t2 ON t3.aid  =  t2.aid JOIN movie AS t5 ON t5.mid  =  t3.msid JOIN made_by AS t4 ON t5.mid  =  t4.msid JOIN producer AS t1 ON t1.pid  =  t4.pid WHERE t2.name  =  \"Kate Winslet\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "JOIN",
      "movie",
      "AS",
      "t5",
      "ON",
      "t5.mid",
      "=",
      "t3.msid",
      "JOIN",
      "made_by",
      "AS",
      "t4",
      "ON",
      "t5.mid",
      "=",
      "t4.msid",
      "JOIN",
      "producer",
      "AS",
      "t1",
      "ON",
      "t1.pid",
      "=",
      "t4.pid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Kate",
      "Winslet",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "join",
      "made_by",
      "as",
      "t4",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t4",
      ".",
      "msid",
      "join",
      "producer",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "pid",
      "=",
      "t4",
      ".",
      "pid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find the producers of all movies in which \" Kate Winslet \" is an actor",
    "question_toks": [
      "Find",
      "the",
      "producers",
      "of",
      "all",
      "movies",
      "in",
      "which",
      "``",
      "Kate",
      "Winslet",
      "``",
      "is",
      "an",
      "actor"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Kate Winslet\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.name FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN tv_series AS t3 ON t3.sid  =  t1.msid WHERE t3.release_year  =  2013 AND t3.title  =  \"House of Cards\";",
    "query_toks": [
      "SELECT",
      "t2.name",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "tv_series",
      "AS",
      "t3",
      "ON",
      "t3.sid",
      "=",
      "t1.msid",
      "WHERE",
      "t3.release_year",
      "=",
      "2013",
      "AND",
      "t3.title",
      "=",
      "``",
      "House",
      "of",
      "Cards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "name",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "tv_series",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "sid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "release_year",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Who is the director of the tv series \" House of Cards \" from 2013 ?",
    "question_toks": [
      "Who",
      "is",
      "the",
      "director",
      "of",
      "the",
      "tv",
      "series",
      "``",
      "House",
      "of",
      "Cards",
      "``",
      "from",
      "2013",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              52,
              false
            ],
            null
          ],
          2013.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              51,
              false
            ],
            null
          ],
          "\"House of Cards\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_city  =  \"Austin\" AND gender  =  \"female\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "Austin",
      "''",
      "AND",
      "gender",
      "=",
      "``",
      "female",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value",
      "and",
      "gender",
      "=",
      "value"
    ],
    "question": "Find all the female actors from Austin",
    "question_toks": [
      "Find",
      "all",
      "the",
      "female",
      "actors",
      "from",
      "Austin"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Austin\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_year  >  1980 AND nationality  =  \"Italy\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_year",
      ">",
      "1980",
      "AND",
      "nationality",
      "=",
      "``",
      "Italy",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_year",
      ">",
      "value",
      "and",
      "nationality",
      "=",
      "value"
    ],
    "question": "Find all actors from Italy born after 1980",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "from",
      "Italy",
      "born",
      "after",
      "1980"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1980.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Italy\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  >  1980 AND gender  =  \"female\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "New",
      "York",
      "City",
      "''",
      "AND",
      "birth_year",
      ">",
      "1980",
      "AND",
      "gender",
      "=",
      "``",
      "female",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value",
      "and",
      "birth_year",
      ">",
      "value",
      "and",
      "gender",
      "=",
      "value"
    ],
    "question": "Find all the female actors born in \" New York City \" after 1980",
    "question_toks": [
      "Find",
      "all",
      "the",
      "female",
      "actors",
      "born",
      "in",
      "``",
      "New",
      "York",
      "City",
      "``",
      "after",
      "1980"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"New York City\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1980.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.gender  =  \"female\" AND t3.title  =  \"Saving Private Ryan\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t1.gender",
      "=",
      "``",
      "female",
      "''",
      "AND",
      "t3.title",
      "=",
      "``",
      "Saving",
      "Private",
      "Ryan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "gender",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Find all the female actors in the movie \" Saving Private Ryan \"",
    "question_toks": [
      "Find",
      "all",
      "the",
      "female",
      "actors",
      "in",
      "the",
      "movie",
      "``",
      "Saving",
      "Private",
      "Ryan",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Saving Private Ryan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT name FROM director WHERE nationality  =  \"Afghanistan\";",
    "query_toks": [
      "SELECT",
      "name",
      "FROM",
      "director",
      "WHERE",
      "nationality",
      "=",
      "``",
      "Afghanistan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "name",
      "from",
      "director",
      "where",
      "nationality",
      "=",
      "value"
    ],
    "question": "Find all the directors who are from Afghanistan",
    "question_toks": [
      "Find",
      "all",
      "the",
      "directors",
      "who",
      "are",
      "from",
      "Afghanistan"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            6
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              25,
              false
            ],
            null
          ],
          "\"Afghanistan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Camp X-Ray\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "Camp",
      "X-Ray",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Find the actors who played in the movie \" Camp X-Ray \"",
    "question_toks": [
      "Find",
      "the",
      "actors",
      "who",
      "played",
      "in",
      "the",
      "movie",
      "``",
      "Camp",
      "X-Ray",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Camp X-Ray\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"Canada\" AND t3.title  =  \"James Bond\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t1.nationality",
      "=",
      "``",
      "Canada",
      "''",
      "AND",
      "t3.title",
      "=",
      "``",
      "James",
      "Bond",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "nationality",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "Find all actors from Canada who acted in \" James Bond \" movies",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "from",
      "Canada",
      "who",
      "acted",
      "in",
      "``",
      "James",
      "Bond",
      "``",
      "movies"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Canada\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"James Bond\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Rowan Atkinson\" AND t3.role  =  \"Mr. Bean\";",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Rowan",
      "Atkinson",
      "''",
      "AND",
      "t3.role",
      "=",
      "``",
      "Mr.",
      "Bean",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "role",
      "=",
      "value"
    ],
    "question": "find all films in which \" Rowan Atkinson \" acted as \" Mr. Bean \"",
    "question_toks": [
      "find",
      "all",
      "films",
      "in",
      "which",
      "``",
      "Rowan",
      "Atkinson",
      "``",
      "acted",
      "as",
      "``",
      "Mr.",
      "Bean",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Rowan Atkinson\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Mr. Bean\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.birth_city FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t3.title  =  \"The Past\";",
    "query_toks": [
      "SELECT",
      "t2.birth_city",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "The",
      "Past",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "birth_city",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "where is the director of \" The Past \" from",
    "question_toks": [
      "where",
      "is",
      "the",
      "director",
      "of",
      "``",
      "The",
      "Past",
      "``",
      "from"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                26,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"The Past\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid WHERE t2.role  =  \"Mr. Bean\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "WHERE",
      "t2.role",
      "=",
      "``",
      "Mr.",
      "Bean",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "role",
      "=",
      "value"
    ],
    "question": "who acted the role of \" Mr. Bean \"",
    "question_toks": [
      "who",
      "acted",
      "the",
      "role",
      "of",
      "``",
      "Mr.",
      "Bean",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Mr. Bean\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.genre FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN classification AS t1 ON t4.mid  =  t1.msid JOIN genre AS t3 ON t3.gid  =  t1.gid WHERE t5.name  =  \"Asghar Farhadi\";",
    "query_toks": [
      "SELECT",
      "t3.genre",
      "FROM",
      "director",
      "AS",
      "t5",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t5.did",
      "=",
      "t2.did",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t2.msid",
      "JOIN",
      "classification",
      "AS",
      "t1",
      "ON",
      "t4.mid",
      "=",
      "t1.msid",
      "JOIN",
      "genre",
      "AS",
      "t3",
      "ON",
      "t3.gid",
      "=",
      "t1.gid",
      "WHERE",
      "t5.name",
      "=",
      "``",
      "Asghar",
      "Farhadi",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "genre",
      "from",
      "director",
      "as",
      "t5",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t5",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "classification",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "join",
      "genre",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "gid",
      "=",
      "t1",
      ".",
      "gid",
      "where",
      "t5",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "what are the genres of movies directed by \" Asghar Farhadi \"",
    "question_toks": [
      "what",
      "are",
      "the",
      "genres",
      "of",
      "movies",
      "directed",
      "by",
      "``",
      "Asghar",
      "Farhadi",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                15,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Asghar Farhadi\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.title FROM movie AS t1 JOIN CAST AS t2 ON t1.mid  =  t2.msid WHERE t2.role  =  \"Daffy Duck\";",
    "query_toks": [
      "SELECT",
      "t1.title",
      "FROM",
      "movie",
      "AS",
      "t1",
      "JOIN",
      "CAST",
      "AS",
      "t2",
      "ON",
      "t1.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t2.role",
      "=",
      "``",
      "Daffy",
      "Duck",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "title",
      "from",
      "movie",
      "as",
      "t1",
      "join",
      "cast",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "role",
      "=",
      "value"
    ],
    "question": "Which movie had the character \" Daffy Duck \"",
    "question_toks": [
      "Which",
      "movie",
      "had",
      "the",
      "character",
      "``",
      "Daffy",
      "Duck",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                42,
                false
              ],
              null
            ],
            [
              0,
              11,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            11
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              13,
              false
            ],
            null
          ],
          "\"Daffy Duck\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.role FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Daddy Long Legs\";",
    "query_toks": [
      "SELECT",
      "t2.role",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "Daddy",
      "Long",
      "Legs",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "role",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "What are the major roles in the movie \" Daddy Long Legs \"",
    "question_toks": [
      "What",
      "are",
      "the",
      "major",
      "roles",
      "in",
      "the",
      "movie",
      "``",
      "Daddy",
      "Long",
      "Legs",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                13,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Daddy Long Legs\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN tags AS t5 ON t5.msid  =  t4.mid JOIN keyword AS t1 ON t5.kid  =  t1.id WHERE t1.keyword  =  \"nuclear weapons\";",
    "query_toks": [
      "SELECT",
      "t3.name",
      "FROM",
      "director",
      "AS",
      "t3",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t2.msid",
      "JOIN",
      "tags",
      "AS",
      "t5",
      "ON",
      "t5.msid",
      "=",
      "t4.mid",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t5.kid",
      "=",
      "t1.id",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "nuclear",
      "weapons",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "name",
      "from",
      "director",
      "as",
      "t3",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "tags",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "msid",
      "=",
      "t4",
      ".",
      "mid",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "id",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value"
    ],
    "question": "List all the directors of movies about nuclear weapons",
    "question_toks": [
      "List",
      "all",
      "the",
      "directors",
      "of",
      "movies",
      "about",
      "nuclear",
      "weapons"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                24,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"nuclear weapons\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Jennifer Aniston\" AND t2.release_year  >  2010;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Jennifer",
      "Aniston",
      "''",
      "AND",
      "t2.release_year",
      ">",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "release_year",
      ">",
      "value"
    ],
    "question": "What is the number of movies in which \" Jennifer Aniston \" acted after 2010 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "movies",
      "in",
      "which",
      "``",
      "Jennifer",
      "Aniston",
      "``",
      "acted",
      "after",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Jennifer Aniston\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Saving Private Ryan\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "Saving",
      "Private",
      "Ryan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "What is the number of actors in the movie \" Saving Private Ryan \" ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "actors",
      "in",
      "the",
      "movie",
      "``",
      "Saving",
      "Private",
      "Ryan",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Saving Private Ryan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t3.title  =  \"Saving Private Ryan\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t3.title",
      "=",
      "``",
      "Saving",
      "Private",
      "Ryan",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "How many actors are in the movie \" Saving Private Ryan \" ?",
    "question_toks": [
      "How",
      "many",
      "actors",
      "are",
      "in",
      "the",
      "movie",
      "``",
      "Saving",
      "Private",
      "Ryan",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Saving Private Ryan\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Steven Spielberg\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Steven",
      "Spielberg",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many movies did \" Steven Spielberg \" direct ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "did",
      "``",
      "Steven",
      "Spielberg",
      "``",
      "direct",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Steven Spielberg\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "title",
      ")",
      "FROM",
      "movie",
      "WHERE",
      "release_year",
      "=",
      "2013",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "title",
      ")",
      "from",
      "movie",
      "where",
      "release_year",
      "=",
      "value"
    ],
    "question": "How many movies were produced in the year 2013 ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "were",
      "produced",
      "in",
      "the",
      "year",
      "2013",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT title  ) FROM movie WHERE release_year  =  2013;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "title",
      ")",
      "FROM",
      "movie",
      "WHERE",
      "release_year",
      "=",
      "2013",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "title",
      ")",
      "from",
      "movie",
      "where",
      "release_year",
      "=",
      "value"
    ],
    "question": "What is the number of movies produced in 2013 ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "movies",
      "produced",
      "in",
      "2013",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            11
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2013.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t3.title  )  ,  t3.release_year FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Woody Allen\" GROUP BY t3.release_year;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      ",",
      "t3.release_year",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Woody",
      "Allen",
      "''",
      "GROUP",
      "BY",
      "t3.release_year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      ",",
      "t3",
      ".",
      "release_year",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t3",
      ".",
      "release_year"
    ],
    "question": "What is the number of movies directed by \" Woody Allen \" per year ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "movies",
      "directed",
      "by",
      "``",
      "Woody",
      "Allen",
      "``",
      "per",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [
        [
          0,
          44,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Woody Allen\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Shahab",
      "Hosseini",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many movies did \" Shahab Hosseini \" act in ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "did",
      "``",
      "Shahab",
      "Hosseini",
      "``",
      "act",
      "in",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Shahab Hosseini\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Shahab",
      "Hosseini",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What is the number of movies in which \" Shahab Hosseini \" acted ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "movies",
      "in",
      "which",
      "``",
      "Shahab",
      "Hosseini",
      "``",
      "acted",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Shahab Hosseini\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Shahab",
      "Hosseini",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "What is the number of movies featuring \" Shahab Hosseini \" ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "movies",
      "featuring",
      "``",
      "Shahab",
      "Hosseini",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Shahab Hosseini\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Shahab Hosseini\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Shahab",
      "Hosseini",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "How many movies did \" Shahab Hosseini \" act in",
    "question_toks": [
      "How",
      "many",
      "movies",
      "did",
      "``",
      "Shahab",
      "Hosseini",
      "``",
      "act",
      "in"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Shahab Hosseini\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"Los Angeles\" AND birth_year  >  2000;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "Los",
      "Angeles",
      "''",
      "AND",
      "birth_year",
      ">",
      "2000",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value",
      "and",
      "birth_year",
      ">",
      "value"
    ],
    "question": "How many actors were born in \" Los Angeles \" after 2000 ?",
    "question_toks": [
      "How",
      "many",
      "actors",
      "were",
      "born",
      "in",
      "``",
      "Los",
      "Angeles",
      "``",
      "after",
      "2000",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"Los Angeles\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          2000.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t2.title  ) FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Humphrey Bogart\" AND t2.release_year  <  1942;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Humphrey",
      "Bogart",
      "''",
      "AND",
      "t2.release_year",
      "<",
      "1942",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "release_year",
      "<",
      "value"
    ],
    "question": "How many movies did \" Humphrey Bogart \" act in before 1942 ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "did",
      "``",
      "Humphrey",
      "Bogart",
      "``",
      "act",
      "in",
      "before",
      "1942",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Humphrey Bogart\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          1942.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t2.title  )  ,  t2.release_year FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.name  =  \"Brad Pitt\" GROUP BY t2.release_year;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.title",
      ")",
      ",",
      "t2.release_year",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Brad",
      "Pitt",
      "''",
      "GROUP",
      "BY",
      "t2.release_year",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "title",
      ")",
      ",",
      "t2",
      ".",
      "release_year",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "release_year"
    ],
    "question": "What is the number of movies that \" Brad Pitt \" acts in per year ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "number",
      "of",
      "movies",
      "that",
      "``",
      "Brad",
      "Pitt",
      "``",
      "acts",
      "in",
      "per",
      "year",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          44,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                44,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Brad Pitt\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Iraq war\" AND t3.release_year  =  2015;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "FROM",
      "tags",
      "AS",
      "t2",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t2.kid",
      "=",
      "t1.id",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t2.msid",
      "=",
      "t3.mid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Iraq",
      "war",
      "''",
      "AND",
      "t3.release_year",
      "=",
      "2015",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "from",
      "tags",
      "as",
      "t2",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "id",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "msid",
      "=",
      "t3",
      ".",
      "mid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "release_year",
      "=",
      "value"
    ],
    "question": "How many movies about Iraq war were produced in 2015 ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "about",
      "Iraq",
      "war",
      "were",
      "produced",
      "in",
      "2015",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ],
            [
              0,
              37,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Iraq war\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2015.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM tags AS t2 JOIN keyword AS t1 ON t2.kid  =  t1.id JOIN movie AS t3 ON t2.msid  =  t3.mid WHERE t1.keyword  =  \"Persians\" AND t3.release_year  >  1990;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "FROM",
      "tags",
      "AS",
      "t2",
      "JOIN",
      "keyword",
      "AS",
      "t1",
      "ON",
      "t2.kid",
      "=",
      "t1.id",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t2.msid",
      "=",
      "t3.mid",
      "WHERE",
      "t1.keyword",
      "=",
      "``",
      "Persians",
      "''",
      "AND",
      "t3.release_year",
      ">",
      "1990",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "from",
      "tags",
      "as",
      "t2",
      "join",
      "keyword",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "kid",
      "=",
      "t1",
      ".",
      "id",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t2",
      ".",
      "msid",
      "=",
      "t3",
      ".",
      "mid",
      "where",
      "t1",
      ".",
      "keyword",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "release_year",
      ">",
      "value"
    ],
    "question": "How many movies about Persians were released after 1990 ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "about",
      "Persians",
      "were",
      "released",
      "after",
      "1990",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                49,
                false
              ],
              null
            ],
            [
              0,
              37,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            12
          ],
          [
            "table_unit",
            9
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              38,
              false
            ],
            null
          ],
          "\"Persians\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          1990.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  >  2010;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Quentin",
      "Tarantino",
      "''",
      "AND",
      "t3.release_year",
      ">",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "release_year",
      ">",
      "value"
    ],
    "question": "How many movies did \" Quentin Tarantino \" direct after 2010 ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "did",
      "``",
      "Quentin",
      "Tarantino",
      "``",
      "direct",
      "after",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Quentin Tarantino\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t3.title  ) FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" AND t3.release_year  <  2010;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.title",
      ")",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Quentin",
      "Tarantino",
      "''",
      "AND",
      "t3.release_year",
      "<",
      "2010",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "title",
      ")",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "release_year",
      "<",
      "value"
    ],
    "question": "How many movies did \" Quentin Tarantino \" direct before 2010 ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "did",
      "``",
      "Quentin",
      "Tarantino",
      "``",
      "direct",
      "before",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Quentin Tarantino\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2010.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t4.title  ) FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid WHERE t3.name  =  \"Quentin Tarantino\" AND t4.release_year  <  2010 AND t4.release_year  >  2002;",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t4.title",
      ")",
      "FROM",
      "director",
      "AS",
      "t3",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t2.msid",
      "JOIN",
      "made_by",
      "AS",
      "t5",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "producer",
      "AS",
      "t1",
      "ON",
      "t1.pid",
      "=",
      "t5.pid",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Quentin",
      "Tarantino",
      "''",
      "AND",
      "t4.release_year",
      "<",
      "2010",
      "AND",
      "t4.release_year",
      ">",
      "2002",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t4",
      ".",
      "title",
      ")",
      "from",
      "director",
      "as",
      "t3",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "made_by",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "producer",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t4",
      ".",
      "release_year",
      "<",
      "value",
      "and",
      "t4",
      ".",
      "release_year",
      ">",
      "value"
    ],
    "question": "How many movies did \" Quentin Tarantino \" direct before 2002 and after 2010 ?",
    "question_toks": [
      "How",
      "many",
      "movies",
      "did",
      "``",
      "Quentin",
      "Tarantino",
      "``",
      "direct",
      "before",
      "2002",
      "and",
      "after",
      "2010",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                43,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Quentin Tarantino\"",
          null
        ],
        "and",
        [
          false,
          4,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2010.0,
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ],
          2002.0,
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT name  ) FROM actor WHERE birth_city  =  \"New York City\" AND birth_year  >  1980 AND gender  =  \"female\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "name",
      ")",
      "FROM",
      "actor",
      "WHERE",
      "birth_city",
      "=",
      "``",
      "New",
      "York",
      "City",
      "''",
      "AND",
      "birth_year",
      ">",
      "1980",
      "AND",
      "gender",
      "=",
      "``",
      "female",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "name",
      ")",
      "from",
      "actor",
      "where",
      "birth_city",
      "=",
      "value",
      "and",
      "birth_year",
      ">",
      "value",
      "and",
      "gender",
      "=",
      "value"
    ],
    "question": "How many female actors were born in \" New York City \" after 1980 ?",
    "question_toks": [
      "How",
      "many",
      "female",
      "actors",
      "were",
      "born",
      "in",
      "``",
      "New",
      "York",
      "City",
      "``",
      "after",
      "1980",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [],
        "table_units": [
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"New York City\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          1980.0,
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"female\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t1.nationality  =  \"Iran\" AND t3.name  =  \"Jim Jarmusch\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t4",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t5",
      "ON",
      "t5.mid",
      "=",
      "t4.msid",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t5.mid",
      "=",
      "t2.msid",
      "JOIN",
      "director",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "WHERE",
      "t1.nationality",
      "=",
      "``",
      "Iran",
      "''",
      "AND",
      "t3.name",
      "=",
      "``",
      "Jim",
      "Jarmusch",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "cast",
      "as",
      "t4",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t4",
      ".",
      "msid",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "director",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "where",
      "t1",
      ".",
      "nationality",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "find the number of actors from Iran who played in \" Jim Jarmusch \" movies",
    "question_toks": [
      "find",
      "the",
      "number",
      "of",
      "actors",
      "from",
      "Iran",
      "who",
      "played",
      "in",
      "``",
      "Jim",
      "Jarmusch",
      "``",
      "movies"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"Iran\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Jim Jarmusch\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT COUNT ( DISTINCT t1.name  ) FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.nationality  =  \"China\" AND t3.title  =  \"Rush Hour 3\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t1.nationality",
      "=",
      "``",
      "China",
      "''",
      "AND",
      "t3.title",
      "=",
      "``",
      "Rush",
      "Hour",
      "3",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "nationality",
      "=",
      "value",
      "and",
      "t3",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "How many actors from China have acted in \" Rush Hour 3 \"",
    "question_toks": [
      "How",
      "many",
      "actors",
      "from",
      "China",
      "have",
      "acted",
      "in",
      "``",
      "Rush",
      "Hour",
      "3",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                3,
                true
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Rush Hour 3\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "CAST",
      "AS",
      "t5",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "CAST",
      "AS",
      "t3",
      "ON",
      "t4.mid",
      "=",
      "t3.msid",
      "JOIN",
      "actor",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Woody",
      "Strode",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "Jason",
      "Robards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t5",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "cast",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "join",
      "actor",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all movies that star both \" Woody Strode \" and \" Jason Robards \"",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "that",
      "star",
      "both",
      "``",
      "Woody",
      "Strode",
      "``",
      "and",
      "``",
      "Jason",
      "Robards",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Woody Strode\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Jason Robards\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "CAST",
      "AS",
      "t5",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "CAST",
      "AS",
      "t3",
      "ON",
      "t4.mid",
      "=",
      "t3.msid",
      "JOIN",
      "actor",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Woody",
      "Strode",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "Jason",
      "Robards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t5",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "cast",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "join",
      "actor",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all movies featuring \" Woody Strode \" and \" Jason Robards \"",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "featuring",
      "``",
      "Woody",
      "Strode",
      "``",
      "and",
      "``",
      "Jason",
      "Robards",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Woody Strode\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Jason Robards\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "CAST",
      "AS",
      "t5",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "CAST",
      "AS",
      "t3",
      "ON",
      "t4.mid",
      "=",
      "t3.msid",
      "JOIN",
      "actor",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Woody",
      "Strode",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "Jason",
      "Robards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t5",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "cast",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "join",
      "actor",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all movies featuring both \" Woody Strode \" and \" Jason Robards \"",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "featuring",
      "both",
      "``",
      "Woody",
      "Strode",
      "``",
      "and",
      "``",
      "Jason",
      "Robards",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Woody Strode\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Jason Robards\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t4.title FROM CAST AS t5 JOIN actor AS t1 ON t5.aid  =  t1.aid JOIN movie AS t4 ON t4.mid  =  t5.msid JOIN CAST AS t3 ON t4.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t1.name  =  \"Woody Strode\" AND t2.name  =  \"Jason Robards\";",
    "query_toks": [
      "SELECT",
      "t4.title",
      "FROM",
      "CAST",
      "AS",
      "t5",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t5.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "CAST",
      "AS",
      "t3",
      "ON",
      "t4.mid",
      "=",
      "t3.msid",
      "JOIN",
      "actor",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Woody",
      "Strode",
      "''",
      "AND",
      "t2.name",
      "=",
      "``",
      "Jason",
      "Robards",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t4",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t5",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "cast",
      "as",
      "t3",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "join",
      "actor",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all movies featuring \" Jason Robards \" and \" Woody Strode \"",
    "question_toks": [
      "Find",
      "all",
      "movies",
      "featuring",
      "``",
      "Jason",
      "Robards",
      "``",
      "and",
      "``",
      "Woody",
      "Strode",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Woody Strode\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Jason Robards\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN CAST AS t3 ON t5.mid  =  t3.msid JOIN actor AS t2 ON t3.aid  =  t2.aid WHERE t2.name  =  \"Tom Hanks\";",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t4",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t5",
      "ON",
      "t5.mid",
      "=",
      "t4.msid",
      "JOIN",
      "CAST",
      "AS",
      "t3",
      "ON",
      "t5.mid",
      "=",
      "t3.msid",
      "JOIN",
      "actor",
      "AS",
      "t2",
      "ON",
      "t3.aid",
      "=",
      "t2.aid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Tom",
      "Hanks",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t4",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t4",
      ".",
      "msid",
      "join",
      "cast",
      "as",
      "t3",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "join",
      "actor",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t2",
      ".",
      "aid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "Find all actors who acted in the same movie as \" Tom Hanks \"",
    "question_toks": [
      "Find",
      "all",
      "actors",
      "who",
      "acted",
      "in",
      "the",
      "same",
      "movie",
      "as",
      "``",
      "Tom",
      "Hanks",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Tom Hanks\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM director AS t5 JOIN directed_by AS t2 ON t5.did  =  t2.did JOIN directed_by AS t1 ON t5.did  =  t1.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t4.title  =  \"Revolutionary Road\";",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "director",
      "AS",
      "t5",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t5.did",
      "=",
      "t2.did",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t5.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t2.msid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t4.title",
      "=",
      "``",
      "Revolutionary",
      "Road",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "director",
      "as",
      "t5",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t5",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t5",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t4",
      ".",
      "title",
      "=",
      "value"
    ],
    "question": "What movies have the same director as the movie \" Revolutionary Road \" ?",
    "question_toks": [
      "What",
      "movies",
      "have",
      "the",
      "same",
      "director",
      "as",
      "the",
      "movie",
      "``",
      "Revolutionary",
      "Road",
      "``",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              43,
              false
            ],
            null
          ],
          "\"Revolutionary Road\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM genre AS t2 JOIN classification AS t1 ON t2.gid  =  t1.gid JOIN movie AS t3 ON t3.mid  =  t1.msid GROUP BY t3.title ORDER BY COUNT ( DISTINCT t2.genre  ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "genre",
      "AS",
      "t2",
      "JOIN",
      "classification",
      "AS",
      "t1",
      "ON",
      "t2.gid",
      "=",
      "t1.gid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "GROUP",
      "BY",
      "t3.title",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t2.genre",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "genre",
      "as",
      "t2",
      "join",
      "classification",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "gid",
      "=",
      "t1",
      ".",
      "gid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "group",
      "by",
      "t3",
      ".",
      "title",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t2",
      ".",
      "genre",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the movie which is classified in the most number of genres",
    "question_toks": [
      "Find",
      "the",
      "movie",
      "which",
      "is",
      "classified",
      "in",
      "the",
      "most",
      "number",
      "of",
      "genres"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                14,
                false
              ],
              null
            ],
            [
              0,
              18,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            3
          ],
          [
            "table_unit",
            4
          ]
        ]
      },
      "groupBy": [
        [
          0,
          43,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              15,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t2.title FROM CAST AS t3 JOIN actor AS t1 ON t3.aid  =  t1.aid JOIN movie AS t2 ON t2.mid  =  t3.msid WHERE t1.nationality  =  \"China\" GROUP BY t2.title ORDER BY COUNT ( DISTINCT t1.name  ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t2.title",
      "FROM",
      "CAST",
      "AS",
      "t3",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t3.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t2",
      "ON",
      "t2.mid",
      "=",
      "t3.msid",
      "WHERE",
      "t1.nationality",
      "=",
      "``",
      "China",
      "''",
      "GROUP",
      "BY",
      "t2.title",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t1.name",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "title",
      "from",
      "cast",
      "as",
      "t3",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t3",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t2",
      "on",
      "t2",
      ".",
      "mid",
      "=",
      "t3",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "nationality",
      "=",
      "value",
      "group",
      "by",
      "t2",
      ".",
      "title",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t1",
      ".",
      "name",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "which movie has the most number of actors from China ?",
    "question_toks": [
      "which",
      "movie",
      "has",
      "the",
      "most",
      "number",
      "of",
      "actors",
      "from",
      "China",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [
        [
          0,
          43,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              3,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              4,
              false
            ],
            null
          ],
          "\"China\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t4 JOIN actor AS t1 ON t4.aid  =  t1.aid JOIN movie AS t5 ON t5.mid  =  t4.msid JOIN directed_by AS t2 ON t5.mid  =  t2.msid JOIN director AS t3 ON t3.did  =  t2.did WHERE t3.name  =  \"Quentin Tarantino\" ORDER BY t5.release_year DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t4",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t4.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t5",
      "ON",
      "t5.mid",
      "=",
      "t4.msid",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t5.mid",
      "=",
      "t2.msid",
      "JOIN",
      "director",
      "AS",
      "t3",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "WHERE",
      "t3.name",
      "=",
      "``",
      "Quentin",
      "Tarantino",
      "''",
      "ORDER",
      "BY",
      "t5.release_year",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t4",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t4",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t5",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t4",
      ".",
      "msid",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t5",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "director",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "where",
      "t3",
      ".",
      "name",
      "=",
      "value",
      "order",
      "by",
      "t5",
      ".",
      "release_year",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the actors who played in the latest movie by \" Quentin Tarantino \"",
    "question_toks": [
      "Find",
      "the",
      "actors",
      "who",
      "played",
      "in",
      "the",
      "latest",
      "movie",
      "by",
      "``",
      "Quentin",
      "Tarantino",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Quentin Tarantino\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.budget  ,  t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Quentin Tarantino\" ORDER BY t3.release_year DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t3.budget",
      ",",
      "t3.title",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Quentin",
      "Tarantino",
      "''",
      "ORDER",
      "BY",
      "t3.release_year",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "budget",
      ",",
      "t3",
      ".",
      "title",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "release_year",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the name and budget of the latest movie by \" Quentin Tarantino \"",
    "question_toks": [
      "Find",
      "the",
      "name",
      "and",
      "budget",
      "of",
      "the",
      "latest",
      "movie",
      "by",
      "``",
      "Quentin",
      "Tarantino",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                46,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Quentin Tarantino\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t3.title FROM director AS t2 JOIN directed_by AS t1 ON t2.did  =  t1.did JOIN movie AS t3 ON t3.mid  =  t1.msid WHERE t2.name  =  \"Jim Jarmusch\" ORDER BY t3.release_year DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t3.title",
      "FROM",
      "director",
      "AS",
      "t2",
      "JOIN",
      "directed_by",
      "AS",
      "t1",
      "ON",
      "t2.did",
      "=",
      "t1.did",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t1.msid",
      "WHERE",
      "t2.name",
      "=",
      "``",
      "Jim",
      "Jarmusch",
      "''",
      "ORDER",
      "BY",
      "t3.release_year",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "title",
      "from",
      "director",
      "as",
      "t2",
      "join",
      "directed_by",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "did",
      "=",
      "t1",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t1",
      ".",
      "msid",
      "where",
      "t2",
      ".",
      "name",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "release_year",
      "desc",
      "limit",
      "value"
    ],
    "question": "What is the latest movie by \" Jim Jarmusch \"",
    "question_toks": [
      "What",
      "is",
      "the",
      "latest",
      "movie",
      "by",
      "``",
      "Jim",
      "Jarmusch",
      "``"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                43,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              24,
              false
            ],
            null
          ],
          "\"Jim Jarmusch\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM director AS t3 JOIN directed_by AS t2 ON t3.did  =  t2.did JOIN movie AS t4 ON t4.mid  =  t2.msid JOIN made_by AS t5 ON t4.mid  =  t5.msid JOIN producer AS t1 ON t1.pid  =  t5.pid GROUP BY t1.name ORDER BY COUNT ( DISTINCT t3.name  ) DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "director",
      "AS",
      "t3",
      "JOIN",
      "directed_by",
      "AS",
      "t2",
      "ON",
      "t3.did",
      "=",
      "t2.did",
      "JOIN",
      "movie",
      "AS",
      "t4",
      "ON",
      "t4.mid",
      "=",
      "t2.msid",
      "JOIN",
      "made_by",
      "AS",
      "t5",
      "ON",
      "t4.mid",
      "=",
      "t5.msid",
      "JOIN",
      "producer",
      "AS",
      "t1",
      "ON",
      "t1.pid",
      "=",
      "t5.pid",
      "GROUP",
      "BY",
      "t1.name",
      "ORDER",
      "BY",
      "COUNT",
      "(",
      "DISTINCT",
      "t3.name",
      ")",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "director",
      "as",
      "t3",
      "join",
      "directed_by",
      "as",
      "t2",
      "on",
      "t3",
      ".",
      "did",
      "=",
      "t2",
      ".",
      "did",
      "join",
      "movie",
      "as",
      "t4",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "join",
      "made_by",
      "as",
      "t5",
      "on",
      "t4",
      ".",
      "mid",
      "=",
      "t5",
      ".",
      "msid",
      "join",
      "producer",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "pid",
      "=",
      "t5",
      ".",
      "pid",
      "group",
      "by",
      "t1",
      ".",
      "name",
      "order",
      "by",
      "count",
      "(",
      "distinct",
      "t3",
      ".",
      "name",
      ")",
      "desc",
      "limit",
      "value"
    ],
    "question": "Which producer has worked with the most number of directors ?",
    "question_toks": [
      "Which",
      "producer",
      "has",
      "worked",
      "with",
      "the",
      "most",
      "number",
      "of",
      "directors",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                22,
                false
              ],
              null
            ],
            [
              0,
              36,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            6
          ],
          [
            "table_unit",
            8
          ]
        ]
      },
      "groupBy": [
        [
          0,
          30,
          false
        ]
      ],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              3,
              24,
              true
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                30,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": []
    }
  },
  {
    "db_id": "imdb",
    "query": "SELECT t1.name FROM CAST AS t2 JOIN actor AS t1 ON t2.aid  =  t1.aid JOIN movie AS t3 ON t3.mid  =  t2.msid WHERE t1.name  =  \"Gabriele Ferzetti\" ORDER BY t3.release_year DESC LIMIT 1;",
    "query_toks": [
      "SELECT",
      "t1.name",
      "FROM",
      "CAST",
      "AS",
      "t2",
      "JOIN",
      "actor",
      "AS",
      "t1",
      "ON",
      "t2.aid",
      "=",
      "t1.aid",
      "JOIN",
      "movie",
      "AS",
      "t3",
      "ON",
      "t3.mid",
      "=",
      "t2.msid",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "Gabriele",
      "Ferzetti",
      "''",
      "ORDER",
      "BY",
      "t3.release_year",
      "DESC",
      "LIMIT",
      "1",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t1",
      ".",
      "name",
      "from",
      "cast",
      "as",
      "t2",
      "join",
      "actor",
      "as",
      "t1",
      "on",
      "t2",
      ".",
      "aid",
      "=",
      "t1",
      ".",
      "aid",
      "join",
      "movie",
      "as",
      "t3",
      "on",
      "t3",
      ".",
      "mid",
      "=",
      "t2",
      ".",
      "msid",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value",
      "order",
      "by",
      "t3",
      ".",
      "release_year",
      "desc",
      "limit",
      "value"
    ],
    "question": "Find the latest movie which \" Gabriele Ferzetti \" acted in",
    "question_toks": [
      "Find",
      "the",
      "latest",
      "movie",
      "which",
      "``",
      "Gabriele",
      "Ferzetti",
      "``",
      "acted",
      "in"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                12,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": 1,
      "orderBy": [
        "desc",
        [
          [
            0,
            [
              0,
              44,
              false
            ],
            null
          ]
        ]
      ],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                3,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"Gabriele Ferzetti\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"buttercup kitchen\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "buttercup",
      "kitchen",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "how many buttercup kitchen are there in san francisco ?",
    "question_toks": [
      "how",
      "many",
      "buttercup",
      "kitchen",
      "are",
      "there",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"buttercup kitchen\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "chinese",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "how many chinese restaurants are there in the bay area ?",
    "question_toks": [
      "how",
      "many",
      "chinese",
      "restaurants",
      "are",
      "there",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"chinese\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "chinese",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "how many places for chinese food are there in the bay area ?",
    "question_toks": [
      "how",
      "many",
      "places",
      "for",
      "chinese",
      "food",
      "are",
      "there",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"chinese\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "chinese",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "how many chinese places are there in the bay area ?",
    "question_toks": [
      "how",
      "many",
      "chinese",
      "places",
      "are",
      "there",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"chinese\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"chinese\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "chinese",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "how many places for chinese are there in the bay area ?",
    "question_toks": [
      "how",
      "many",
      "places",
      "for",
      "chinese",
      "are",
      "there",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"chinese\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"santa cruz county\" AND t1.name  =  \"jamerican cuisine\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.county",
      "=",
      "``",
      "santa",
      "cruz",
      "county",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "jamerican",
      "cuisine",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "county",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "how many jamerican cuisine are there in santa cruz county ?",
    "question_toks": [
      "how",
      "many",
      "jamerican",
      "cuisine",
      "are",
      "there",
      "in",
      "santa",
      "cruz",
      "county",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"santa cruz county\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"jamerican cuisine\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.name  =  \"jamerican cuisine\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.name",
      "=",
      "``",
      "jamerican",
      "cuisine",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "where is jamerican cuisine ?",
    "question_toks": [
      "where",
      "is",
      "jamerican",
      "cuisine",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"jamerican cuisine\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "what is the best french restaurant in san francisco ?",
    "question_toks": [
      "what",
      "is",
      "the",
      "best",
      "french",
      "restaurant",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "What is the best french in san francisco ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "best",
      "french",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "What is the best place in san francisco for french food ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "best",
      "place",
      "in",
      "san",
      "francisco",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "Give me the best place in san francisco for french food ?",
    "question_toks": [
      "Give",
      "me",
      "the",
      "best",
      "place",
      "in",
      "san",
      "francisco",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "Where is the best french in san francisco ?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "best",
      "french",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "Give me the best french in san francisco ?",
    "question_toks": [
      "Give",
      "me",
      "the",
      "best",
      "french",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "Where is the best french restaurant in san francisco ?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "best",
      "french",
      "restaurant",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "Give me the best restaurant in san francisco for french food ?",
    "question_toks": [
      "Give",
      "me",
      "the",
      "best",
      "restaurant",
      "in",
      "san",
      "francisco",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "Give me the best french restaurant in san francisco ?",
    "question_toks": [
      "Give",
      "me",
      "the",
      "best",
      "french",
      "restaurant",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "What is the best restaurant in san francisco for french food ?",
    "question_toks": [
      "What",
      "is",
      "the",
      "best",
      "restaurant",
      "in",
      "san",
      "francisco",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.food_type  =  \"french\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "Where is the best restaurant in san francisco for french food ?",
    "question_toks": [
      "Where",
      "is",
      "the",
      "best",
      "restaurant",
      "in",
      "san",
      "francisco",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      4,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    9,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  2
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    12,
                    false
                  ],
                  null
                ],
                "\"san francisco\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"french\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "denny",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "where is denny in the bay area ?",
    "question_toks": [
      "where",
      "is",
      "denny",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"denny\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "bethel",
      "island",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "bethel",
      "island",
      "rd",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what are some good restaurants on bethel island rd in bethel island ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "good",
      "restaurants",
      "on",
      "bethel",
      "island",
      "rd",
      "in",
      "bethel",
      "island",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"bethel island\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"bethel island rd\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "bethel",
      "island",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "bethel",
      "island",
      "rd",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good restaurants on bethel island rd in bethel island ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "restaurants",
      "on",
      "bethel",
      "island",
      "rd",
      "in",
      "bethel",
      "island",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"bethel island\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"bethel island rd\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "bethel",
      "island",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "bethel",
      "island",
      "rd",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good restaurant on bethel island rd in bethel island ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "restaurant",
      "on",
      "bethel",
      "island",
      "rd",
      "in",
      "bethel",
      "island",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"bethel island\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"bethel island rd\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "bethel",
      "island",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "bethel",
      "island",
      "rd",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what is a good restaurant on bethel island rd in bethel island ?",
    "question_toks": [
      "what",
      "is",
      "a",
      "good",
      "restaurant",
      "on",
      "bethel",
      "island",
      "rd",
      "in",
      "bethel",
      "island",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"bethel island\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"bethel island rd\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "alameda",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value"
    ],
    "question": "where can we find a restaurant in alameda ?",
    "question_toks": [
      "where",
      "can",
      "we",
      "find",
      "a",
      "restaurant",
      "in",
      "alameda",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"alameda\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "alameda",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value"
    ],
    "question": "give me a restaurant in alameda ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "restaurant",
      "in",
      "alameda",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"alameda\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "alameda",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value"
    ],
    "question": "where can we find some restaurants in alameda ?",
    "question_toks": [
      "where",
      "can",
      "we",
      "find",
      "some",
      "restaurants",
      "in",
      "alameda",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"alameda\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "alameda",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value"
    ],
    "question": "where is a restaurant in alameda ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "restaurant",
      "in",
      "alameda",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"alameda\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "alameda",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value"
    ],
    "question": "give me some restaurants in alameda ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "restaurants",
      "in",
      "alameda",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"alameda\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some restaurants good for french food ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "restaurants",
      "good",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where are some restaurants good for french food ?",
    "question_toks": [
      "where",
      "are",
      "some",
      "restaurants",
      "good",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "palo",
      "alto",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "how many places for french food are there in palo alto ?",
    "question_toks": [
      "how",
      "many",
      "places",
      "for",
      "french",
      "food",
      "are",
      "there",
      "in",
      "palo",
      "alto",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"palo alto\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "palo",
      "alto",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "how many french restaurants are there in palo alto ?",
    "question_toks": [
      "how",
      "many",
      "french",
      "restaurants",
      "are",
      "there",
      "in",
      "palo",
      "alto",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"palo alto\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "palo",
      "alto",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "how many french restaurant are there in palo alto ?",
    "question_toks": [
      "how",
      "many",
      "french",
      "restaurant",
      "are",
      "there",
      "in",
      "palo",
      "alto",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"palo alto\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"palo alto\" AND t1.food_type  =  \"french\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "palo",
      "alto",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "how many places for french are there in palo alto ?",
    "question_toks": [
      "how",
      "many",
      "places",
      "for",
      "french",
      "are",
      "there",
      "in",
      "palo",
      "alto",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"palo alto\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.county  =  \"yolo county\" AND t1.food_type  =  \"italian\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.county",
      "=",
      "``",
      "yolo",
      "county",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "italian",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "county",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "how many italian restaurants are in the yolo county ?",
    "question_toks": [
      "how",
      "many",
      "italian",
      "restaurants",
      "are",
      "in",
      "the",
      "yolo",
      "county",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              2,
              false
            ],
            null
          ],
          "\"yolo county\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"italian\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"french\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "where can i eat french food in mountain view ?",
    "question_toks": [
      "where",
      "can",
      "i",
      "eat",
      "french",
      "food",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT COUNT ( * ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.name  =  \"denny\";",
    "query_toks": [
      "SELECT",
      "COUNT",
      "(",
      "*",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "denny",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "count",
      "(",
      "*",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "how many denny are there in the bay area ?",
    "question_toks": [
      "how",
      "many",
      "denny",
      "are",
      "there",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            3,
            [
              0,
              [
                0,
                0,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"denny\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "alameda",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good restaurant in alameda ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "restaurant",
      "in",
      "alameda",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"alameda\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "alameda",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what are some good restaurants in alameda ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "good",
      "restaurants",
      "in",
      "alameda",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"alameda\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "alameda",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what is a good restaurant in alameda ?",
    "question_toks": [
      "what",
      "is",
      "a",
      "good",
      "restaurant",
      "in",
      "alameda",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"alameda\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"alameda\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "alameda",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good restaurants in alameda ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "restaurants",
      "in",
      "alameda",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"alameda\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good restaurant on buchanan in san francisco for arabic food ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "restaurant",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where are some good arabics on buchanan in san francisco ?",
    "question_toks": [
      "where",
      "are",
      "some",
      "good",
      "arabics",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good arabic restaurant on buchanan in san francisco ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "arabic",
      "restaurant",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what are some good places for arabic on buchanan in san francisco ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "good",
      "places",
      "for",
      "arabic",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good arabic on buchanan in san francisco ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "arabic",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some restaurants good for arabic food on buchanan in san francisco ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "restaurants",
      "good",
      "for",
      "arabic",
      "food",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good place on buchanan in san francisco for arabic food ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "place",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good place on buchanan in san francisco for arabic food ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "place",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where can i eat arabic food on buchanan in san francisco ?",
    "question_toks": [
      "where",
      "can",
      "i",
      "eat",
      "arabic",
      "food",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good places on buchanan in san francisco for arabic food ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "places",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a arabic restaurant on buchanan in san francisco ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "arabic",
      "restaurant",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a restaurant on buchanan in san francisco that serves good arabic food ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "restaurant",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "that",
      "serves",
      "good",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good restaurant on buchanan in san francisco for arabic food ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "restaurant",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a restaurant on buchanan in san francisco that serves good arabic food ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "restaurant",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "that",
      "serves",
      "good",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good restaurants on buchanan in san francisco for arabic food ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "restaurants",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good places for arabic on buchanan in san francisco ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "places",
      "for",
      "arabic",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where can i eat some good arabic food on buchanan in san francisco ?",
    "question_toks": [
      "where",
      "can",
      "i",
      "eat",
      "some",
      "good",
      "arabic",
      "food",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good arabic on buchanan in san francisco ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "arabic",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where are some restaurants good for arabic food on buchanan in san francisco ?",
    "question_toks": [
      "where",
      "are",
      "some",
      "restaurants",
      "good",
      "for",
      "arabic",
      "food",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where are some good places for arabic on buchanan in san francisco ?",
    "question_toks": [
      "where",
      "are",
      "some",
      "good",
      "places",
      "for",
      "arabic",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good arabic restaurant on buchanan in san francisco ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "arabic",
      "restaurant",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t2.street_name  =  \"buchanan\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "buchanan",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good arabics on buchanan in san francisco ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "arabics",
      "on",
      "buchanan",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"buchanan\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"french\";",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value"
    ],
    "question": "where can i eat french food in the bay area ?",
    "question_toks": [
      "where",
      "can",
      "i",
      "eat",
      "french",
      "food",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "bethel",
      "island",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "bethel",
      "island",
      "rd",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value"
    ],
    "question": "give me some restaurants on bethel island rd in bethel island ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "restaurants",
      "on",
      "bethel",
      "island",
      "rd",
      "in",
      "bethel",
      "island",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"bethel island\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"bethel island rd\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "bethel",
      "island",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "bethel",
      "island",
      "rd",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value"
    ],
    "question": "give me a restaurant on bethel island rd in bethel island ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "restaurant",
      "on",
      "bethel",
      "island",
      "rd",
      "in",
      "bethel",
      "island",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"bethel island\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"bethel island rd\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "bethel",
      "island",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "bethel",
      "island",
      "rd",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value"
    ],
    "question": "where can we find a restaurant on bethel island rd in bethel island ?",
    "question_toks": [
      "where",
      "can",
      "we",
      "find",
      "a",
      "restaurant",
      "on",
      "bethel",
      "island",
      "rd",
      "in",
      "bethel",
      "island",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"bethel island\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"bethel island rd\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"bethel island\" AND t2.street_name  =  \"bethel island rd\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "bethel",
      "island",
      "''",
      "AND",
      "t2.street_name",
      "=",
      "``",
      "bethel",
      "island",
      "rd",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t2",
      ".",
      "street_name",
      "=",
      "value"
    ],
    "question": "where can we find some restaurants on bethel island rd in bethel island ?",
    "question_toks": [
      "where",
      "can",
      "we",
      "find",
      "some",
      "restaurants",
      "on",
      "bethel",
      "island",
      "rd",
      "in",
      "bethel",
      "island",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"bethel island\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              11,
              false
            ],
            null
          ],
          "\"bethel island rd\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "where is the best restaurant in the bay area for american food ?",
    "question_toks": [
      "where",
      "is",
      "the",
      "best",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "for",
      "american",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "where is the best restaurant in bay area for american food ?",
    "question_toks": [
      "where",
      "is",
      "the",
      "best",
      "restaurant",
      "in",
      "bay",
      "area",
      "for",
      "american",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "what is the best restaurant in bay area for american food ?",
    "question_toks": [
      "what",
      "is",
      "the",
      "best",
      "restaurant",
      "in",
      "bay",
      "area",
      "for",
      "american",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "what is the best american restaurant in the bay area ?",
    "question_toks": [
      "what",
      "is",
      "the",
      "best",
      "american",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "where is the best american restaurant in the bay area ?",
    "question_toks": [
      "where",
      "is",
      "the",
      "best",
      "american",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "what is the best american in the bay area ?",
    "question_toks": [
      "what",
      "is",
      "the",
      "best",
      "american",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "give me the best restaurant in the bay area for american food ?",
    "question_toks": [
      "give",
      "me",
      "the",
      "best",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "for",
      "american",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "give me the best restaurant in bay area for american food ?",
    "question_toks": [
      "give",
      "me",
      "the",
      "best",
      "restaurant",
      "in",
      "bay",
      "area",
      "for",
      "american",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "what is the best restaurant in the bay area for american food ?",
    "question_toks": [
      "what",
      "is",
      "the",
      "best",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "for",
      "american",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "where is the best american in the bay area ?",
    "question_toks": [
      "where",
      "is",
      "the",
      "best",
      "american",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "give me the best american in the bay area ?",
    "question_toks": [
      "give",
      "me",
      "the",
      "best",
      "american",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" AND t1.rating  =  ( SELECT MAX ( t1.rating ) FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name WHERE t2.region  =  \"bay area\" AND t1.food_type  =  \"american\" );",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      "AND",
      "t1.rating",
      "=",
      "(",
      "SELECT",
      "MAX",
      "(",
      "t1.rating",
      ")",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "american",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      "=",
      "(",
      "select",
      "max",
      "(",
      "t1",
      ".",
      "rating",
      ")",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      ")"
    ],
    "question": "give me the best american restaurant in the bay area ?",
    "question_toks": [
      "give",
      "me",
      "the",
      "best",
      "american",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"bay area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"american\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [
                [
                  false,
                  2,
                  [
                    0,
                    [
                      0,
                      7,
                      false
                    ],
                    null
                  ],
                  [
                    0,
                    1,
                    false
                  ],
                  null
                ]
              ],
              "table_units": [
                [
                  "table_unit",
                  1
                ],
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  1,
                  [
                    0,
                    [
                      0,
                      8,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ],
              "and",
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    6,
                    false
                  ],
                  null
                ],
                "\"american\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some restaurants good for french food in the yosemite and mono lake area ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "restaurants",
      "good",
      "for",
      "french",
      "food",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what are some good places in the yosemite and mono lake area for french food ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "good",
      "places",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good restaurant in the yosemite and mono lake area for french food ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "restaurant",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good french restaurant in the yosemite and mono lake area ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "french",
      "restaurant",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good place in the yosemite and mono lake area for french food ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "place",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where are some restaurants good for french food in the yosemite and mono lake area ?",
    "question_toks": [
      "where",
      "are",
      "some",
      "restaurants",
      "good",
      "for",
      "french",
      "food",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good place in the yosemite and mono lake area for french food ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "place",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good restaurant in the yosemite and mono lake area for french food ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "restaurant",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what are some good restaurants in the yosemite and mono lake area for french food ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "good",
      "restaurants",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "for",
      "french",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good french restaurant in the yosemite and mono lake area ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "french",
      "restaurant",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t3.house_number  ,  t1.name FROM restaurant AS t1 JOIN geographic AS t2 ON t1.city_name  =  t2.city_name JOIN LOCATION AS t3 ON t1.id  =  t3.restaurant_id WHERE t2.region  =  \"yosemite and mono lake area\" AND t1.food_type  =  \"french\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t3.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "geographic",
      "AS",
      "t2",
      "ON",
      "t1.city_name",
      "=",
      "t2.city_name",
      "JOIN",
      "LOCATION",
      "AS",
      "t3",
      "ON",
      "t1.id",
      "=",
      "t3.restaurant_id",
      "WHERE",
      "t2.region",
      "=",
      "``",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "french",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t3",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "geographic",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "city_name",
      "=",
      "t2",
      ".",
      "city_name",
      "join",
      "location",
      "as",
      "t3",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t3",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "region",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where can i eat some good french food in the yosemite and mono lake area ?",
    "question_toks": [
      "where",
      "can",
      "i",
      "eat",
      "some",
      "good",
      "french",
      "food",
      "in",
      "the",
      "yosemite",
      "and",
      "mono",
      "lake",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                7,
                false
              ],
              null
            ],
            [
              0,
              1,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            0
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              3,
              false
            ],
            null
          ],
          "\"yosemite and mono lake area\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"french\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where are some restaurants good for arabic food in mountain view ?",
    "question_toks": [
      "where",
      "are",
      "some",
      "restaurants",
      "good",
      "for",
      "arabic",
      "food",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what are some good places in mountain view for arabic food ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "good",
      "places",
      "in",
      "mountain",
      "view",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where are some good arabic restaurants in mountain view ?",
    "question_toks": [
      "where",
      "are",
      "some",
      "good",
      "arabic",
      "restaurants",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "show me a good arabic restaurant in mountain view ?",
    "question_toks": [
      "show",
      "me",
      "a",
      "good",
      "arabic",
      "restaurant",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good arabic in mountain view ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "arabic",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good arabic restaurant in mountain view ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "arabic",
      "restaurant",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good place in mountain view for arabic food ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "place",
      "in",
      "mountain",
      "view",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where are some good arabics in mountain view ?",
    "question_toks": [
      "where",
      "are",
      "some",
      "good",
      "arabics",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a restaurant in mountain view that serves good arabic food ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "restaurant",
      "in",
      "mountain",
      "view",
      "that",
      "serves",
      "good",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what are some good restaurants in mountain view for arabic food ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "good",
      "restaurants",
      "in",
      "mountain",
      "view",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some restaurants good for arabic food in mountain view ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "restaurants",
      "good",
      "for",
      "arabic",
      "food",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where can i eat some good arabic food in mountain view ?",
    "question_toks": [
      "where",
      "can",
      "i",
      "eat",
      "some",
      "good",
      "arabic",
      "food",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good places for arabic in mountain view ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "places",
      "for",
      "arabic",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good arabic in mountain view ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "arabic",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a restaurant in mountain view that serves good arabic food ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "restaurant",
      "in",
      "mountain",
      "view",
      "that",
      "serves",
      "good",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good arabic restaurants in mountain view ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "arabic",
      "restaurants",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where are some good places for arabic in mountain view ?",
    "question_toks": [
      "where",
      "are",
      "some",
      "good",
      "places",
      "for",
      "arabic",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good arabics in mountain view ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "arabics",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good restaurant in mountain view for arabic food ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "restaurant",
      "in",
      "mountain",
      "view",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good arabic restaurant in mountain view ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "arabic",
      "restaurant",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what are some good places for arabic in mountain view ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "good",
      "places",
      "for",
      "arabic",
      "in",
      "mountain",
      "view",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good restaurant in mountain view for arabic food ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "restaurant",
      "in",
      "mountain",
      "view",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"mountain view\" AND t1.food_type  =  \"arabic\" AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "mountain",
      "view",
      "''",
      "AND",
      "t1.food_type",
      "=",
      "``",
      "arabic",
      "''",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "food_type",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "where is a good place in mountain view for arabic food ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "good",
      "place",
      "in",
      "mountain",
      "view",
      "for",
      "arabic",
      "food",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"mountain view\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              6,
              false
            ],
            null
          ],
          "\"arabic\"",
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "jamerican",
      "cuisine",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "where can i find a jamerican cuisine in san francisco ?",
    "question_toks": [
      "where",
      "can",
      "i",
      "find",
      "a",
      "jamerican",
      "cuisine",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"jamerican cuisine\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "jamerican",
      "cuisine",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "where is jamerican cuisine in san francisco ?",
    "question_toks": [
      "where",
      "is",
      "jamerican",
      "cuisine",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"jamerican cuisine\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM restaurant AS t1 JOIN LOCATION AS t2 ON t1.id  =  t2.restaurant_id WHERE t2.city_name  =  \"san francisco\" AND t1.name  =  \"jamerican cuisine\";",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "restaurant",
      "AS",
      "t1",
      "JOIN",
      "LOCATION",
      "AS",
      "t2",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t2.city_name",
      "=",
      "``",
      "san",
      "francisco",
      "''",
      "AND",
      "t1.name",
      "=",
      "``",
      "jamerican",
      "cuisine",
      "''",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "restaurant",
      "as",
      "t1",
      "join",
      "location",
      "as",
      "t2",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t2",
      ".",
      "city_name",
      "=",
      "value",
      "and",
      "t1",
      ".",
      "name",
      "=",
      "value"
    ],
    "question": "where is a jamerican cuisine in san francisco ?",
    "question_toks": [
      "where",
      "is",
      "a",
      "jamerican",
      "cuisine",
      "in",
      "san",
      "francisco",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            1
          ],
          [
            "table_unit",
            2
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          2,
          [
            0,
            [
              0,
              12,
              false
            ],
            null
          ],
          "\"san francisco\"",
          null
        ],
        "and",
        [
          false,
          2,
          [
            0,
            [
              0,
              5,
              false
            ],
            null
          ],
          "\"jamerican cuisine\"",
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "LOCATION",
      "AS",
      "t2",
      "JOIN",
      "restaurant",
      "AS",
      "t1",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.city_name",
      "IN",
      "(",
      "SELECT",
      "city_name",
      "FROM",
      "geographic",
      "WHERE",
      "region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "location",
      "as",
      "t2",
      "join",
      "restaurant",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "city_name",
      "in",
      "(",
      "select",
      "city_name",
      "from",
      "geographic",
      "where",
      "region",
      "=",
      "value",
      ")"
    ],
    "question": "where can we find some restaurants in the bay area ?",
    "question_toks": [
      "where",
      "can",
      "we",
      "find",
      "some",
      "restaurants",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "LOCATION",
      "AS",
      "t2",
      "JOIN",
      "restaurant",
      "AS",
      "t1",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.city_name",
      "IN",
      "(",
      "SELECT",
      "city_name",
      "FROM",
      "geographic",
      "WHERE",
      "region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "location",
      "as",
      "t2",
      "join",
      "restaurant",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "city_name",
      "in",
      "(",
      "select",
      "city_name",
      "from",
      "geographic",
      "where",
      "region",
      "=",
      "value",
      ")"
    ],
    "question": "give me some restaurants in the bay area ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "restaurants",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "LOCATION",
      "AS",
      "t2",
      "JOIN",
      "restaurant",
      "AS",
      "t1",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.city_name",
      "IN",
      "(",
      "SELECT",
      "city_name",
      "FROM",
      "geographic",
      "WHERE",
      "region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "location",
      "as",
      "t2",
      "join",
      "restaurant",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "city_name",
      "in",
      "(",
      "select",
      "city_name",
      "from",
      "geographic",
      "where",
      "region",
      "=",
      "value",
      ")"
    ],
    "question": "give me a restaurant in the bay area ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"bay area\" );",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "LOCATION",
      "AS",
      "t2",
      "JOIN",
      "restaurant",
      "AS",
      "t1",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.city_name",
      "IN",
      "(",
      "SELECT",
      "city_name",
      "FROM",
      "geographic",
      "WHERE",
      "region",
      "=",
      "``",
      "bay",
      "area",
      "''",
      ")",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "location",
      "as",
      "t2",
      "join",
      "restaurant",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "city_name",
      "in",
      "(",
      "select",
      "city_name",
      "from",
      "geographic",
      "where",
      "region",
      "=",
      "value",
      ")"
    ],
    "question": "where can i find a restaurant in the bay area ?",
    "question_toks": [
      "where",
      "can",
      "i",
      "find",
      "a",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"bay area\"",
                null
              ]
            ]
          },
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "LOCATION",
      "AS",
      "t2",
      "JOIN",
      "restaurant",
      "AS",
      "t1",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.city_name",
      "IN",
      "(",
      "SELECT",
      "city_name",
      "FROM",
      "geographic",
      "WHERE",
      "region",
      "=",
      "``",
      "region0",
      "''",
      ")",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "location",
      "as",
      "t2",
      "join",
      "restaurant",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "city_name",
      "in",
      "(",
      "select",
      "city_name",
      "from",
      "geographic",
      "where",
      "region",
      "=",
      "value",
      ")",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me a good restaurant in the bay area ?",
    "question_toks": [
      "give",
      "me",
      "a",
      "good",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"region0\"",
                null
              ]
            ]
          },
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "LOCATION",
      "AS",
      "t2",
      "JOIN",
      "restaurant",
      "AS",
      "t1",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.city_name",
      "IN",
      "(",
      "SELECT",
      "city_name",
      "FROM",
      "geographic",
      "WHERE",
      "region",
      "=",
      "``",
      "region0",
      "''",
      ")",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "location",
      "as",
      "t2",
      "join",
      "restaurant",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "city_name",
      "in",
      "(",
      "select",
      "city_name",
      "from",
      "geographic",
      "where",
      "region",
      "=",
      "value",
      ")",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what are some good restaurants in the bay area ?",
    "question_toks": [
      "what",
      "are",
      "some",
      "good",
      "restaurants",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"region0\"",
                null
              ]
            ]
          },
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "LOCATION",
      "AS",
      "t2",
      "JOIN",
      "restaurant",
      "AS",
      "t1",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.city_name",
      "IN",
      "(",
      "SELECT",
      "city_name",
      "FROM",
      "geographic",
      "WHERE",
      "region",
      "=",
      "``",
      "region0",
      "''",
      ")",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "location",
      "as",
      "t2",
      "join",
      "restaurant",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "city_name",
      "in",
      "(",
      "select",
      "city_name",
      "from",
      "geographic",
      "where",
      "region",
      "=",
      "value",
      ")",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "give me some good restaurants in the bay area ?",
    "question_toks": [
      "give",
      "me",
      "some",
      "good",
      "restaurants",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"region0\"",
                null
              ]
            ]
          },
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  },
  {
    "db_id": "restaurants",
    "query": "SELECT t2.house_number  ,  t1.name FROM LOCATION AS t2 JOIN restaurant AS t1 ON t1.id  =  t2.restaurant_id  WHERE t1.city_name IN ( SELECT city_name FROM geographic WHERE region  =  \"region0\" ) AND t1.rating  >  2.5;",
    "query_toks": [
      "SELECT",
      "t2.house_number",
      ",",
      "t1.name",
      "FROM",
      "LOCATION",
      "AS",
      "t2",
      "JOIN",
      "restaurant",
      "AS",
      "t1",
      "ON",
      "t1.id",
      "=",
      "t2.restaurant_id",
      "WHERE",
      "t1.city_name",
      "IN",
      "(",
      "SELECT",
      "city_name",
      "FROM",
      "geographic",
      "WHERE",
      "region",
      "=",
      "``",
      "region0",
      "''",
      ")",
      "AND",
      "t1.rating",
      ">",
      "2.5",
      ";"
    ],
    "query_toks_no_value": [
      "select",
      "t2",
      ".",
      "house_number",
      ",",
      "t1",
      ".",
      "name",
      "from",
      "location",
      "as",
      "t2",
      "join",
      "restaurant",
      "as",
      "t1",
      "on",
      "t1",
      ".",
      "id",
      "=",
      "t2",
      ".",
      "restaurant_id",
      "where",
      "t1",
      ".",
      "city_name",
      "in",
      "(",
      "select",
      "city_name",
      "from",
      "geographic",
      "where",
      "region",
      "=",
      "value",
      ")",
      "and",
      "t1",
      ".",
      "rating",
      ">",
      "value"
    ],
    "question": "what is a good restaurant in the bay area ?",
    "question_toks": [
      "what",
      "is",
      "a",
      "good",
      "restaurant",
      "in",
      "the",
      "bay",
      "area",
      "?"
    ],
    "sql": {
      "except": null,
      "from": {
        "conds": [
          [
            false,
            2,
            [
              0,
              [
                0,
                4,
                false
              ],
              null
            ],
            [
              0,
              9,
              false
            ],
            null
          ]
        ],
        "table_units": [
          [
            "table_unit",
            2
          ],
          [
            "table_unit",
            1
          ]
        ]
      },
      "groupBy": [],
      "having": [],
      "intersect": null,
      "limit": null,
      "orderBy": [],
      "select": [
        false,
        [
          [
            0,
            [
              0,
              [
                0,
                10,
                false
              ],
              null
            ]
          ],
          [
            0,
            [
              0,
              [
                0,
                5,
                false
              ],
              null
            ]
          ]
        ]
      ],
      "union": null,
      "where": [
        [
          false,
          8,
          [
            0,
            [
              0,
              7,
              false
            ],
            null
          ],
          {
            "except": null,
            "from": {
              "conds": [],
              "table_units": [
                [
                  "table_unit",
                  0
                ]
              ]
            },
            "groupBy": [],
            "having": [],
            "intersect": null,
            "limit": null,
            "orderBy": [],
            "select": [
              false,
              [
                [
                  0,
                  [
                    0,
                    [
                      0,
                      1,
                      false
                    ],
                    null
                  ]
                ]
              ]
            ],
            "union": null,
            "where": [
              [
                false,
                2,
                [
                  0,
                  [
                    0,
                    3,
                    false
                  ],
                  null
                ],
                "\"region0\"",
                null
              ]
            ]
          },
          null
        ],
        "and",
        [
          false,
          3,
          [
            0,
            [
              0,
              8,
              false
            ],
            null
          ],
          2.5,
          null
        ]
      ]
    }
  }
]